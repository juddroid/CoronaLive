{"ast":null,"code":"import Component from \"./component\";\nimport { getActiveSeriesMap } from \"../helpers/legend\";\nimport { getRGBA, getAlpha } from \"../helpers/color\";\nimport { isLabelAxisOnYAxis, getAxisName, getSizeKey } from \"../helpers/axes\";\nimport { getDataLabelsOptions } from \"../helpers/dataLabels\";\nimport { DEFAULT_BULLET_RANGE_OPACITY } from \"../helpers/theme\";\nimport { isNumber, omit, calculateSizeWithPercentString, pick, isNull } from \"../helpers/utils\";\nimport { message } from \"../message\";\nimport { makeRectResponderModel } from \"../helpers/responders\";\nconst DEFAULT_WIDTH_RATIO = 0.6;\nconst MARKER_LINE_DETECTION_SIZE = 5;\n\nfunction getRectSize(vertical, barWidth, barLength) {\n  return {\n    width: vertical ? barWidth : barLength,\n    height: vertical ? barLength : barWidth\n  };\n}\n\nfunction getStartX(seriesIndex, tickDistance, barWidth) {\n  return seriesIndex * tickDistance + (tickDistance - barWidth) / 2;\n}\n\nfunction makeBulletResponderModel(models, tooltipData) {\n  const {\n    range,\n    marker,\n    bullet\n  } = models;\n  const {\n    range: tooltipRange,\n    marker: toolipMarker,\n    bullet: tooltipBullet\n  } = tooltipData;\n  return [...range.map((m, index) => Object.assign(Object.assign({}, m), {\n    data: tooltipRange[index]\n  })), ...bullet.map((m, index) => Object.assign(Object.assign({}, m), {\n    data: tooltipBullet[index]\n  })), ...marker.map((m, index) => Object.assign(Object.assign({}, m), {\n    detectionSize: MARKER_LINE_DETECTION_SIZE,\n    data: toolipMarker[index]\n  }))];\n}\n\nexport default class BulletSeries extends Component {\n  constructor() {\n    super(...arguments);\n    this.models = {\n      range: [],\n      bullet: [],\n      marker: []\n    };\n    this.activatedResponders = [];\n    this.eventDetectType = 'point';\n    this.vertical = false;\n\n    this.onMouseoutComponent = () => {\n      this.eventBus.emit('seriesPointHovered', {\n        models: [],\n        name: this.name\n      });\n      this.eventBus.emit('renderHoveredSeries', {\n        models: [],\n        name: this.name\n      });\n      this.eventBus.emit('needDraw');\n    };\n\n    this.selectSeries = ({\n      seriesIndex,\n      state\n    }) => {\n      var _a;\n\n      if (!isNumber(seriesIndex)) {\n        return;\n      }\n\n      const {\n        name\n      } = (_a = state.series.bullet) === null || _a === void 0 ? void 0 : _a[seriesIndex];\n      const model = this.filterBulletResponder(this.responders).filter(({\n        name: dataName\n      }) => dataName === name);\n\n      if (!model) {\n        throw new Error(message.SELECT_SERIES_API_INDEX_ERROR);\n      }\n\n      this.eventBus.emit('renderSelectedSeries', {\n        models: this.getRespondersWithTheme(model, 'select'),\n        name: this.name\n      });\n      this.eventBus.emit('needDraw');\n    };\n\n    this.showTooltip = ({\n      seriesIndex,\n      state\n    }) => {\n      var _a;\n\n      if (!isNumber(seriesIndex)) {\n        return;\n      }\n\n      const {\n        name\n      } = (_a = state.series.bullet) === null || _a === void 0 ? void 0 : _a[seriesIndex];\n      const models = this.filterBulletResponder(this.responders).filter(({\n        name: dataName\n      }) => dataName === name);\n\n      if (!models.length) {\n        return;\n      }\n\n      this.onMousemove({\n        responders: models\n      });\n    };\n  }\n\n  initialize() {\n    this.type = 'series';\n    this.name = 'bullet';\n    this.eventBus.on('selectSeries', this.selectSeries);\n    this.eventBus.on('showTooltip', this.showTooltip);\n    this.eventBus.on('hideTooltip', this.onMouseoutComponent);\n  }\n\n  render(state) {\n    var _a, _b;\n\n    const {\n      layout,\n      axes,\n      series,\n      scale,\n      legend,\n      options,\n      theme,\n      categories\n    } = state;\n\n    if (!series.bullet) {\n      throw new Error(message.noDataError(this.name));\n    }\n\n    this.setEventDetectType(series, options);\n    this.theme = theme.series.bullet;\n    this.rect = layout.plot;\n    this.activeSeriesMap = getActiveSeriesMap(legend);\n    this.selectable = this.getSelectableOption(options);\n    this.vertical = !!((_b = (_a = options) === null || _a === void 0 ? void 0 : _a.series) === null || _b === void 0 ? void 0 : _b.vertical);\n    const labelAxisOnYAxis = isLabelAxisOnYAxis(series, options);\n    const {\n      labelAxisName,\n      valueAxisName\n    } = getAxisName(labelAxisOnYAxis, series);\n    const {\n      valueSizeKey\n    } = getSizeKey(labelAxisOnYAxis);\n    const {\n      tickDistance\n    } = axes[labelAxisName];\n    const {\n      zeroPosition\n    } = axes[valueAxisName];\n    const {\n      min,\n      max\n    } = scale[valueAxisName].limit;\n    const bulletData = series.bullet.data;\n    const renderOptions = Object.assign({\n      ratio: this.rect[valueSizeKey] / (max - min),\n      tickDistance,\n      zeroPosition\n    }, this.getBulletBarWidths(tickDistance));\n    const rangeModels = this.renderRanges(bulletData, renderOptions);\n    const bulletModels = this.renderBullet(bulletData, renderOptions);\n    const markerModels = this.renderMarkers(bulletData, renderOptions);\n    this.models.range = rangeModels;\n    this.models.bullet = bulletModels;\n    this.models.marker = markerModels;\n\n    if (!this.drawModels) {\n      this.drawModels = {\n        range: rangeModels.map(m => Object.assign({}, m)),\n        bullet: bulletModels.map(m => Object.assign(Object.assign({}, m), {\n          height: this.vertical ? 0 : m.height,\n          width: this.vertical ? m.width : 0,\n          y: this.vertical ? m.y + m.height : m.y\n        })),\n        marker: markerModels.map(m => Object.assign({}, m))\n      };\n    }\n\n    const models = {\n      range: rangeModels,\n      bullet: bulletModels,\n      marker: markerModels\n    };\n    const tooltipData = this.makeTooltipModel(models);\n    this.tooltipRectMap = this.makeTooltipRectMap(models, tooltipData);\n    this.responders = this.getBulletSeriesResponders(models, tooltipData, axes, categories);\n\n    if (getDataLabelsOptions(options, this.name).visible) {\n      this.renderDataLabels(this.getDataLabels([...rangeModels, ...bulletModels, ...markerModels], this.vertical, this.rect[valueSizeKey]));\n    }\n  }\n\n  getDataLabels(seriesModels, vertical, size) {\n    const {\n      dataLabels: dataLabelTheme\n    } = this.theme;\n    const bulletLabelTheme = omit(dataLabelTheme, 'marker');\n    const {\n      useSeriesColor,\n      color\n    } = bulletLabelTheme;\n    const {\n      marker\n    } = dataLabelTheme;\n    return seriesModels.filter(m => m.type === 'line' || m.modelType !== 'range').map(m => {\n      if (m.type === 'line') {\n        return Object.assign(Object.assign({}, m), {\n          x: vertical ? (m.x + m.x2) / 2 : m.x,\n          theme: Object.assign(Object.assign({}, marker), {\n            color: marker.useSeriesColor ? m.strokeStyle : marker.color\n          })\n        });\n      }\n\n      return Object.assign(Object.assign({}, m), {\n        direction: vertical ? 'top' : 'right',\n        plot: {\n          x: 0,\n          y: 0,\n          size\n        },\n        theme: Object.assign(Object.assign({}, bulletLabelTheme), {\n          color: useSeriesColor ? m.color : color\n        })\n      });\n    });\n  }\n\n  setEventDetectType(series, options) {\n    var _a, _b;\n\n    if ((_b = (_a = options) === null || _a === void 0 ? void 0 : _a.series) === null || _b === void 0 ? void 0 : _b.eventDetectType) {\n      this.eventDetectType = options.series.eventDetectType;\n    }\n  }\n\n  getBulletSeriesResponders(models, tooltipData, axes, categories) {\n    return this.eventDetectType === 'grouped' ? makeRectResponderModel(this.rect, this.vertical ? axes.xAxis : axes.yAxis, categories, this.vertical) : makeBulletResponderModel(models, tooltipData);\n  }\n\n  makeTooltipRectMap(models, tooltipData) {\n    const result = {};\n    Object.keys(models).forEach(seriesType => {\n      models[seriesType].forEach((m, index) => {\n        const label = m.name;\n\n        if (!result[label]) {\n          result[label] = [];\n        }\n\n        const tooltipModel = Object.assign(Object.assign({}, m), {\n          data: tooltipData[seriesType][index]\n        });\n        result[label].push(tooltipModel);\n      });\n    });\n    return result;\n  }\n\n  getBulletSeriesModelsFromRectResponders(responders) {\n    var _a;\n\n    if (!responders.length) {\n      return [];\n    }\n\n    return _a = this.tooltipRectMap[responders[0].label], _a !== null && _a !== void 0 ? _a : [];\n  }\n\n  getGroupedRect(responders, type) {\n    const bulletSeriesModels = this.getBulletSeriesModelsFromRectResponders(responders);\n    const {\n      color,\n      opacity\n    } = this.theme[type].groupedRect;\n    return bulletSeriesModels.length ? responders.map(m => Object.assign(Object.assign({}, m), {\n      color: getRGBA(color, opacity)\n    })) : [];\n  }\n\n  onMousemoveGroupedType(responders) {\n    const bulletSeriesModels = this.getBulletSeriesModelsFromRectResponders(responders);\n    this.eventBus.emit('renderHoveredSeries', {\n      models: [...this.getGroupedRect(responders, 'hover'), ...this.getRespondersWithTheme(bulletSeriesModels, 'hover')],\n      name: this.name,\n      eventDetectType: this.eventDetectType\n    });\n    this.activatedResponders = bulletSeriesModels;\n  }\n\n  onMousemove({\n    responders\n  }) {\n    if (this.eventDetectType === 'grouped') {\n      this.onMousemoveGroupedType(responders);\n    } else {\n      this.eventBus.emit('renderHoveredSeries', {\n        models: this.getRespondersWithTheme(responders, 'hover'),\n        name: this.name\n      });\n      this.activatedResponders = responders.length ? [responders[responders.length - 1]] : [];\n    }\n\n    this.eventBus.emit('seriesPointHovered', {\n      models: this.activatedResponders,\n      name: this.name\n    });\n    this.eventBus.emit('needDraw');\n  }\n\n  onClick({\n    responders\n  }) {\n    if (this.selectable) {\n      const models = this.eventDetectType === 'grouped' ? [...this.getGroupedRect(responders, 'select'), ...this.getRespondersWithTheme(this.getBulletSeriesModelsFromRectResponders(responders), 'select')] : this.getRespondersWithTheme(responders, 'select');\n      this.eventBus.emit('renderSelectedSeries', {\n        models,\n        name: this.name,\n        eventDetectType: this.eventDetectType\n      });\n      this.eventBus.emit('needDraw');\n    }\n  }\n\n  filterBulletResponder(responders) {\n    return responders.filter(model => {\n      var _a;\n\n      return ((_a = model) === null || _a === void 0 ? void 0 : _a.modelType) === 'bullet';\n    });\n  }\n\n  renderRanges(bulletData, {\n    tickDistance,\n    ratio,\n    zeroPosition,\n    rangeWidth\n  }) {\n    const rangeModels = [];\n    bulletData.forEach(({\n      ranges,\n      color,\n      name\n    }, seriesIndex) => {\n      (ranges !== null && ranges !== void 0 ? ranges : []).forEach((range, rangeIndex) => {\n        if (!isNull(range)) {\n          const [start, end] = range;\n          const barLength = (end - start) * ratio;\n          const rangeStartX = getStartX(seriesIndex, tickDistance, rangeWidth);\n          rangeModels.push(Object.assign(Object.assign({\n            type: 'rect',\n            name,\n            color: this.getRangeColor(getRGBA(color, this.getSeriesOpacity(name)), rangeIndex, name),\n            x: this.vertical ? rangeStartX : start * ratio + zeroPosition,\n            y: this.vertical ? zeroPosition - end * ratio : rangeStartX\n          }, getRectSize(this.vertical, rangeWidth, barLength)), {\n            modelType: 'range',\n            seriesColor: color,\n            tooltipColor: this.getRangeColor(color, rangeIndex, name, true),\n            value: range\n          }));\n        }\n      });\n    });\n    return rangeModels;\n  }\n\n  renderBullet(bulletData, {\n    tickDistance,\n    ratio,\n    zeroPosition,\n    bulletWidth\n  }) {\n    const {\n      borderColor,\n      borderWidth: thickness\n    } = this.theme;\n    return bulletData.reduce((acc, {\n      data,\n      color,\n      name\n    }, seriesIndex) => {\n      if (isNull(data)) {\n        return [...acc];\n      }\n\n      const bulletLength = Math.max(data * ratio, 2);\n      const bulletStartX = getStartX(seriesIndex, tickDistance, bulletWidth);\n      const bullet = Object.assign({\n        type: 'rect',\n        name,\n        color: getRGBA(color, this.getSeriesOpacity(name)),\n        x: this.vertical ? bulletStartX : zeroPosition,\n        y: this.vertical ? zeroPosition - bulletLength : bulletStartX,\n        thickness,\n        borderColor,\n        modelType: 'bullet',\n        seriesColor: color,\n        tooltipColor: color,\n        value: data\n      }, getRectSize(this.vertical, bulletWidth, bulletLength));\n      return [...acc, bullet];\n    }, []);\n  }\n\n  renderMarkers(bulletData, {\n    tickDistance,\n    ratio,\n    zeroPosition,\n    markerWidth\n  }) {\n    const {\n      markerLineWidth\n    } = this.theme;\n    const markerModels = [];\n    bulletData.forEach(({\n      markers,\n      color,\n      name\n    }, seriesIndex) => {\n      const markerStartX = getStartX(seriesIndex, tickDistance, markerWidth);\n      (markers !== null && markers !== void 0 ? markers : []).forEach(marker => {\n        if (!isNull(marker)) {\n          const dataPosition = marker * ratio;\n          const x = this.vertical ? markerStartX : dataPosition + zeroPosition;\n          const y = this.vertical ? zeroPosition - dataPosition : markerStartX;\n          markerModels.push({\n            type: 'line',\n            name,\n            x,\n            y,\n            x2: this.vertical ? x + markerWidth : x,\n            y2: this.vertical ? y : y + markerWidth,\n            strokeStyle: getRGBA(color, this.getSeriesOpacity(name)),\n            lineWidth: markerLineWidth,\n            seriesColor: color,\n            tooltipColor: color,\n            value: marker\n          });\n        }\n      });\n    });\n    return markerModels;\n  }\n\n  makeTooltipModel(seriesModels) {\n    const {\n      range,\n      bullet,\n      marker\n    } = seriesModels;\n    return {\n      range: this.makeTooltipData(range, 'Range'),\n      bullet: this.makeTooltipData(bullet, 'Actual'),\n      marker: this.makeTooltipData(marker, 'Marker')\n    };\n  }\n\n  makeTooltipData(data, title) {\n    return data.map(m => {\n      const {\n        name,\n        seriesColor,\n        tooltipColor,\n        value\n      } = m;\n      return {\n        label: name,\n        color: getRGBA(seriesColor, 1),\n        value: [{\n          title,\n          value,\n          color: tooltipColor\n        }],\n        templateType: 'bullet'\n      };\n    });\n  }\n\n  getBulletBarWidths(tickDistance) {\n    const {\n      barWidth: barThemeWidth,\n      barWidthRatios\n    } = this.theme;\n    const {\n      rangeRatio,\n      bulletRatio,\n      markerRatio\n    } = barWidthRatios;\n    const barWidth = barThemeWidth ? calculateSizeWithPercentString(tickDistance, barThemeWidth) : tickDistance * DEFAULT_WIDTH_RATIO;\n    return {\n      rangeWidth: barWidth * rangeRatio,\n      bulletWidth: barWidth * bulletRatio,\n      markerWidth: barWidth * markerRatio\n    };\n  }\n\n  getRangeColor(seriesColor, rangeIndex, seriesName, ignoreRestSeriesOpacity = false) {\n    const {\n      rangeColors\n    } = this.theme;\n    const hasThemeRangeColor = Array.isArray(rangeColors) && rangeColors[rangeIndex];\n    const color = hasThemeRangeColor ? rangeColors[rangeIndex] : seriesColor;\n    const opacity = hasThemeRangeColor ? getAlpha(rangeColors[rangeIndex]) : DEFAULT_BULLET_RANGE_OPACITY[rangeIndex];\n    return getRGBA(color, opacity * this.getSeriesOpacity(seriesName, ignoreRestSeriesOpacity));\n  }\n\n  getSeriesOpacity(seriesName, ignoreRestSeriesOpacity = false) {\n    const {\n      select,\n      areaOpacity\n    } = this.theme;\n    const active = this.activeSeriesMap[seriesName];\n    const selected = Object.values(this.activeSeriesMap).some(elem => !elem);\n    const restOpacity = ignoreRestSeriesOpacity ? areaOpacity : select.restSeries.areaOpacity;\n    const selectedOpacity = active ? select.areaOpacity : restOpacity;\n    return selected ? selectedOpacity : areaOpacity;\n  }\n\n  getRespondersWithTheme(responders, type) {\n    const {\n      color,\n      borderColor,\n      borderWidth: thickness\n    } = this.theme[type];\n    return this.filterBulletResponder(responders).map(model => {\n      return Object.assign(Object.assign({}, model), {\n        color: color !== null && color !== void 0 ? color : model.tooltipColor,\n        thickness,\n        borderColor,\n        style: [Object.assign({}, pick(this.theme[type], 'shadowBlur', 'shadowColor', 'shadowOffsetX', 'shadowOffsetY'))]\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/component/bulletSeries.js"],"names":["Component","getActiveSeriesMap","getRGBA","getAlpha","isLabelAxisOnYAxis","getAxisName","getSizeKey","getDataLabelsOptions","DEFAULT_BULLET_RANGE_OPACITY","isNumber","omit","calculateSizeWithPercentString","pick","isNull","message","makeRectResponderModel","DEFAULT_WIDTH_RATIO","MARKER_LINE_DETECTION_SIZE","getRectSize","vertical","barWidth","barLength","width","height","getStartX","seriesIndex","tickDistance","makeBulletResponderModel","models","tooltipData","range","marker","bullet","tooltipRange","toolipMarker","tooltipBullet","map","m","index","Object","assign","data","detectionSize","BulletSeries","constructor","arguments","activatedResponders","eventDetectType","onMouseoutComponent","eventBus","emit","name","selectSeries","state","_a","series","model","filterBulletResponder","responders","filter","dataName","Error","SELECT_SERIES_API_INDEX_ERROR","getRespondersWithTheme","showTooltip","length","onMousemove","initialize","type","on","render","_b","layout","axes","scale","legend","options","theme","categories","noDataError","setEventDetectType","rect","plot","activeSeriesMap","selectable","getSelectableOption","labelAxisOnYAxis","labelAxisName","valueAxisName","valueSizeKey","zeroPosition","min","max","limit","bulletData","renderOptions","ratio","getBulletBarWidths","rangeModels","renderRanges","bulletModels","renderBullet","markerModels","renderMarkers","drawModels","y","makeTooltipModel","tooltipRectMap","makeTooltipRectMap","getBulletSeriesResponders","visible","renderDataLabels","getDataLabels","seriesModels","size","dataLabels","dataLabelTheme","bulletLabelTheme","useSeriesColor","color","modelType","x","x2","strokeStyle","direction","xAxis","yAxis","result","keys","forEach","seriesType","label","tooltipModel","push","getBulletSeriesModelsFromRectResponders","getGroupedRect","bulletSeriesModels","opacity","groupedRect","onMousemoveGroupedType","onClick","rangeWidth","ranges","rangeIndex","start","end","rangeStartX","getRangeColor","getSeriesOpacity","seriesColor","tooltipColor","value","bulletWidth","borderColor","borderWidth","thickness","reduce","acc","bulletLength","Math","bulletStartX","markerWidth","markerLineWidth","markers","markerStartX","dataPosition","y2","lineWidth","makeTooltipData","title","templateType","barThemeWidth","barWidthRatios","rangeRatio","bulletRatio","markerRatio","seriesName","ignoreRestSeriesOpacity","rangeColors","hasThemeRangeColor","Array","isArray","select","areaOpacity","active","selected","values","some","elem","restOpacity","restSeries","selectedOpacity","style"],"mappings":"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","sourcesContent":["import Component from \"./component\";\nimport { getActiveSeriesMap } from \"../helpers/legend\";\nimport { getRGBA, getAlpha } from \"../helpers/color\";\nimport { isLabelAxisOnYAxis, getAxisName, getSizeKey } from \"../helpers/axes\";\nimport { getDataLabelsOptions } from \"../helpers/dataLabels\";\nimport { DEFAULT_BULLET_RANGE_OPACITY } from \"../helpers/theme\";\nimport { isNumber, omit, calculateSizeWithPercentString, pick, isNull } from \"../helpers/utils\";\nimport { message } from \"../message\";\nimport { makeRectResponderModel } from \"../helpers/responders\";\nconst DEFAULT_WIDTH_RATIO = 0.6;\nconst MARKER_LINE_DETECTION_SIZE = 5;\nfunction getRectSize(vertical, barWidth, barLength) {\n    return {\n        width: vertical ? barWidth : barLength,\n        height: vertical ? barLength : barWidth,\n    };\n}\nfunction getStartX(seriesIndex, tickDistance, barWidth) {\n    return seriesIndex * tickDistance + (tickDistance - barWidth) / 2;\n}\nfunction makeBulletResponderModel(models, tooltipData) {\n    const { range, marker, bullet } = models;\n    const { range: tooltipRange, marker: toolipMarker, bullet: tooltipBullet } = tooltipData;\n    return [\n        ...range.map((m, index) => (Object.assign(Object.assign({}, m), { data: tooltipRange[index] }))),\n        ...bullet.map((m, index) => (Object.assign(Object.assign({}, m), { data: tooltipBullet[index] }))),\n        ...marker.map((m, index) => (Object.assign(Object.assign({}, m), { detectionSize: MARKER_LINE_DETECTION_SIZE, data: toolipMarker[index] }))),\n    ];\n}\nexport default class BulletSeries extends Component {\n    constructor() {\n        super(...arguments);\n        this.models = { range: [], bullet: [], marker: [] };\n        this.activatedResponders = [];\n        this.eventDetectType = 'point';\n        this.vertical = false;\n        this.onMouseoutComponent = () => {\n            this.eventBus.emit('seriesPointHovered', { models: [], name: this.name });\n            this.eventBus.emit('renderHoveredSeries', {\n                models: [],\n                name: this.name,\n            });\n            this.eventBus.emit('needDraw');\n        };\n        this.selectSeries = ({ seriesIndex, state }) => {\n            var _a;\n            if (!isNumber(seriesIndex)) {\n                return;\n            }\n            const { name } = (_a = state.series.bullet) === null || _a === void 0 ? void 0 : _a[seriesIndex];\n            const model = this.filterBulletResponder(this.responders).filter(({ name: dataName }) => dataName === name);\n            if (!model) {\n                throw new Error(message.SELECT_SERIES_API_INDEX_ERROR);\n            }\n            this.eventBus.emit('renderSelectedSeries', {\n                models: this.getRespondersWithTheme(model, 'select'),\n                name: this.name,\n            });\n            this.eventBus.emit('needDraw');\n        };\n        this.showTooltip = ({ seriesIndex, state }) => {\n            var _a;\n            if (!isNumber(seriesIndex)) {\n                return;\n            }\n            const { name } = (_a = state.series.bullet) === null || _a === void 0 ? void 0 : _a[seriesIndex];\n            const models = this.filterBulletResponder(this.responders).filter(({ name: dataName }) => dataName === name);\n            if (!models.length) {\n                return;\n            }\n            this.onMousemove({ responders: models });\n        };\n    }\n    initialize() {\n        this.type = 'series';\n        this.name = 'bullet';\n        this.eventBus.on('selectSeries', this.selectSeries);\n        this.eventBus.on('showTooltip', this.showTooltip);\n        this.eventBus.on('hideTooltip', this.onMouseoutComponent);\n    }\n    render(state) {\n        var _a, _b;\n        const { layout, axes, series, scale, legend, options, theme, categories } = state;\n        if (!series.bullet) {\n            throw new Error(message.noDataError(this.name));\n        }\n        this.setEventDetectType(series, options);\n        this.theme = theme.series.bullet;\n        this.rect = layout.plot;\n        this.activeSeriesMap = getActiveSeriesMap(legend);\n        this.selectable = this.getSelectableOption(options);\n        this.vertical = !!((_b = (_a = options) === null || _a === void 0 ? void 0 : _a.series) === null || _b === void 0 ? void 0 : _b.vertical);\n        const labelAxisOnYAxis = isLabelAxisOnYAxis(series, options);\n        const { labelAxisName, valueAxisName } = getAxisName(labelAxisOnYAxis, series);\n        const { valueSizeKey } = getSizeKey(labelAxisOnYAxis);\n        const { tickDistance } = axes[labelAxisName];\n        const { zeroPosition } = axes[valueAxisName];\n        const { min, max } = scale[valueAxisName].limit;\n        const bulletData = series.bullet.data;\n        const renderOptions = Object.assign({ ratio: this.rect[valueSizeKey] / (max - min), tickDistance,\n            zeroPosition }, this.getBulletBarWidths(tickDistance));\n        const rangeModels = this.renderRanges(bulletData, renderOptions);\n        const bulletModels = this.renderBullet(bulletData, renderOptions);\n        const markerModels = this.renderMarkers(bulletData, renderOptions);\n        this.models.range = rangeModels;\n        this.models.bullet = bulletModels;\n        this.models.marker = markerModels;\n        if (!this.drawModels) {\n            this.drawModels = {\n                range: rangeModels.map((m) => (Object.assign({}, m))),\n                bullet: bulletModels.map((m) => (Object.assign(Object.assign({}, m), { height: this.vertical ? 0 : m.height, width: this.vertical ? m.width : 0, y: this.vertical ? m.y + m.height : m.y }))),\n                marker: markerModels.map((m) => (Object.assign({}, m))),\n            };\n        }\n        const models = { range: rangeModels, bullet: bulletModels, marker: markerModels };\n        const tooltipData = this.makeTooltipModel(models);\n        this.tooltipRectMap = this.makeTooltipRectMap(models, tooltipData);\n        this.responders = this.getBulletSeriesResponders(models, tooltipData, axes, categories);\n        if (getDataLabelsOptions(options, this.name).visible) {\n            this.renderDataLabels(this.getDataLabels([...rangeModels, ...bulletModels, ...markerModels], this.vertical, this.rect[valueSizeKey]));\n        }\n    }\n    getDataLabels(seriesModels, vertical, size) {\n        const { dataLabels: dataLabelTheme } = this.theme;\n        const bulletLabelTheme = omit(dataLabelTheme, 'marker');\n        const { useSeriesColor, color } = bulletLabelTheme;\n        const { marker } = dataLabelTheme;\n        return seriesModels\n            .filter((m) => m.type === 'line' || m.modelType !== 'range')\n            .map((m) => {\n            if (m.type === 'line') {\n                return Object.assign(Object.assign({}, m), { x: vertical ? (m.x + m.x2) / 2 : m.x, theme: Object.assign(Object.assign({}, marker), { color: marker.useSeriesColor ? m.strokeStyle : marker.color }) });\n            }\n            return Object.assign(Object.assign({}, m), { direction: vertical ? 'top' : 'right', plot: {\n                    x: 0,\n                    y: 0,\n                    size,\n                }, theme: Object.assign(Object.assign({}, bulletLabelTheme), { color: useSeriesColor ? m.color : color }) });\n        });\n    }\n    setEventDetectType(series, options) {\n        var _a, _b;\n        if ((_b = (_a = options) === null || _a === void 0 ? void 0 : _a.series) === null || _b === void 0 ? void 0 : _b.eventDetectType) {\n            this.eventDetectType = options.series.eventDetectType;\n        }\n    }\n    getBulletSeriesResponders(models, tooltipData, axes, categories) {\n        return this.eventDetectType === 'grouped'\n            ? makeRectResponderModel(this.rect, this.vertical ? axes.xAxis : axes.yAxis, categories, this.vertical)\n            : makeBulletResponderModel(models, tooltipData);\n    }\n    makeTooltipRectMap(models, tooltipData) {\n        const result = {};\n        Object.keys(models).forEach((seriesType) => {\n            models[seriesType].forEach((m, index) => {\n                const label = m.name;\n                if (!result[label]) {\n                    result[label] = [];\n                }\n                const tooltipModel = Object.assign(Object.assign({}, m), { data: tooltipData[seriesType][index] });\n                result[label].push(tooltipModel);\n            });\n        });\n        return result;\n    }\n    getBulletSeriesModelsFromRectResponders(responders) {\n        var _a;\n        if (!responders.length) {\n            return [];\n        }\n        return _a = this.tooltipRectMap[responders[0].label], (_a !== null && _a !== void 0 ? _a : []);\n    }\n    getGroupedRect(responders, type) {\n        const bulletSeriesModels = this.getBulletSeriesModelsFromRectResponders(responders);\n        const { color, opacity } = this.theme[type].groupedRect;\n        return bulletSeriesModels.length\n            ? responders.map((m) => (Object.assign(Object.assign({}, m), { color: getRGBA(color, opacity) })))\n            : [];\n    }\n    onMousemoveGroupedType(responders) {\n        const bulletSeriesModels = this.getBulletSeriesModelsFromRectResponders(responders);\n        this.eventBus.emit('renderHoveredSeries', {\n            models: [\n                ...this.getGroupedRect(responders, 'hover'),\n                ...this.getRespondersWithTheme(bulletSeriesModels, 'hover'),\n            ],\n            name: this.name,\n            eventDetectType: this.eventDetectType,\n        });\n        this.activatedResponders = bulletSeriesModels;\n    }\n    onMousemove({ responders }) {\n        if (this.eventDetectType === 'grouped') {\n            this.onMousemoveGroupedType(responders);\n        }\n        else {\n            this.eventBus.emit('renderHoveredSeries', {\n                models: this.getRespondersWithTheme(responders, 'hover'),\n                name: this.name,\n            });\n            this.activatedResponders = responders.length ? [responders[responders.length - 1]] : [];\n        }\n        this.eventBus.emit('seriesPointHovered', { models: this.activatedResponders, name: this.name });\n        this.eventBus.emit('needDraw');\n    }\n    onClick({ responders }) {\n        if (this.selectable) {\n            const models = this.eventDetectType === 'grouped'\n                ? [\n                    ...this.getGroupedRect(responders, 'select'),\n                    ...this.getRespondersWithTheme(this.getBulletSeriesModelsFromRectResponders(responders), 'select'),\n                ]\n                : this.getRespondersWithTheme(responders, 'select');\n            this.eventBus.emit('renderSelectedSeries', {\n                models,\n                name: this.name,\n                eventDetectType: this.eventDetectType,\n            });\n            this.eventBus.emit('needDraw');\n        }\n    }\n    filterBulletResponder(responders) {\n        return responders.filter((model) => { var _a; return ((_a = model) === null || _a === void 0 ? void 0 : _a.modelType) === 'bullet'; });\n    }\n    renderRanges(bulletData, { tickDistance, ratio, zeroPosition, rangeWidth }) {\n        const rangeModels = [];\n        bulletData.forEach(({ ranges, color, name }, seriesIndex) => {\n            ((ranges !== null && ranges !== void 0 ? ranges : [])).forEach((range, rangeIndex) => {\n                if (!isNull(range)) {\n                    const [start, end] = range;\n                    const barLength = (end - start) * ratio;\n                    const rangeStartX = getStartX(seriesIndex, tickDistance, rangeWidth);\n                    rangeModels.push(Object.assign(Object.assign({ type: 'rect', name, color: this.getRangeColor(getRGBA(color, this.getSeriesOpacity(name)), rangeIndex, name), x: this.vertical ? rangeStartX : start * ratio + zeroPosition, y: this.vertical ? zeroPosition - end * ratio : rangeStartX }, getRectSize(this.vertical, rangeWidth, barLength)), { modelType: 'range', seriesColor: color, tooltipColor: this.getRangeColor(color, rangeIndex, name, true), value: range }));\n                }\n            });\n        });\n        return rangeModels;\n    }\n    renderBullet(bulletData, { tickDistance, ratio, zeroPosition, bulletWidth }) {\n        const { borderColor, borderWidth: thickness } = this.theme;\n        return bulletData.reduce((acc, { data, color, name }, seriesIndex) => {\n            if (isNull(data)) {\n                return [...acc];\n            }\n            const bulletLength = Math.max(data * ratio, 2);\n            const bulletStartX = getStartX(seriesIndex, tickDistance, bulletWidth);\n            const bullet = Object.assign({ type: 'rect', name, color: getRGBA(color, this.getSeriesOpacity(name)), x: this.vertical ? bulletStartX : zeroPosition, y: this.vertical ? zeroPosition - bulletLength : bulletStartX, thickness,\n                borderColor, modelType: 'bullet', seriesColor: color, tooltipColor: color, value: data }, getRectSize(this.vertical, bulletWidth, bulletLength));\n            return [...acc, bullet];\n        }, []);\n    }\n    renderMarkers(bulletData, { tickDistance, ratio, zeroPosition, markerWidth }) {\n        const { markerLineWidth } = this.theme;\n        const markerModels = [];\n        bulletData.forEach(({ markers, color, name }, seriesIndex) => {\n            const markerStartX = getStartX(seriesIndex, tickDistance, markerWidth);\n            ((markers !== null && markers !== void 0 ? markers : [])).forEach((marker) => {\n                if (!isNull(marker)) {\n                    const dataPosition = marker * ratio;\n                    const x = this.vertical ? markerStartX : dataPosition + zeroPosition;\n                    const y = this.vertical ? zeroPosition - dataPosition : markerStartX;\n                    markerModels.push({\n                        type: 'line',\n                        name,\n                        x,\n                        y,\n                        x2: this.vertical ? x + markerWidth : x,\n                        y2: this.vertical ? y : y + markerWidth,\n                        strokeStyle: getRGBA(color, this.getSeriesOpacity(name)),\n                        lineWidth: markerLineWidth,\n                        seriesColor: color,\n                        tooltipColor: color,\n                        value: marker,\n                    });\n                }\n            });\n        });\n        return markerModels;\n    }\n    makeTooltipModel(seriesModels) {\n        const { range, bullet, marker } = seriesModels;\n        return {\n            range: this.makeTooltipData(range, 'Range'),\n            bullet: this.makeTooltipData(bullet, 'Actual'),\n            marker: this.makeTooltipData(marker, 'Marker'),\n        };\n    }\n    makeTooltipData(data, title) {\n        return data.map((m) => {\n            const { name, seriesColor, tooltipColor, value } = m;\n            return {\n                label: name,\n                color: getRGBA(seriesColor, 1),\n                value: [{ title, value, color: tooltipColor }],\n                templateType: 'bullet',\n            };\n        });\n    }\n    getBulletBarWidths(tickDistance) {\n        const { barWidth: barThemeWidth, barWidthRatios } = this.theme;\n        const { rangeRatio, bulletRatio, markerRatio } = barWidthRatios;\n        const barWidth = barThemeWidth\n            ? calculateSizeWithPercentString(tickDistance, barThemeWidth)\n            : tickDistance * DEFAULT_WIDTH_RATIO;\n        return {\n            rangeWidth: barWidth * rangeRatio,\n            bulletWidth: barWidth * bulletRatio,\n            markerWidth: barWidth * markerRatio,\n        };\n    }\n    getRangeColor(seriesColor, rangeIndex, seriesName, ignoreRestSeriesOpacity = false) {\n        const { rangeColors } = this.theme;\n        const hasThemeRangeColor = Array.isArray(rangeColors) && rangeColors[rangeIndex];\n        const color = hasThemeRangeColor ? rangeColors[rangeIndex] : seriesColor;\n        const opacity = hasThemeRangeColor\n            ? getAlpha(rangeColors[rangeIndex])\n            : DEFAULT_BULLET_RANGE_OPACITY[rangeIndex];\n        return getRGBA(color, opacity * this.getSeriesOpacity(seriesName, ignoreRestSeriesOpacity));\n    }\n    getSeriesOpacity(seriesName, ignoreRestSeriesOpacity = false) {\n        const { select, areaOpacity } = this.theme;\n        const active = this.activeSeriesMap[seriesName];\n        const selected = Object.values(this.activeSeriesMap).some((elem) => !elem);\n        const restOpacity = ignoreRestSeriesOpacity ? areaOpacity : select.restSeries.areaOpacity;\n        const selectedOpacity = active ? select.areaOpacity : restOpacity;\n        return selected ? selectedOpacity : areaOpacity;\n    }\n    getRespondersWithTheme(responders, type) {\n        const { color, borderColor, borderWidth: thickness } = this.theme[type];\n        return this.filterBulletResponder(responders).map((model) => {\n            return Object.assign(Object.assign({}, model), { color: (color !== null && color !== void 0 ? color : model.tooltipColor), thickness,\n                borderColor, style: [\n                    Object.assign({}, pick(this.theme[type], 'shadowBlur', 'shadowColor', 'shadowOffsetX', 'shadowOffsetY')),\n                ] });\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}