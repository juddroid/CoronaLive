{"ast":null,"code":"import { isString, isUndefined, isNumber, includes, isNull, range } from \"./utils\";\nimport { getCoordinateXValue, getCoordinateYValue } from \"./coordinate\";\nconst DATA_URI_HEADERS = {\n  xls: 'data:application/vnd.ms-excel;base64,',\n  csv: 'data:text/csv;charset=utf-8,%EF%BB%BF'\n  /* BOM for utf-8 */\n\n};\n\nfunction getDownloadMethod() {\n  let method;\n  const isDownloadAttributeSupported = !isUndefined(document.createElement('a').download);\n  const isMSSaveOrOpenBlobSupported = !isUndefined(window.Blob && window.navigator.msSaveOrOpenBlob);\n\n  if (isMSSaveOrOpenBlobSupported) {\n    method = downloadWithMSSaveOrOpenBlob;\n  } else if (isDownloadAttributeSupported) {\n    method = downloadWithAnchorElementDownloadAttribute;\n  }\n\n  return method;\n}\n/**\n * Base64 string to blob\n * original source ref: https://github.com/miguelmota/base64toblob/blob/master/base64toblob.js\n * Licence: MIT Licence\n */\n\n\nfunction base64toBlob(base64String) {\n  const contentType = base64String.substr(0, base64String.indexOf(';base64,')).substr(base64String.indexOf(':') + 1);\n  const sliceSize = 1024;\n  const byteCharacters = atob(base64String.substr(base64String.indexOf(',') + 1));\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n    const byteNumbers = new Array(slice.length);\n\n    for (let i = 0; i < slice.length; i += 1) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    byteArrays.push(new window.Uint8Array(byteNumbers));\n  }\n\n  try {\n    // for IE 11\n    return new Blob(byteArrays, {\n      type: contentType\n    });\n  } catch (e) {\n    // for IE 10\n    return new Blob(byteArrays.map(byteArr => byteArr.buffer), {\n      type: contentType\n    });\n  }\n}\n\nfunction isImageExtension(extension) {\n  return extension === 'jpeg' || extension === 'png';\n}\n\nfunction downloadWithMSSaveOrOpenBlob(fileName, extension, content, contentType) {\n  const blobObject = isImageExtension(extension) ? base64toBlob(content) : new Blob([content], {\n    type: contentType\n  });\n  window.navigator.msSaveOrOpenBlob(blobObject, `${fileName}.${extension}`);\n}\n\nfunction downloadWithAnchorElementDownloadAttribute(fileName, extension, content) {\n  if (content) {\n    const anchorElement = document.createElement('a');\n    anchorElement.href = content;\n    anchorElement.target = '_blank';\n    anchorElement.download = `${fileName}.${extension}`;\n    document.body.appendChild(anchorElement);\n    anchorElement.click();\n    anchorElement.remove();\n  }\n}\n\nfunction oneLineTrim(...args) {\n  const normalTag = (template, ...expressions) => template.reduce((accumulator, part, i) => accumulator + expressions[i - 1] + part);\n\n  return normalTag(...args).replace(/\\n\\s*/g, '');\n}\n\nfunction isNeedDataEncoding() {\n  const isDownloadAttributeSupported = !isUndefined(document.createElement('a').download);\n  const isMSSaveOrOpenBlobSupported = !isUndefined(window.Blob && window.navigator.msSaveOrOpenBlob);\n  return !isMSSaveOrOpenBlobSupported && isDownloadAttributeSupported;\n}\n\nfunction getBulletLongestArrayLength(arr, field) {\n  return arr.reduce((acc, cur, idx) => {\n    var _a, _b;\n\n    return !idx || acc < ((_b = (_a = cur) === null || _a === void 0 ? void 0 : _a[field]) === null || _b === void 0 ? void 0 : _b.length) ? cur[field].length : acc;\n  }, 0);\n}\n\nfunction makeBulletExportData({\n  series\n}) {\n  const seriesData = series.bullet.data;\n  const markerCount = getBulletLongestArrayLength(seriesData, 'markers');\n  const rangeCount = getBulletLongestArrayLength(seriesData, 'ranges');\n  const rangesHeaders = range(0, rangeCount).map(idx => `Range ${idx + 1}`);\n  const markerHeaders = range(0, markerCount).map(idx => `Marker ${idx + 1}`);\n  return seriesData.reduce((acc, {\n    data,\n    markers,\n    name,\n    ranges\n  }) => {\n    const rangeDatum = rangesHeaders.map((_, index) => {\n      var _a;\n\n      const rangeData = (_a = ranges) === null || _a === void 0 ? void 0 : _a[index];\n      return rangeData ? `${rangeData[0]} ~ ${rangeData[1]}` : '';\n    });\n    const markerDatum = markerHeaders.map((_, index) => {\n      var _a, _b;\n\n      return _b = (_a = markers) === null || _a === void 0 ? void 0 : _a[index], _b !== null && _b !== void 0 ? _b : '';\n    });\n    return [...acc, [name, data !== null && data !== void 0 ? data : '', ...rangeDatum, ...markerDatum]];\n  }, [['', 'Actual', ...rangesHeaders, ...markerHeaders]]);\n}\n\nfunction makeHeatmapExportData({\n  categories,\n  series\n}) {\n  const xCategories = categories.x;\n  return series.heatmap.data.reduce((acc, {\n    data,\n    yCategory\n  }) => [...acc, [yCategory, ...data.map(datum => isNull(datum) ? '' : datum)]], [['', ...xCategories]]);\n}\n\nfunction recursiveTreemapData({\n  label,\n  data,\n  children = []\n}, result) {\n  if (data) {\n    result.push([label, data]);\n  }\n\n  children.forEach(childrenData => recursiveTreemapData(childrenData, result));\n  return result;\n}\n\nfunction makeTreemapExportData(exportData) {\n  const {\n    series\n  } = exportData;\n  const result = [['Label', 'Data']];\n  series.treemap.data.forEach(datum => {\n    recursiveTreemapData(datum, result);\n  });\n  return result;\n}\n\nfunction makeBubbleExportData(exportData) {\n  const {\n    series\n  } = exportData;\n  return series.bubble.data.reduce((acc, {\n    name,\n    data\n  }) => [...acc, ...data.map(datum => isNull(datum) ? [] : [name, datum.label, String(datum.x), datum.y, datum.r])], [['Name', 'Label', 'X', 'Y', 'Radius']]);\n}\n\nfunction makeBoxPlotExportData(exportData) {\n  var _a;\n\n  const {\n    series\n  } = exportData;\n  const categories = (_a = exportData.categories, _a !== null && _a !== void 0 ? _a : []);\n  return series.boxPlot.data.reduce((acc, {\n    name,\n    data,\n    outliers\n  }) => {\n    const values = (data !== null && data !== void 0 ? data : []).map((rawData, index) => {\n      var _a;\n\n      const outlierValue = (_a = (outliers !== null && outliers !== void 0 ? outliers : []).find(outlier => outlier[0] === index)) === null || _a === void 0 ? void 0 : _a[1];\n      const value = outlierValue ? [...rawData, outlierValue] : [...rawData];\n      return value.join();\n    });\n    return [...acc, [name, ...values]];\n  }, [['', ...categories]]);\n}\n\nfunction makePieExportData(exportData) {\n  var _a;\n\n  const {\n    series\n  } = exportData;\n  const categories = (_a = exportData.categories, _a !== null && _a !== void 0 ? _a : []);\n  return series.pie.data.reduce((acc, {\n    name,\n    data\n  }) => {\n    const values = Array.isArray(data) ? (data !== null && data !== void 0 ? data : []).reduce((accNestedPieValue, value) => {\n      var _a;\n\n      return [...accNestedPieValue, [value.name, (_a = value.data, _a !== null && _a !== void 0 ? _a : '')]];\n    }, []) : [[name, data !== null && data !== void 0 ? data : '']];\n    return [...acc, ...values];\n  }, categories.length ? [['', ...categories]] : []);\n}\n\nfunction makeCoordinateExportDataValues(type, categories, data) {\n  return categories.map((category, index) => {\n    if (type === 'area' && Array.isArray(data[index])) {\n      return data[index].join();\n    }\n\n    const foundItem = data.find(value => category === String(getCoordinateXValue(value)));\n    return foundItem ? getCoordinateYValue(foundItem) : '';\n  });\n}\n\nfunction makeExportData(exportData) {\n  const {\n    series\n  } = exportData;\n  const categories = exportData.categories;\n  return Object.keys(series).reduce((acc, type) => {\n    const result = series[type].map(({\n      name,\n      data\n    }) => {\n      const values = !isNumber(data[0]) && includes(['line', 'area', 'scatter'], type) ? makeCoordinateExportDataValues(type, categories, data) : data.map(value => Array.isArray(value) ? value.join() : value);\n      return [name, ...values];\n    });\n    return [...acc, ...result];\n  }, [['', ...categories]]);\n}\n\nfunction get2DArrayFromRawData(exportData) {\n  let result;\n  const {\n    series\n  } = exportData;\n\n  if (series.bullet) {\n    result = makeBulletExportData(exportData);\n  } else if (series.heatmap) {\n    result = makeHeatmapExportData(exportData);\n  } else if (series.bubble) {\n    result = makeBubbleExportData(exportData);\n  } else if (series.boxPlot) {\n    result = makeBoxPlotExportData(exportData);\n  } else if (series.pie) {\n    result = makePieExportData(exportData);\n  } else if (series.treemap) {\n    result = makeTreemapExportData(exportData);\n  } else {\n    result = makeExportData(exportData);\n  }\n\n  return result;\n}\n\nfunction getTableElementStringForXLS(chartData2DArray) {\n  let tableElementString = '<table>';\n  chartData2DArray.forEach((row, rowIndex) => {\n    const cellTagName = rowIndex === 0 ? 'th' : 'td';\n    tableElementString += '<tr>';\n    row.forEach((cell, cellIndex) => {\n      const cellNumberClass = rowIndex !== 0 || cellIndex === 0 ? ' class=\"number\"' : '';\n      const cellString = `<${cellTagName}${cellNumberClass}>${cell}</${cellTagName}>`;\n      tableElementString += cellString;\n    });\n    tableElementString += '</tr>';\n  });\n  tableElementString += '</table>';\n  return tableElementString;\n}\n\nfunction makeXLSBodyWithRawData(chartData2DArray) {\n  return oneLineTrim`<html xmlns:o=\"urn:schemas-microsoft-com:office:office\"\n        xmlns:x=\"urn:schemas-microsoft-com:office:excel\"\n        xmlns=\"http://www.w3.org/TR/REC-html40\">\n        <head>\n            <!--[if gte mso 9]>\n                <xml>\n                    <x:ExcelWorkbook>\n                        <x:ExcelWorksheets>\n                            <x:ExcelWorksheet>\n                                <x:Name>Ark1</x:Name>\n                                <x:WorksheetOptions>\n                                    <x:DisplayGridlines/>\n                                </x:WorksheetOptions>\n                            </x:ExcelWorksheet>\n                        </x:ExcelWorksheets>\n                        </x:ExcelWorkbook>\n                </xml>\n            <![endif]-->\n            <meta name=ProgId content=Excel.Sheet>\n            <meta charset=UTF-8>\n        </head>\n        <body>\n            ${getTableElementStringForXLS(chartData2DArray)}\n        </body>\n        </html>`;\n}\n\nfunction makeCSVBodyWithRawData(chartData2DArray, option = {}) {\n  const {\n    lineDelimiter = '\\u000a',\n    itemDelimiter = ','\n  } = option;\n  const lastRowIndex = chartData2DArray.length - 1;\n  let csvText = '';\n  chartData2DArray.forEach((row, rowIndex) => {\n    const lastCellIndex = row.length - 1;\n    row.forEach((cell, cellIndex) => {\n      const cellContent = isNumber(cell) ? cell : `\"${cell}\"`;\n      csvText += cellContent;\n\n      if (cellIndex < lastCellIndex) {\n        csvText += itemDelimiter;\n      }\n    });\n\n    if (rowIndex < lastRowIndex) {\n      csvText += lineDelimiter;\n    }\n  });\n  return csvText;\n}\n\nexport function execDownload(fileName, extension, content, contentType) {\n  const downloadMethod = getDownloadMethod();\n\n  if (!isString(content) || !downloadMethod) {\n    return;\n  }\n\n  downloadMethod(fileName, extension, content, contentType);\n}\nexport function downloadSpreadSheet(fileName, extension, data) {\n  const chartData2DArray = get2DArrayFromRawData(data);\n  const contentType = DATA_URI_HEADERS[extension].replace(/(data:|;base64,|,%EF%BB%BF)/g, '');\n  let content = '';\n\n  if (extension === 'csv') {\n    content = makeCSVBodyWithRawData(chartData2DArray);\n  } else {\n    content = makeXLSBodyWithRawData(chartData2DArray);\n  }\n\n  if (isNeedDataEncoding()) {\n    if (extension !== 'csv') {\n      // base64 encoding for data URI scheme.\n      content = window.btoa(unescape(encodeURIComponent(content)));\n    }\n\n    content = DATA_URI_HEADERS[extension] + content;\n  }\n\n  execDownload(fileName, extension, content, contentType);\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/helpers/downloader.js"],"names":["isString","isUndefined","isNumber","includes","isNull","range","getCoordinateXValue","getCoordinateYValue","DATA_URI_HEADERS","xls","csv","getDownloadMethod","method","isDownloadAttributeSupported","document","createElement","download","isMSSaveOrOpenBlobSupported","window","Blob","navigator","msSaveOrOpenBlob","downloadWithMSSaveOrOpenBlob","downloadWithAnchorElementDownloadAttribute","base64toBlob","base64String","contentType","substr","indexOf","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","push","Uint8Array","type","e","map","byteArr","buffer","isImageExtension","extension","fileName","content","blobObject","anchorElement","href","target","body","appendChild","click","remove","oneLineTrim","args","normalTag","template","expressions","reduce","accumulator","part","replace","isNeedDataEncoding","getBulletLongestArrayLength","arr","field","acc","cur","idx","_a","_b","makeBulletExportData","series","seriesData","bullet","data","markerCount","rangeCount","rangesHeaders","markerHeaders","markers","name","ranges","rangeDatum","_","index","rangeData","markerDatum","makeHeatmapExportData","categories","xCategories","x","heatmap","yCategory","datum","recursiveTreemapData","label","children","result","forEach","childrenData","makeTreemapExportData","exportData","treemap","makeBubbleExportData","bubble","String","y","r","makeBoxPlotExportData","boxPlot","outliers","values","rawData","outlierValue","find","outlier","value","join","makePieExportData","pie","isArray","accNestedPieValue","makeCoordinateExportDataValues","category","foundItem","makeExportData","Object","keys","get2DArrayFromRawData","getTableElementStringForXLS","chartData2DArray","tableElementString","row","rowIndex","cellTagName","cell","cellIndex","cellNumberClass","cellString","makeXLSBodyWithRawData","makeCSVBodyWithRawData","option","lineDelimiter","itemDelimiter","lastRowIndex","csvText","lastCellIndex","cellContent","execDownload","downloadMethod","downloadSpreadSheet","btoa","unescape","encodeURIComponent"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoDC,MAApD,EAA4DC,KAA5D,QAAyE,SAAzE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,cAAzD;AACA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,GAAG,EAAE,uCADgB;AAErBC,EAAAA,GAAG,EAAE;AAAwC;;AAFxB,CAAzB;;AAIA,SAASC,iBAAT,GAA6B;AACzB,MAAIC,MAAJ;AACA,QAAMC,4BAA4B,GAAG,CAACZ,WAAW,CAACa,QAAQ,CAACC,aAAT,CAAuB,GAAvB,EAA4BC,QAA7B,CAAjD;AACA,QAAMC,2BAA2B,GAAG,CAAChB,WAAW,CAACiB,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACE,SAAP,CAAiBC,gBAAjC,CAAhD;;AACA,MAAIJ,2BAAJ,EAAiC;AAC7BL,IAAAA,MAAM,GAAGU,4BAAT;AACH,GAFD,MAGK,IAAIT,4BAAJ,EAAkC;AACnCD,IAAAA,MAAM,GAAGW,0CAAT;AACH;;AACD,SAAOX,MAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASY,YAAT,CAAsBC,YAAtB,EAAoC;AAChC,QAAMC,WAAW,GAAGD,YAAY,CAC3BE,MADe,CACR,CADQ,EACLF,YAAY,CAACG,OAAb,CAAqB,UAArB,CADK,EAEfD,MAFe,CAERF,YAAY,CAACG,OAAb,CAAqB,GAArB,IAA4B,CAFpB,CAApB;AAGA,QAAMC,SAAS,GAAG,IAAlB;AACA,QAAMC,cAAc,GAAGC,IAAI,CAACN,YAAY,CAACE,MAAb,CAAoBF,YAAY,CAACG,OAAb,CAAqB,GAArB,IAA4B,CAAhD,CAAD,CAA3B;AACA,QAAMI,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGH,cAAc,CAACI,MAA7C,EAAqDD,MAAM,IAAIJ,SAA/D,EAA0E;AACtE,UAAMM,KAAK,GAAGL,cAAc,CAACK,KAAf,CAAqBF,MAArB,EAA6BA,MAAM,GAAGJ,SAAtC,CAAd;AACA,UAAMO,WAAW,GAAG,IAAIC,KAAJ,CAAUF,KAAK,CAACD,MAAhB,CAApB;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACD,MAA1B,EAAkCI,CAAC,IAAI,CAAvC,EAA0C;AACtCF,MAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBH,KAAK,CAACI,UAAN,CAAiBD,CAAjB,CAAjB;AACH;;AACDN,IAAAA,UAAU,CAACQ,IAAX,CAAgB,IAAItB,MAAM,CAACuB,UAAX,CAAsBL,WAAtB,CAAhB;AACH;;AACD,MAAI;AACA;AACA,WAAO,IAAIjB,IAAJ,CAASa,UAAT,EAAqB;AAAEU,MAAAA,IAAI,EAAEhB;AAAR,KAArB,CAAP;AACH,GAHD,CAIA,OAAOiB,CAAP,EAAU;AACN;AACA,WAAO,IAAIxB,IAAJ,CAASa,UAAU,CAACY,GAAX,CAAgBC,OAAD,IAAaA,OAAO,CAACC,MAApC,CAAT,EAAsD;AAAEJ,MAAAA,IAAI,EAAEhB;AAAR,KAAtD,CAAP;AACH;AACJ;;AACD,SAASqB,gBAAT,CAA0BC,SAA1B,EAAqC;AACjC,SAAOA,SAAS,KAAK,MAAd,IAAwBA,SAAS,KAAK,KAA7C;AACH;;AACD,SAAS1B,4BAAT,CAAsC2B,QAAtC,EAAgDD,SAAhD,EAA2DE,OAA3D,EAAoExB,WAApE,EAAiF;AAC7E,QAAMyB,UAAU,GAAGJ,gBAAgB,CAACC,SAAD,CAAhB,GACbxB,YAAY,CAAC0B,OAAD,CADC,GAEb,IAAI/B,IAAJ,CAAS,CAAC+B,OAAD,CAAT,EAAoB;AAAER,IAAAA,IAAI,EAAEhB;AAAR,GAApB,CAFN;AAGAR,EAAAA,MAAM,CAACE,SAAP,CAAiBC,gBAAjB,CAAkC8B,UAAlC,EAA+C,GAAEF,QAAS,IAAGD,SAAU,EAAvE;AACH;;AACD,SAASzB,0CAAT,CAAoD0B,QAApD,EAA8DD,SAA9D,EAAyEE,OAAzE,EAAkF;AAC9E,MAAIA,OAAJ,EAAa;AACT,UAAME,aAAa,GAAGtC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAtB;AACAqC,IAAAA,aAAa,CAACC,IAAd,GAAqBH,OAArB;AACAE,IAAAA,aAAa,CAACE,MAAd,GAAuB,QAAvB;AACAF,IAAAA,aAAa,CAACpC,QAAd,GAA0B,GAAEiC,QAAS,IAAGD,SAAU,EAAlD;AACAlC,IAAAA,QAAQ,CAACyC,IAAT,CAAcC,WAAd,CAA0BJ,aAA1B;AACAA,IAAAA,aAAa,CAACK,KAAd;AACAL,IAAAA,aAAa,CAACM,MAAd;AACH;AACJ;;AACD,SAASC,WAAT,CAAqB,GAAGC,IAAxB,EAA8B;AAC1B,QAAMC,SAAS,GAAG,CAACC,QAAD,EAAW,GAAGC,WAAd,KAA8BD,QAAQ,CAACE,MAAT,CAAgB,CAACC,WAAD,EAAcC,IAAd,EAAoB5B,CAApB,KAA0B2B,WAAW,GAAGF,WAAW,CAACzB,CAAC,GAAG,CAAL,CAAzB,GAAmC4B,IAA7E,CAAhD;;AACA,SAAOL,SAAS,CAAC,GAAGD,IAAJ,CAAT,CAAmBO,OAAnB,CAA2B,QAA3B,EAAqC,EAArC,CAAP;AACH;;AACD,SAASC,kBAAT,GAA8B;AAC1B,QAAMvD,4BAA4B,GAAG,CAACZ,WAAW,CAACa,QAAQ,CAACC,aAAT,CAAuB,GAAvB,EAA4BC,QAA7B,CAAjD;AACA,QAAMC,2BAA2B,GAAG,CAAChB,WAAW,CAACiB,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACE,SAAP,CAAiBC,gBAAjC,CAAhD;AACA,SAAO,CAACJ,2BAAD,IAAgCJ,4BAAvC;AACH;;AACD,SAASwD,2BAAT,CAAqCC,GAArC,EAA0CC,KAA1C,EAAiD;AAC7C,SAAOD,GAAG,CAACN,MAAJ,CAAW,CAACQ,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;AAAE,QAAIC,EAAJ,EAAQC,EAAR;;AAAY,WAAQ,CAACF,GAAD,IAAQF,GAAG,IAAI,CAACI,EAAE,GAAG,CAACD,EAAE,GAAGF,GAAN,MAAe,IAAf,IAAuBE,EAAE,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,EAAE,CAACJ,KAAD,CAAxD,MAAqE,IAArE,IAA6EK,EAAE,KAAK,KAAK,CAAzF,GAA6F,KAAK,CAAlG,GAAsGA,EAAE,CAAC1C,MAA7G,CAAX,GAAkIuC,GAAG,CAACF,KAAD,CAAH,CAAWrC,MAA7I,GAAsJsC,GAA9J;AAAqK,GAAjN,EAAmN,CAAnN,CAAP;AACH;;AACD,SAASK,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AACtC,QAAMC,UAAU,GAAGD,MAAM,CAACE,MAAP,CAAcC,IAAjC;AACA,QAAMC,WAAW,GAAGb,2BAA2B,CAACU,UAAD,EAAa,SAAb,CAA/C;AACA,QAAMI,UAAU,GAAGd,2BAA2B,CAACU,UAAD,EAAa,QAAb,CAA9C;AACA,QAAMK,aAAa,GAAG/E,KAAK,CAAC,CAAD,EAAI8E,UAAJ,CAAL,CAAqBvC,GAArB,CAA0B8B,GAAD,IAAU,SAAQA,GAAG,GAAG,CAAE,EAAnD,CAAtB;AACA,QAAMW,aAAa,GAAGhF,KAAK,CAAC,CAAD,EAAI6E,WAAJ,CAAL,CAAsBtC,GAAtB,CAA2B8B,GAAD,IAAU,UAASA,GAAG,GAAG,CAAE,EAArD,CAAtB;AACA,SAAOK,UAAU,CAACf,MAAX,CAAkB,CAACQ,GAAD,EAAM;AAAES,IAAAA,IAAF;AAAQK,IAAAA,OAAR;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA;AAAvB,GAAN,KAA0C;AAC/D,UAAMC,UAAU,GAAGL,aAAa,CAACxC,GAAd,CAAkB,CAAC8C,CAAD,EAAIC,KAAJ,KAAc;AAC/C,UAAIhB,EAAJ;;AACA,YAAMiB,SAAS,GAAG,CAACjB,EAAE,GAAGa,MAAN,MAAkB,IAAlB,IAA0Bb,EAAE,KAAK,KAAK,CAAtC,GAA0C,KAAK,CAA/C,GAAmDA,EAAE,CAACgB,KAAD,CAAvE;AACA,aAAOC,SAAS,GAAI,GAAEA,SAAS,CAAC,CAAD,CAAI,MAAKA,SAAS,CAAC,CAAD,CAAI,EAArC,GAAyC,EAAzD;AACH,KAJkB,CAAnB;AAKA,UAAMC,WAAW,GAAGR,aAAa,CAACzC,GAAd,CAAkB,CAAC8C,CAAD,EAAIC,KAAJ,KAAc;AAAE,UAAIhB,EAAJ,EAAQC,EAAR;;AAAY,aAAOA,EAAE,GAAG,CAACD,EAAE,GAAGW,OAAN,MAAmB,IAAnB,IAA2BX,EAAE,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,EAAE,CAACgB,KAAD,CAA3D,EAAqEf,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAK,KAAK,CAA3B,GAA+BA,EAA/B,GAAoC,EAAhH;AAAsH,KAApK,CAApB;AACA,WAAO,CAAC,GAAGJ,GAAJ,EAAS,CAACe,IAAD,EAAQN,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0C,EAAlD,EAAuD,GAAGQ,UAA1D,EAAsE,GAAGI,WAAzE,CAAT,CAAP;AACH,GARM,EAQJ,CAAC,CAAC,EAAD,EAAK,QAAL,EAAe,GAAGT,aAAlB,EAAiC,GAAGC,aAApC,CAAD,CARI,CAAP;AASH;;AACD,SAASS,qBAAT,CAA+B;AAAEC,EAAAA,UAAF;AAAcjB,EAAAA;AAAd,CAA/B,EAAuD;AACnD,QAAMkB,WAAW,GAAGD,UAAU,CAACE,CAA/B;AACA,SAAOnB,MAAM,CAACoB,OAAP,CAAejB,IAAf,CAAoBjB,MAApB,CAA2B,CAACQ,GAAD,EAAM;AAAES,IAAAA,IAAF;AAAQkB,IAAAA;AAAR,GAAN,KAA8B,CAC5D,GAAG3B,GADyD,EAE5D,CAAC2B,SAAD,EAAY,GAAGlB,IAAI,CAACrC,GAAL,CAAUwD,KAAD,IAAYhG,MAAM,CAACgG,KAAD,CAAN,GAAgB,EAAhB,GAAqBA,KAA1C,CAAf,CAF4D,CAAzD,EAGJ,CAAC,CAAC,EAAD,EAAK,GAAGJ,WAAR,CAAD,CAHI,CAAP;AAIH;;AACD,SAASK,oBAAT,CAA8B;AAAEC,EAAAA,KAAF;AAASrB,EAAAA,IAAT;AAAesB,EAAAA,QAAQ,GAAG;AAA1B,CAA9B,EAA8DC,MAA9D,EAAsE;AAClE,MAAIvB,IAAJ,EAAU;AACNuB,IAAAA,MAAM,CAAChE,IAAP,CAAY,CAAC8D,KAAD,EAAQrB,IAAR,CAAZ;AACH;;AACDsB,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,YAAD,IAAkBL,oBAAoB,CAACK,YAAD,EAAeF,MAAf,CAAvD;AACA,SAAOA,MAAP;AACH;;AACD,SAASG,qBAAT,CAA+BC,UAA/B,EAA2C;AACvC,QAAM;AAAE9B,IAAAA;AAAF,MAAa8B,UAAnB;AACA,QAAMJ,MAAM,GAAG,CAAC,CAAC,OAAD,EAAU,MAAV,CAAD,CAAf;AACA1B,EAAAA,MAAM,CAAC+B,OAAP,CAAe5B,IAAf,CAAoBwB,OAApB,CAA6BL,KAAD,IAAW;AACnCC,IAAAA,oBAAoB,CAACD,KAAD,EAAQI,MAAR,CAApB;AACH,GAFD;AAGA,SAAOA,MAAP;AACH;;AACD,SAASM,oBAAT,CAA8BF,UAA9B,EAA0C;AACtC,QAAM;AAAE9B,IAAAA;AAAF,MAAa8B,UAAnB;AACA,SAAO9B,MAAM,CAACiC,MAAP,CAAc9B,IAAd,CAAmBjB,MAAnB,CAA0B,CAACQ,GAAD,EAAM;AAAEe,IAAAA,IAAF;AAAQN,IAAAA;AAAR,GAAN,KAAyB,CACtD,GAAGT,GADmD,EAEtD,GAAGS,IAAI,CAACrC,GAAL,CAAUwD,KAAD,IAAWhG,MAAM,CAACgG,KAAD,CAAN,GAAgB,EAAhB,GAAqB,CAACb,IAAD,EAAOa,KAAK,CAACE,KAAb,EAAoBU,MAAM,CAACZ,KAAK,CAACH,CAAP,CAA1B,EAAqCG,KAAK,CAACa,CAA3C,EAA8Cb,KAAK,CAACc,CAApD,CAAzC,CAFmD,CAAnD,EAGJ,CAAC,CAAC,MAAD,EAAS,OAAT,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,QAA5B,CAAD,CAHI,CAAP;AAIH;;AACD,SAASC,qBAAT,CAA+BP,UAA/B,EAA2C;AACvC,MAAIjC,EAAJ;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAa8B,UAAnB;AACA,QAAMb,UAAU,IAAIpB,EAAE,GAAGiC,UAAU,CAACb,UAAhB,EAA6BpB,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAK,KAAK,CAA3B,GAA+BA,EAA/B,GAAoC,EAArE,CAAhB;AACA,SAAOG,MAAM,CAACsC,OAAP,CAAenC,IAAf,CAAoBjB,MAApB,CAA2B,CAACQ,GAAD,EAAM;AAAEe,IAAAA,IAAF;AAAQN,IAAAA,IAAR;AAAcoC,IAAAA;AAAd,GAAN,KAAmC;AACjE,UAAMC,MAAM,GAAG,CAAErC,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0C,EAA5C,EAAiDrC,GAAjD,CAAqD,CAAC2E,OAAD,EAAU5B,KAAV,KAAoB;AACpF,UAAIhB,EAAJ;;AACA,YAAM6C,YAAY,GAAG,CAAC7C,EAAE,GAAG,CAAE0C,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2CA,QAA3C,GAAsD,EAAxD,EAA6DI,IAA7D,CAAmEC,OAAD,IAAaA,OAAO,CAAC,CAAD,CAAP,KAAe/B,KAA9F,CAAN,MAAgH,IAAhH,IAAwHhB,EAAE,KAAK,KAAK,CAApI,GAAwI,KAAK,CAA7I,GAAiJA,EAAE,CAAC,CAAD,CAAxK;AACA,YAAMgD,KAAK,GAAGH,YAAY,GAAG,CAAC,GAAGD,OAAJ,EAAaC,YAAb,CAAH,GAAgC,CAAC,GAAGD,OAAJ,CAA1D;AACA,aAAOI,KAAK,CAACC,IAAN,EAAP;AACH,KALc,CAAf;AAMA,WAAO,CAAC,GAAGpD,GAAJ,EAAS,CAACe,IAAD,EAAO,GAAG+B,MAAV,CAAT,CAAP;AACH,GARM,EAQJ,CAAC,CAAC,EAAD,EAAK,GAAGvB,UAAR,CAAD,CARI,CAAP;AASH;;AACD,SAAS8B,iBAAT,CAA2BjB,UAA3B,EAAuC;AACnC,MAAIjC,EAAJ;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAa8B,UAAnB;AACA,QAAMb,UAAU,IAAIpB,EAAE,GAAGiC,UAAU,CAACb,UAAhB,EAA6BpB,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAK,KAAK,CAA3B,GAA+BA,EAA/B,GAAoC,EAArE,CAAhB;AACA,SAAOG,MAAM,CAACgD,GAAP,CAAW7C,IAAX,CAAgBjB,MAAhB,CAAuB,CAACQ,GAAD,EAAM;AAAEe,IAAAA,IAAF;AAAQN,IAAAA;AAAR,GAAN,KAAyB;AACnD,UAAMqC,MAAM,GAAGjF,KAAK,CAAC0F,OAAN,CAAc9C,IAAd,IACT,CAAEA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0C,EAA5C,EAAiDjB,MAAjD,CAAwD,CAACgE,iBAAD,EAAoBL,KAApB,KAA8B;AACpF,UAAIhD,EAAJ;;AACA,aAAO,CAAC,GAAGqD,iBAAJ,EAAuB,CAACL,KAAK,CAACpC,IAAP,GAAcZ,EAAE,GAAGgD,KAAK,CAAC1C,IAAX,EAAkBN,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAK,KAAK,CAA3B,GAA+BA,EAA/B,GAAoC,EAApE,EAAvB,CAAP;AACH,KAHC,EAGC,EAHD,CADS,GAKT,CAAC,CAACY,IAAD,EAAQN,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0C,EAAlD,CAAD,CALN;AAMA,WAAO,CAAC,GAAGT,GAAJ,EAAS,GAAG8C,MAAZ,CAAP;AACH,GARM,EAQJvB,UAAU,CAAC7D,MAAX,GAAoB,CAAC,CAAC,EAAD,EAAK,GAAG6D,UAAR,CAAD,CAApB,GAA4C,EARxC,CAAP;AASH;;AACD,SAASkC,8BAAT,CAAwCvF,IAAxC,EAA8CqD,UAA9C,EAA0Dd,IAA1D,EAAgE;AAC5D,SAAOc,UAAU,CAACnD,GAAX,CAAe,CAACsF,QAAD,EAAWvC,KAAX,KAAqB;AACvC,QAAIjD,IAAI,KAAK,MAAT,IAAmBL,KAAK,CAAC0F,OAAN,CAAc9C,IAAI,CAACU,KAAD,CAAlB,CAAvB,EAAmD;AAC/C,aAAOV,IAAI,CAACU,KAAD,CAAJ,CAAYiC,IAAZ,EAAP;AACH;;AACD,UAAMO,SAAS,GAAGlD,IAAI,CAACwC,IAAL,CAAWE,KAAD,IAAWO,QAAQ,KAAKlB,MAAM,CAAC1G,mBAAmB,CAACqH,KAAD,CAApB,CAAxC,CAAlB;AACA,WAAOQ,SAAS,GAAG5H,mBAAmB,CAAC4H,SAAD,CAAtB,GAAoC,EAApD;AACH,GANM,CAAP;AAOH;;AACD,SAASC,cAAT,CAAwBxB,UAAxB,EAAoC;AAChC,QAAM;AAAE9B,IAAAA;AAAF,MAAa8B,UAAnB;AACA,QAAMb,UAAU,GAAGa,UAAU,CAACb,UAA9B;AACA,SAAOsC,MAAM,CAACC,IAAP,CAAYxD,MAAZ,EAAoBd,MAApB,CAA2B,CAACQ,GAAD,EAAM9B,IAAN,KAAe;AAC7C,UAAM8D,MAAM,GAAG1B,MAAM,CAACpC,IAAD,CAAN,CAAaE,GAAb,CAAiB,CAAC;AAAE2C,MAAAA,IAAF;AAAQN,MAAAA;AAAR,KAAD,KAAoB;AAChD,YAAMqC,MAAM,GAAG,CAACpH,QAAQ,CAAC+E,IAAI,CAAC,CAAD,CAAL,CAAT,IAAsB9E,QAAQ,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,SAAjB,CAAD,EAA8BuC,IAA9B,CAA9B,GACTuF,8BAA8B,CAACvF,IAAD,EAAOqD,UAAP,EAAmBd,IAAnB,CADrB,GAETA,IAAI,CAACrC,GAAL,CAAU+E,KAAD,IAAYtF,KAAK,CAAC0F,OAAN,CAAcJ,KAAd,IAAuBA,KAAK,CAACC,IAAN,EAAvB,GAAsCD,KAA3D,CAFN;AAGA,aAAO,CAACpC,IAAD,EAAO,GAAG+B,MAAV,CAAP;AACH,KALc,CAAf;AAMA,WAAO,CAAC,GAAG9C,GAAJ,EAAS,GAAGgC,MAAZ,CAAP;AACH,GARM,EAQJ,CAAC,CAAC,EAAD,EAAK,GAAGT,UAAR,CAAD,CARI,CAAP;AASH;;AACD,SAASwC,qBAAT,CAA+B3B,UAA/B,EAA2C;AACvC,MAAIJ,MAAJ;AACA,QAAM;AAAE1B,IAAAA;AAAF,MAAa8B,UAAnB;;AACA,MAAI9B,MAAM,CAACE,MAAX,EAAmB;AACfwB,IAAAA,MAAM,GAAG3B,oBAAoB,CAAC+B,UAAD,CAA7B;AACH,GAFD,MAGK,IAAI9B,MAAM,CAACoB,OAAX,EAAoB;AACrBM,IAAAA,MAAM,GAAGV,qBAAqB,CAACc,UAAD,CAA9B;AACH,GAFI,MAGA,IAAI9B,MAAM,CAACiC,MAAX,EAAmB;AACpBP,IAAAA,MAAM,GAAGM,oBAAoB,CAACF,UAAD,CAA7B;AACH,GAFI,MAGA,IAAI9B,MAAM,CAACsC,OAAX,EAAoB;AACrBZ,IAAAA,MAAM,GAAGW,qBAAqB,CAACP,UAAD,CAA9B;AACH,GAFI,MAGA,IAAI9B,MAAM,CAACgD,GAAX,EAAgB;AACjBtB,IAAAA,MAAM,GAAGqB,iBAAiB,CAACjB,UAAD,CAA1B;AACH,GAFI,MAGA,IAAI9B,MAAM,CAAC+B,OAAX,EAAoB;AACrBL,IAAAA,MAAM,GAAGG,qBAAqB,CAACC,UAAD,CAA9B;AACH,GAFI,MAGA;AACDJ,IAAAA,MAAM,GAAG4B,cAAc,CAACxB,UAAD,CAAvB;AACH;;AACD,SAAOJ,MAAP;AACH;;AACD,SAASgC,2BAAT,CAAqCC,gBAArC,EAAuD;AACnD,MAAIC,kBAAkB,GAAG,SAAzB;AACAD,EAAAA,gBAAgB,CAAChC,OAAjB,CAAyB,CAACkC,GAAD,EAAMC,QAAN,KAAmB;AACxC,UAAMC,WAAW,GAAGD,QAAQ,KAAK,CAAb,GAAiB,IAAjB,GAAwB,IAA5C;AACAF,IAAAA,kBAAkB,IAAI,MAAtB;AACAC,IAAAA,GAAG,CAAClC,OAAJ,CAAY,CAACqC,IAAD,EAAOC,SAAP,KAAqB;AAC7B,YAAMC,eAAe,GAAGJ,QAAQ,KAAK,CAAb,IAAkBG,SAAS,KAAK,CAAhC,GAAoC,iBAApC,GAAwD,EAAhF;AACA,YAAME,UAAU,GAAI,IAAGJ,WAAY,GAAEG,eAAgB,IAAGF,IAAK,KAAID,WAAY,GAA7E;AACAH,MAAAA,kBAAkB,IAAIO,UAAtB;AACH,KAJD;AAKAP,IAAAA,kBAAkB,IAAI,OAAtB;AACH,GATD;AAUAA,EAAAA,kBAAkB,IAAI,UAAtB;AACA,SAAOA,kBAAP;AACH;;AACD,SAASQ,sBAAT,CAAgCT,gBAAhC,EAAkD;AAC9C,SAAO9E,WAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc6E,2BAA2B,CAACC,gBAAD,CAAmB;AAC5D;AACA,gBAxBI;AAyBH;;AACD,SAASU,sBAAT,CAAgCV,gBAAhC,EAAkDW,MAAM,GAAG,EAA3D,EAA+D;AAC3D,QAAM;AAAEC,IAAAA,aAAa,GAAG,QAAlB;AAA4BC,IAAAA,aAAa,GAAG;AAA5C,MAAoDF,MAA1D;AACA,QAAMG,YAAY,GAAGd,gBAAgB,CAACvG,MAAjB,GAA0B,CAA/C;AACA,MAAIsH,OAAO,GAAG,EAAd;AACAf,EAAAA,gBAAgB,CAAChC,OAAjB,CAAyB,CAACkC,GAAD,EAAMC,QAAN,KAAmB;AACxC,UAAMa,aAAa,GAAGd,GAAG,CAACzG,MAAJ,GAAa,CAAnC;AACAyG,IAAAA,GAAG,CAAClC,OAAJ,CAAY,CAACqC,IAAD,EAAOC,SAAP,KAAqB;AAC7B,YAAMW,WAAW,GAAGxJ,QAAQ,CAAC4I,IAAD,CAAR,GAAiBA,IAAjB,GAAyB,IAAGA,IAAK,GAArD;AACAU,MAAAA,OAAO,IAAIE,WAAX;;AACA,UAAIX,SAAS,GAAGU,aAAhB,EAA+B;AAC3BD,QAAAA,OAAO,IAAIF,aAAX;AACH;AACJ,KAND;;AAOA,QAAIV,QAAQ,GAAGW,YAAf,EAA6B;AACzBC,MAAAA,OAAO,IAAIH,aAAX;AACH;AACJ,GAZD;AAaA,SAAOG,OAAP;AACH;;AACD,OAAO,SAASG,YAAT,CAAsB1G,QAAtB,EAAgCD,SAAhC,EAA2CE,OAA3C,EAAoDxB,WAApD,EAAiE;AACpE,QAAMkI,cAAc,GAAGjJ,iBAAiB,EAAxC;;AACA,MAAI,CAACX,QAAQ,CAACkD,OAAD,CAAT,IAAsB,CAAC0G,cAA3B,EAA2C;AACvC;AACH;;AACDA,EAAAA,cAAc,CAAC3G,QAAD,EAAWD,SAAX,EAAsBE,OAAtB,EAA+BxB,WAA/B,CAAd;AACH;AACD,OAAO,SAASmI,mBAAT,CAA6B5G,QAA7B,EAAuCD,SAAvC,EAAkDiC,IAAlD,EAAwD;AAC3D,QAAMwD,gBAAgB,GAAGF,qBAAqB,CAACtD,IAAD,CAA9C;AACA,QAAMvD,WAAW,GAAGlB,gBAAgB,CAACwC,SAAD,CAAhB,CAA4BmB,OAA5B,CAAoC,8BAApC,EAAoE,EAApE,CAApB;AACA,MAAIjB,OAAO,GAAG,EAAd;;AACA,MAAIF,SAAS,KAAK,KAAlB,EAAyB;AACrBE,IAAAA,OAAO,GAAGiG,sBAAsB,CAACV,gBAAD,CAAhC;AACH,GAFD,MAGK;AACDvF,IAAAA,OAAO,GAAGgG,sBAAsB,CAACT,gBAAD,CAAhC;AACH;;AACD,MAAIrE,kBAAkB,EAAtB,EAA0B;AACtB,QAAIpB,SAAS,KAAK,KAAlB,EAAyB;AACrB;AACAE,MAAAA,OAAO,GAAGhC,MAAM,CAAC4I,IAAP,CAAYC,QAAQ,CAACC,kBAAkB,CAAC9G,OAAD,CAAnB,CAApB,CAAV;AACH;;AACDA,IAAAA,OAAO,GAAG1C,gBAAgB,CAACwC,SAAD,CAAhB,GAA8BE,OAAxC;AACH;;AACDyG,EAAAA,YAAY,CAAC1G,QAAD,EAAWD,SAAX,EAAsBE,OAAtB,EAA+BxB,WAA/B,CAAZ;AACH","sourcesContent":["import { isString, isUndefined, isNumber, includes, isNull, range } from \"./utils\";\nimport { getCoordinateXValue, getCoordinateYValue } from \"./coordinate\";\nconst DATA_URI_HEADERS = {\n    xls: 'data:application/vnd.ms-excel;base64,',\n    csv: 'data:text/csv;charset=utf-8,%EF%BB%BF' /* BOM for utf-8 */,\n};\nfunction getDownloadMethod() {\n    let method;\n    const isDownloadAttributeSupported = !isUndefined(document.createElement('a').download);\n    const isMSSaveOrOpenBlobSupported = !isUndefined(window.Blob && window.navigator.msSaveOrOpenBlob);\n    if (isMSSaveOrOpenBlobSupported) {\n        method = downloadWithMSSaveOrOpenBlob;\n    }\n    else if (isDownloadAttributeSupported) {\n        method = downloadWithAnchorElementDownloadAttribute;\n    }\n    return method;\n}\n/**\n * Base64 string to blob\n * original source ref: https://github.com/miguelmota/base64toblob/blob/master/base64toblob.js\n * Licence: MIT Licence\n */\nfunction base64toBlob(base64String) {\n    const contentType = base64String\n        .substr(0, base64String.indexOf(';base64,'))\n        .substr(base64String.indexOf(':') + 1);\n    const sliceSize = 1024;\n    const byteCharacters = atob(base64String.substr(base64String.indexOf(',') + 1));\n    const byteArrays = [];\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i += 1) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        byteArrays.push(new window.Uint8Array(byteNumbers));\n    }\n    try {\n        // for IE 11\n        return new Blob(byteArrays, { type: contentType });\n    }\n    catch (e) {\n        // for IE 10\n        return new Blob(byteArrays.map((byteArr) => byteArr.buffer), { type: contentType });\n    }\n}\nfunction isImageExtension(extension) {\n    return extension === 'jpeg' || extension === 'png';\n}\nfunction downloadWithMSSaveOrOpenBlob(fileName, extension, content, contentType) {\n    const blobObject = isImageExtension(extension)\n        ? base64toBlob(content)\n        : new Blob([content], { type: contentType });\n    window.navigator.msSaveOrOpenBlob(blobObject, `${fileName}.${extension}`);\n}\nfunction downloadWithAnchorElementDownloadAttribute(fileName, extension, content) {\n    if (content) {\n        const anchorElement = document.createElement('a');\n        anchorElement.href = content;\n        anchorElement.target = '_blank';\n        anchorElement.download = `${fileName}.${extension}`;\n        document.body.appendChild(anchorElement);\n        anchorElement.click();\n        anchorElement.remove();\n    }\n}\nfunction oneLineTrim(...args) {\n    const normalTag = (template, ...expressions) => template.reduce((accumulator, part, i) => accumulator + expressions[i - 1] + part);\n    return normalTag(...args).replace(/\\n\\s*/g, '');\n}\nfunction isNeedDataEncoding() {\n    const isDownloadAttributeSupported = !isUndefined(document.createElement('a').download);\n    const isMSSaveOrOpenBlobSupported = !isUndefined(window.Blob && window.navigator.msSaveOrOpenBlob);\n    return !isMSSaveOrOpenBlobSupported && isDownloadAttributeSupported;\n}\nfunction getBulletLongestArrayLength(arr, field) {\n    return arr.reduce((acc, cur, idx) => { var _a, _b; return (!idx || acc < ((_b = (_a = cur) === null || _a === void 0 ? void 0 : _a[field]) === null || _b === void 0 ? void 0 : _b.length) ? cur[field].length : acc); }, 0);\n}\nfunction makeBulletExportData({ series }) {\n    const seriesData = series.bullet.data;\n    const markerCount = getBulletLongestArrayLength(seriesData, 'markers');\n    const rangeCount = getBulletLongestArrayLength(seriesData, 'ranges');\n    const rangesHeaders = range(0, rangeCount).map((idx) => `Range ${idx + 1}`);\n    const markerHeaders = range(0, markerCount).map((idx) => `Marker ${idx + 1}`);\n    return seriesData.reduce((acc, { data, markers, name, ranges }) => {\n        const rangeDatum = rangesHeaders.map((_, index) => {\n            var _a;\n            const rangeData = (_a = ranges) === null || _a === void 0 ? void 0 : _a[index];\n            return rangeData ? `${rangeData[0]} ~ ${rangeData[1]}` : '';\n        });\n        const markerDatum = markerHeaders.map((_, index) => { var _a, _b; return _b = (_a = markers) === null || _a === void 0 ? void 0 : _a[index], (_b !== null && _b !== void 0 ? _b : ''); });\n        return [...acc, [name, (data !== null && data !== void 0 ? data : ''), ...rangeDatum, ...markerDatum]];\n    }, [['', 'Actual', ...rangesHeaders, ...markerHeaders]]);\n}\nfunction makeHeatmapExportData({ categories, series }) {\n    const xCategories = categories.x;\n    return series.heatmap.data.reduce((acc, { data, yCategory }) => [\n        ...acc,\n        [yCategory, ...data.map((datum) => (isNull(datum) ? '' : datum))],\n    ], [['', ...xCategories]]);\n}\nfunction recursiveTreemapData({ label, data, children = [] }, result) {\n    if (data) {\n        result.push([label, data]);\n    }\n    children.forEach((childrenData) => recursiveTreemapData(childrenData, result));\n    return result;\n}\nfunction makeTreemapExportData(exportData) {\n    const { series } = exportData;\n    const result = [['Label', 'Data']];\n    series.treemap.data.forEach((datum) => {\n        recursiveTreemapData(datum, result);\n    });\n    return result;\n}\nfunction makeBubbleExportData(exportData) {\n    const { series } = exportData;\n    return series.bubble.data.reduce((acc, { name, data }) => [\n        ...acc,\n        ...data.map((datum) => isNull(datum) ? [] : [name, datum.label, String(datum.x), datum.y, datum.r]),\n    ], [['Name', 'Label', 'X', 'Y', 'Radius']]);\n}\nfunction makeBoxPlotExportData(exportData) {\n    var _a;\n    const { series } = exportData;\n    const categories = (_a = exportData.categories, (_a !== null && _a !== void 0 ? _a : []));\n    return series.boxPlot.data.reduce((acc, { name, data, outliers }) => {\n        const values = ((data !== null && data !== void 0 ? data : [])).map((rawData, index) => {\n            var _a;\n            const outlierValue = (_a = ((outliers !== null && outliers !== void 0 ? outliers : [])).find((outlier) => outlier[0] === index)) === null || _a === void 0 ? void 0 : _a[1];\n            const value = outlierValue ? [...rawData, outlierValue] : [...rawData];\n            return value.join();\n        });\n        return [...acc, [name, ...values]];\n    }, [['', ...categories]]);\n}\nfunction makePieExportData(exportData) {\n    var _a;\n    const { series } = exportData;\n    const categories = (_a = exportData.categories, (_a !== null && _a !== void 0 ? _a : []));\n    return series.pie.data.reduce((acc, { name, data }) => {\n        const values = Array.isArray(data)\n            ? ((data !== null && data !== void 0 ? data : [])).reduce((accNestedPieValue, value) => {\n                var _a;\n                return [...accNestedPieValue, [value.name, (_a = value.data, (_a !== null && _a !== void 0 ? _a : ''))]];\n            }, [])\n            : [[name, (data !== null && data !== void 0 ? data : '')]];\n        return [...acc, ...values];\n    }, categories.length ? [['', ...categories]] : []);\n}\nfunction makeCoordinateExportDataValues(type, categories, data) {\n    return categories.map((category, index) => {\n        if (type === 'area' && Array.isArray(data[index])) {\n            return data[index].join();\n        }\n        const foundItem = data.find((value) => category === String(getCoordinateXValue(value)));\n        return foundItem ? getCoordinateYValue(foundItem) : '';\n    });\n}\nfunction makeExportData(exportData) {\n    const { series } = exportData;\n    const categories = exportData.categories;\n    return Object.keys(series).reduce((acc, type) => {\n        const result = series[type].map(({ name, data }) => {\n            const values = !isNumber(data[0]) && includes(['line', 'area', 'scatter'], type)\n                ? makeCoordinateExportDataValues(type, categories, data)\n                : data.map((value) => (Array.isArray(value) ? value.join() : value));\n            return [name, ...values];\n        });\n        return [...acc, ...result];\n    }, [['', ...categories]]);\n}\nfunction get2DArrayFromRawData(exportData) {\n    let result;\n    const { series } = exportData;\n    if (series.bullet) {\n        result = makeBulletExportData(exportData);\n    }\n    else if (series.heatmap) {\n        result = makeHeatmapExportData(exportData);\n    }\n    else if (series.bubble) {\n        result = makeBubbleExportData(exportData);\n    }\n    else if (series.boxPlot) {\n        result = makeBoxPlotExportData(exportData);\n    }\n    else if (series.pie) {\n        result = makePieExportData(exportData);\n    }\n    else if (series.treemap) {\n        result = makeTreemapExportData(exportData);\n    }\n    else {\n        result = makeExportData(exportData);\n    }\n    return result;\n}\nfunction getTableElementStringForXLS(chartData2DArray) {\n    let tableElementString = '<table>';\n    chartData2DArray.forEach((row, rowIndex) => {\n        const cellTagName = rowIndex === 0 ? 'th' : 'td';\n        tableElementString += '<tr>';\n        row.forEach((cell, cellIndex) => {\n            const cellNumberClass = rowIndex !== 0 || cellIndex === 0 ? ' class=\"number\"' : '';\n            const cellString = `<${cellTagName}${cellNumberClass}>${cell}</${cellTagName}>`;\n            tableElementString += cellString;\n        });\n        tableElementString += '</tr>';\n    });\n    tableElementString += '</table>';\n    return tableElementString;\n}\nfunction makeXLSBodyWithRawData(chartData2DArray) {\n    return oneLineTrim `<html xmlns:o=\"urn:schemas-microsoft-com:office:office\"\n        xmlns:x=\"urn:schemas-microsoft-com:office:excel\"\n        xmlns=\"http://www.w3.org/TR/REC-html40\">\n        <head>\n            <!--[if gte mso 9]>\n                <xml>\n                    <x:ExcelWorkbook>\n                        <x:ExcelWorksheets>\n                            <x:ExcelWorksheet>\n                                <x:Name>Ark1</x:Name>\n                                <x:WorksheetOptions>\n                                    <x:DisplayGridlines/>\n                                </x:WorksheetOptions>\n                            </x:ExcelWorksheet>\n                        </x:ExcelWorksheets>\n                        </x:ExcelWorkbook>\n                </xml>\n            <![endif]-->\n            <meta name=ProgId content=Excel.Sheet>\n            <meta charset=UTF-8>\n        </head>\n        <body>\n            ${getTableElementStringForXLS(chartData2DArray)}\n        </body>\n        </html>`;\n}\nfunction makeCSVBodyWithRawData(chartData2DArray, option = {}) {\n    const { lineDelimiter = '\\u000a', itemDelimiter = ',' } = option;\n    const lastRowIndex = chartData2DArray.length - 1;\n    let csvText = '';\n    chartData2DArray.forEach((row, rowIndex) => {\n        const lastCellIndex = row.length - 1;\n        row.forEach((cell, cellIndex) => {\n            const cellContent = isNumber(cell) ? cell : `\"${cell}\"`;\n            csvText += cellContent;\n            if (cellIndex < lastCellIndex) {\n                csvText += itemDelimiter;\n            }\n        });\n        if (rowIndex < lastRowIndex) {\n            csvText += lineDelimiter;\n        }\n    });\n    return csvText;\n}\nexport function execDownload(fileName, extension, content, contentType) {\n    const downloadMethod = getDownloadMethod();\n    if (!isString(content) || !downloadMethod) {\n        return;\n    }\n    downloadMethod(fileName, extension, content, contentType);\n}\nexport function downloadSpreadSheet(fileName, extension, data) {\n    const chartData2DArray = get2DArrayFromRawData(data);\n    const contentType = DATA_URI_HEADERS[extension].replace(/(data:|;base64,|,%EF%BB%BF)/g, '');\n    let content = '';\n    if (extension === 'csv') {\n        content = makeCSVBodyWithRawData(chartData2DArray);\n    }\n    else {\n        content = makeXLSBodyWithRawData(chartData2DArray);\n    }\n    if (isNeedDataEncoding()) {\n        if (extension !== 'csv') {\n            // base64 encoding for data URI scheme.\n            content = window.btoa(unescape(encodeURIComponent(content)));\n        }\n        content = DATA_URI_HEADERS[extension] + content;\n    }\n    execDownload(fileName, extension, content, contentType);\n}\n"]},"metadata":{},"sourceType":"module"}