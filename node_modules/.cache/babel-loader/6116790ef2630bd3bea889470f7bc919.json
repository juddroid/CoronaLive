{"ast":null,"code":"import Component from \"./component\";\nimport { getMaxRadius } from \"./bubbleSeries\";\nimport { message } from \"../message\";\nexport default class CircleLegend extends Component {\n  constructor() {\n    super(...arguments);\n    this.models = {\n      circleLegend: []\n    };\n  }\n\n  initialize() {\n    this.type = 'circleLegend';\n  }\n\n  render({\n    layout,\n    series,\n    circleLegend\n  }) {\n    if (!series.bubble) {\n      throw new Error(message.CIRCLE_LEGEND_RENDER_ERROR);\n    }\n\n    this.isShow = circleLegend.visible;\n\n    if (!this.isShow) {\n      return;\n    }\n\n    const bubbleData = series.bubble.data;\n    this.rect = layout.circleLegend;\n    this.renderCircleLegend(bubbleData, circleLegend);\n  }\n\n  renderCircleLegend(bubbleData, circleLegend) {\n    const value = getMaxRadius(bubbleData);\n    const {\n      radius\n    } = circleLegend;\n    this.models.circleLegend = [{\n      type: 'circleLegend',\n      radius,\n      value,\n      x: radius,\n      y: this.rect.height - radius\n    }];\n  }\n\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/component/circleLegend.js"],"names":["Component","getMaxRadius","message","CircleLegend","constructor","arguments","models","circleLegend","initialize","type","render","layout","series","bubble","Error","CIRCLE_LEGEND_RENDER_ERROR","isShow","visible","bubbleData","data","rect","renderCircleLegend","value","radius","x","y","height"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAChDI,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,MAAL,GAAc;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,SAAKC,IAAL,GAAY,cAAZ;AACH;;AACDC,EAAAA,MAAM,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBL,IAAAA;AAAlB,GAAD,EAAmC;AACrC,QAAI,CAACK,MAAM,CAACC,MAAZ,EAAoB;AAChB,YAAM,IAAIC,KAAJ,CAAUZ,OAAO,CAACa,0BAAlB,CAAN;AACH;;AACD,SAAKC,MAAL,GAAcT,YAAY,CAACU,OAA3B;;AACA,QAAI,CAAC,KAAKD,MAAV,EAAkB;AACd;AACH;;AACD,UAAME,UAAU,GAAGN,MAAM,CAACC,MAAP,CAAcM,IAAjC;AACA,SAAKC,IAAL,GAAYT,MAAM,CAACJ,YAAnB;AACA,SAAKc,kBAAL,CAAwBH,UAAxB,EAAoCX,YAApC;AACH;;AACDc,EAAAA,kBAAkB,CAACH,UAAD,EAAaX,YAAb,EAA2B;AACzC,UAAMe,KAAK,GAAGrB,YAAY,CAACiB,UAAD,CAA1B;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAahB,YAAnB;AACA,SAAKD,MAAL,CAAYC,YAAZ,GAA2B,CACvB;AACIE,MAAAA,IAAI,EAAE,cADV;AAEIc,MAAAA,MAFJ;AAGID,MAAAA,KAHJ;AAIIE,MAAAA,CAAC,EAAED,MAJP;AAKIE,MAAAA,CAAC,EAAE,KAAKL,IAAL,CAAUM,MAAV,GAAmBH;AAL1B,KADuB,CAA3B;AASH;;AAhC+C","sourcesContent":["import Component from \"./component\";\nimport { getMaxRadius } from \"./bubbleSeries\";\nimport { message } from \"../message\";\nexport default class CircleLegend extends Component {\n    constructor() {\n        super(...arguments);\n        this.models = { circleLegend: [] };\n    }\n    initialize() {\n        this.type = 'circleLegend';\n    }\n    render({ layout, series, circleLegend }) {\n        if (!series.bubble) {\n            throw new Error(message.CIRCLE_LEGEND_RENDER_ERROR);\n        }\n        this.isShow = circleLegend.visible;\n        if (!this.isShow) {\n            return;\n        }\n        const bubbleData = series.bubble.data;\n        this.rect = layout.circleLegend;\n        this.renderCircleLegend(bubbleData, circleLegend);\n    }\n    renderCircleLegend(bubbleData, circleLegend) {\n        const value = getMaxRadius(bubbleData);\n        const { radius } = circleLegend;\n        this.models.circleLegend = [\n            {\n                type: 'circleLegend',\n                radius,\n                value,\n                x: radius,\n                y: this.rect.height - radius,\n            },\n        ];\n    }\n}\n"]},"metadata":{},"sourceType":"module"}