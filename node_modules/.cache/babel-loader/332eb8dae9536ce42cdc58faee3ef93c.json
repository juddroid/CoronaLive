{"ast":null,"code":"import { isNull } from \"./helpers/utils\";\nexport default class Animator {\n  constructor() {\n    this.anims = [];\n    this.state = 'IDLE';\n    this.requestId = null;\n    this.firstRendering = true;\n  }\n\n  add({\n    chart,\n    duration,\n    requester,\n    onCompleted = () => {},\n    onFrame = delta => {\n      if (!this.firstRendering) {\n        chart.update(delta);\n      }\n\n      if (this.firstRendering) {\n        chart.initUpdate(delta);\n\n        if (delta === 1) {\n          this.firstRendering = false;\n        }\n      }\n    }\n  }) {\n    if (this.anims.length) {\n      this.reset();\n    }\n\n    if (this.state === 'IDLE') {\n      this.anims.push({\n        chart,\n        requester,\n        duration,\n        onFrame,\n        onCompleted,\n        start: null,\n        current: null,\n        completed: false\n      });\n      this.start();\n    }\n  }\n\n  reset() {\n    this.anims.forEach(anim => {\n      anim.current = 1;\n      anim.onFrame(anim.current);\n      anim.completed = true;\n    });\n    this.anims = [];\n    this.cancelAnimFrame();\n    this.state = 'IDLE';\n    this.requestId = null;\n  }\n\n  start() {\n    if (this.anims.length) {\n      this.state = 'RUNNING';\n      this.runFrame();\n    }\n  }\n\n  runFrame() {\n    this.requestId = window.requestAnimationFrame(timestamp => {\n      this.runAnims(timestamp);\n    });\n  }\n\n  runAnims(timestamp) {\n    this.next(timestamp);\n\n    if (this.anims.length) {\n      this.runFrame();\n    } else {\n      this.state = 'IDLE';\n      this.requestId = null;\n    }\n  }\n\n  next(timestamp) {\n    this.anims.forEach(anim => {\n      if (isNull(anim.start)) {\n        anim.start = timestamp;\n      }\n\n      Object.defineProperty(anim.chart, '___animId___', {\n        value: timestamp,\n        enumerable: false,\n        writable: false,\n        configurable: true\n      });\n      anim.current = anim.duration ? Math.min((timestamp - anim.start) / anim.duration, 1) : 1;\n      anim.onFrame(anim.current);\n      anim.completed = anim.current === 1;\n    });\n    this.anims.forEach(anim => {\n      if (anim.chart.___animId___ === timestamp) {\n        anim.chart.draw();\n        delete anim.chart.___animId___;\n      }\n\n      if (anim.completed) {\n        this.cancelAnimFrame();\n        anim.onCompleted();\n        anim.chart.eventBus.emit('animationCompleted', anim.requester);\n      }\n    });\n    this.anims = this.anims.filter(anim => !anim.completed);\n  }\n\n  cancelAnimFrame() {\n    if (this.requestId) {\n      window.cancelAnimationFrame(this.requestId);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/animator.js"],"names":["isNull","Animator","constructor","anims","state","requestId","firstRendering","add","chart","duration","requester","onCompleted","onFrame","delta","update","initUpdate","length","reset","push","start","current","completed","forEach","anim","cancelAnimFrame","runFrame","window","requestAnimationFrame","timestamp","runAnims","next","Object","defineProperty","value","enumerable","writable","configurable","Math","min","___animId___","draw","eventBus","emit","filter","cancelAnimationFrame"],"mappings":"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","sourcesContent":["import { isNull } from \"./helpers/utils\";\nexport default class Animator {\n    constructor() {\n        this.anims = [];\n        this.state = 'IDLE';\n        this.requestId = null;\n        this.firstRendering = true;\n    }\n    add({ chart, duration, requester, onCompleted = () => { }, onFrame = (delta) => {\n        if (!this.firstRendering) {\n            chart.update(delta);\n        }\n        if (this.firstRendering) {\n            chart.initUpdate(delta);\n            if (delta === 1) {\n                this.firstRendering = false;\n            }\n        }\n    }, }) {\n        if (this.anims.length) {\n            this.reset();\n        }\n        if (this.state === 'IDLE') {\n            this.anims.push({\n                chart,\n                requester,\n                duration,\n                onFrame,\n                onCompleted,\n                start: null,\n                current: null,\n                completed: false,\n            });\n            this.start();\n        }\n    }\n    reset() {\n        this.anims.forEach((anim) => {\n            anim.current = 1;\n            anim.onFrame(anim.current);\n            anim.completed = true;\n        });\n        this.anims = [];\n        this.cancelAnimFrame();\n        this.state = 'IDLE';\n        this.requestId = null;\n    }\n    start() {\n        if (this.anims.length) {\n            this.state = 'RUNNING';\n            this.runFrame();\n        }\n    }\n    runFrame() {\n        this.requestId = window.requestAnimationFrame((timestamp) => {\n            this.runAnims(timestamp);\n        });\n    }\n    runAnims(timestamp) {\n        this.next(timestamp);\n        if (this.anims.length) {\n            this.runFrame();\n        }\n        else {\n            this.state = 'IDLE';\n            this.requestId = null;\n        }\n    }\n    next(timestamp) {\n        this.anims.forEach((anim) => {\n            if (isNull(anim.start)) {\n                anim.start = timestamp;\n            }\n            Object.defineProperty(anim.chart, '___animId___', {\n                value: timestamp,\n                enumerable: false,\n                writable: false,\n                configurable: true,\n            });\n            anim.current = anim.duration ? Math.min((timestamp - anim.start) / anim.duration, 1) : 1;\n            anim.onFrame(anim.current);\n            anim.completed = anim.current === 1;\n        });\n        this.anims.forEach((anim) => {\n            if (anim.chart.___animId___ === timestamp) {\n                anim.chart.draw();\n                delete anim.chart.___animId___;\n            }\n            if (anim.completed) {\n                this.cancelAnimFrame();\n                anim.onCompleted();\n                anim.chart.eventBus.emit('animationCompleted', anim.requester);\n            }\n        });\n        this.anims = this.anims.filter((anim) => !anim.completed);\n    }\n    cancelAnimFrame() {\n        if (this.requestId) {\n            window.cancelAnimationFrame(this.requestId);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}