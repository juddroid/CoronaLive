{"ast":null,"code":"import { pieTooltipLabelFormatter } from \"./pieSeries\";\nimport { getFontStyleString } from \"./style\";\nimport { isNumber } from \"./utils\";\nimport { isRangeValue } from \"./range\";\n\nfunction getSeriesNameTemplate(label, color) {\n  return `<span class=\"toastui-chart-series-name\">\n    <i class=\"toastui-chart-icon\" style=\"background: ${color}\"></i>\n    <span class=\"toastui-chart-name\">${label}</span>\n  </span>`;\n}\n\nfunction getTitleValueTemplate(title, value) {\n  return `<div class=\"toastui-chart-tooltip-series\">\n    <span class=\"toastui-chart-series-name\">${title}</span>\n    <span class=\"toastui-chart-series-value\">${value}</span>\n  </div>`;\n}\n\nfunction getColorValueTemplate(color, value) {\n  return `<div class=\"toastui-chart-tooltip-series\">\n    <i class=\"toastui-chart-icon\" style=\"background: ${color}\"></i>\n    <span class=\"toastui-chart-series-value\">${value}</span>\n  </div>`;\n}\n\nfunction makeBulletDataTemplate(data, titleType) {\n  return data.filter(({\n    title\n  }) => title === titleType).sort((a, b) => {\n    if (isRangeValue(a.value) && isRangeValue(b.value)) {\n      return a.value[0] - b.value[0];\n    }\n\n    if (isNumber(a.value) && isNumber(b.value)) {\n      return a.value - b.value;\n    }\n\n    return 0;\n  }).map(({\n    formattedValue,\n    color\n  }) => getColorValueTemplate(color, formattedValue)).join('');\n}\n\nexport function getDefaultTemplate(model, {\n  header,\n  body\n}, theme) {\n  const {\n    borderColor,\n    borderWidth,\n    background,\n    borderRadius,\n    borderStyle\n  } = theme;\n  const style = `border: ${borderWidth}px ${borderStyle} ${borderColor};border-radius: ${borderRadius}px;background: ${background};`;\n  return `<div class=\"toastui-chart-tooltip\" style=\"${style}\">${header}${body}</div>`;\n}\nexport function getHeaderTemplate({\n  category\n}, theme) {\n  return category ? `<div class=\"toastui-chart-tooltip-category\" style=\"${getFontStyleString(theme.header)}\">\n        ${category}\n      </div>` : '';\n}\n\nfunction getDefaultBodyTemplate({\n  data\n}, theme) {\n  return `\n    <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n      ${data.map(({\n    label,\n    color,\n    formattedValue\n  }) => `<div class=\"toastui-chart-tooltip-series\">\n                ${getSeriesNameTemplate(label, color)}\n                <span class=\"toastui-chart-series-value\">${formattedValue}</span>\n              </div>`).join('')}\n    </div>`;\n}\n\nfunction getBoxPlotTemplate({\n  data\n}, theme) {\n  const groupedData = data.reduce((acc, item, index) => {\n    if (!index) {\n      return item;\n    }\n\n    if (acc.category === item.category && acc.label === item.label) {\n      acc.value = [...acc.value, ...item.value];\n    }\n\n    return acc;\n  }, {});\n  return `\n    <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n      ${[groupedData].map(({\n    label,\n    color,\n    value: values\n  }) => `<div class=\"toastui-chart-tooltip-series\">\n              ${getSeriesNameTemplate(label, color)}\n            </div>\n            <div>\n          ${values.map(({\n    title,\n    formattedValue\n  }) => getTitleValueTemplate(title, formattedValue)).join('')}\n            </div>`).join('')}\n    </div>`;\n}\n\nfunction getBulletTemplate({\n  data\n}, theme) {\n  return data.length > 1 ? getBulletGroupedTemplate(data, theme) : getBulletBasicTemplate(data, theme);\n}\n\nfunction getBulletBasicTemplate(data, theme) {\n  return `\n    <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n      ${data.map(({\n    label,\n    color,\n    value: values\n  }) => `<div class=\"toastui-chart-tooltip-series\">${getSeriesNameTemplate(label, color)}</div>\n            ${values.map(({\n    title,\n    formattedValue\n  }) => getTitleValueTemplate(title, formattedValue)).join('')}`).join('')}\n    </div>`;\n}\n\nfunction getBulletGroupedTemplate(data, theme) {\n  const bulletData = data.map(({\n    value\n  }) => value[0]);\n  const [actual, ranges, markers] = ['Actual', 'Range', 'Marker'].map(titleType => makeBulletDataTemplate(bulletData, titleType));\n  return `<div class=\"toastui-chart-tooltip-category\" style=\"${getFontStyleString(theme.header)}\">\n      ${data[0].label}\n    </div>\n    <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n      ${actual ? '<div class=\"toastui-chart-tooltip-title\">Actual</div>' : ''} ${actual}\n      ${ranges ? '<div class=\"toastui-chart-tooltip-title\">Ranges</div>' : ''} ${ranges}\n      ${markers ? '<div class=\"toastui-chart-tooltip-title\">Markers</div>' : ''} ${markers}\n    </div>`;\n}\n\nfunction getPieTemplate({\n  data\n}, theme) {\n  return `\n    <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n      ${data.map(({\n    label,\n    color,\n    formattedValue,\n    percentValue\n  }) => `<div class=\"toastui-chart-tooltip-series\">\n          ${getSeriesNameTemplate(label, color)}\n          <span class=\"toastui-chart-series-value\">${pieTooltipLabelFormatter(percentValue)}&nbsp;&nbsp;(${formattedValue})</span>\n        </div>`).join('')}\n    </div>`;\n}\n\nfunction getHeatmapTemplate({\n  data\n}, theme) {\n  return `${data.map(({\n    label,\n    color,\n    formattedValue\n  }) => `<div class=\"toastui-chart-tooltip-category\" style=\"${getFontStyleString(theme.header)}\">\n          ${label}\n        </div>\n        <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n          <div class=\"toastui-chart-tooltip-series\">\n            ${getSeriesNameTemplate(formattedValue, color)}\n          </div>\n        </div>`).join('')}`;\n}\n\nexport const tooltipTemplates = {\n  default: getDefaultTemplate,\n  defaultHeader: getHeaderTemplate,\n  defaultBody: getDefaultBodyTemplate,\n  boxPlot: getBoxPlotTemplate,\n  bullet: getBulletTemplate,\n  pie: getPieTemplate,\n  heatmap: getHeatmapTemplate\n};\nexport function getBodyTemplate(type) {\n  return tooltipTemplates[type || 'defaultBody'];\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/helpers/tooltipTemplate.js"],"names":["pieTooltipLabelFormatter","getFontStyleString","isNumber","isRangeValue","getSeriesNameTemplate","label","color","getTitleValueTemplate","title","value","getColorValueTemplate","makeBulletDataTemplate","data","titleType","filter","sort","a","b","map","formattedValue","join","getDefaultTemplate","model","header","body","theme","borderColor","borderWidth","background","borderRadius","borderStyle","style","getHeaderTemplate","category","getDefaultBodyTemplate","getBoxPlotTemplate","groupedData","reduce","acc","item","index","values","getBulletTemplate","length","getBulletGroupedTemplate","getBulletBasicTemplate","bulletData","actual","ranges","markers","getPieTemplate","percentValue","getHeatmapTemplate","tooltipTemplates","default","defaultHeader","defaultBody","boxPlot","bullet","pie","heatmap","getBodyTemplate","type"],"mappings":"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","sourcesContent":["import { pieTooltipLabelFormatter } from \"./pieSeries\";\nimport { getFontStyleString } from \"./style\";\nimport { isNumber } from \"./utils\";\nimport { isRangeValue } from \"./range\";\nfunction getSeriesNameTemplate(label, color) {\n    return `<span class=\"toastui-chart-series-name\">\n    <i class=\"toastui-chart-icon\" style=\"background: ${color}\"></i>\n    <span class=\"toastui-chart-name\">${label}</span>\n  </span>`;\n}\nfunction getTitleValueTemplate(title, value) {\n    return `<div class=\"toastui-chart-tooltip-series\">\n    <span class=\"toastui-chart-series-name\">${title}</span>\n    <span class=\"toastui-chart-series-value\">${value}</span>\n  </div>`;\n}\nfunction getColorValueTemplate(color, value) {\n    return `<div class=\"toastui-chart-tooltip-series\">\n    <i class=\"toastui-chart-icon\" style=\"background: ${color}\"></i>\n    <span class=\"toastui-chart-series-value\">${value}</span>\n  </div>`;\n}\nfunction makeBulletDataTemplate(data, titleType) {\n    return data\n        .filter(({ title }) => title === titleType)\n        .sort((a, b) => {\n        if (isRangeValue(a.value) && isRangeValue(b.value)) {\n            return a.value[0] - b.value[0];\n        }\n        if (isNumber(a.value) && isNumber(b.value)) {\n            return a.value - b.value;\n        }\n        return 0;\n    })\n        .map(({ formattedValue, color }) => getColorValueTemplate(color, formattedValue))\n        .join('');\n}\nexport function getDefaultTemplate(model, { header, body }, theme) {\n    const { borderColor, borderWidth, background, borderRadius, borderStyle } = theme;\n    const style = `border: ${borderWidth}px ${borderStyle} ${borderColor};border-radius: ${borderRadius}px;background: ${background};`;\n    return `<div class=\"toastui-chart-tooltip\" style=\"${style}\">${header}${body}</div>`;\n}\nexport function getHeaderTemplate({ category }, theme) {\n    return category\n        ? `<div class=\"toastui-chart-tooltip-category\" style=\"${getFontStyleString(theme.header)}\">\n        ${category}\n      </div>`\n        : '';\n}\nfunction getDefaultBodyTemplate({ data }, theme) {\n    return `\n    <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n      ${data\n        .map(({ label, color, formattedValue }) => `<div class=\"toastui-chart-tooltip-series\">\n                ${getSeriesNameTemplate(label, color)}\n                <span class=\"toastui-chart-series-value\">${formattedValue}</span>\n              </div>`)\n        .join('')}\n    </div>`;\n}\nfunction getBoxPlotTemplate({ data }, theme) {\n    const groupedData = data.reduce((acc, item, index) => {\n        if (!index) {\n            return item;\n        }\n        if (acc.category === item.category && acc.label === item.label) {\n            acc.value = [...acc.value, ...item.value];\n        }\n        return acc;\n    }, {});\n    return `\n    <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n      ${[groupedData]\n        .map(({ label, color, value: values }) => `<div class=\"toastui-chart-tooltip-series\">\n              ${getSeriesNameTemplate(label, color)}\n            </div>\n            <div>\n          ${values\n        .map(({ title, formattedValue }) => getTitleValueTemplate(title, formattedValue))\n        .join('')}\n            </div>`)\n        .join('')}\n    </div>`;\n}\nfunction getBulletTemplate({ data }, theme) {\n    return data.length > 1\n        ? getBulletGroupedTemplate(data, theme)\n        : getBulletBasicTemplate(data, theme);\n}\nfunction getBulletBasicTemplate(data, theme) {\n    return `\n    <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n      ${data\n        .map(({ label, color, value: values }) => `<div class=\"toastui-chart-tooltip-series\">${getSeriesNameTemplate(label, color)}</div>\n            ${values\n        .map(({ title, formattedValue }) => getTitleValueTemplate(title, formattedValue))\n        .join('')}`)\n        .join('')}\n    </div>`;\n}\nfunction getBulletGroupedTemplate(data, theme) {\n    const bulletData = data.map(({ value }) => value[0]);\n    const [actual, ranges, markers] = ['Actual', 'Range', 'Marker'].map((titleType) => makeBulletDataTemplate(bulletData, titleType));\n    return `<div class=\"toastui-chart-tooltip-category\" style=\"${getFontStyleString(theme.header)}\">\n      ${data[0].label}\n    </div>\n    <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n      ${actual ? '<div class=\"toastui-chart-tooltip-title\">Actual</div>' : ''} ${actual}\n      ${ranges ? '<div class=\"toastui-chart-tooltip-title\">Ranges</div>' : ''} ${ranges}\n      ${markers ? '<div class=\"toastui-chart-tooltip-title\">Markers</div>' : ''} ${markers}\n    </div>`;\n}\nfunction getPieTemplate({ data }, theme) {\n    return `\n    <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n      ${data\n        .map(({ label, color, formattedValue, percentValue }) => `<div class=\"toastui-chart-tooltip-series\">\n          ${getSeriesNameTemplate(label, color)}\n          <span class=\"toastui-chart-series-value\">${pieTooltipLabelFormatter(percentValue)}&nbsp;&nbsp;(${formattedValue})</span>\n        </div>`)\n        .join('')}\n    </div>`;\n}\nfunction getHeatmapTemplate({ data }, theme) {\n    return `${data\n        .map(({ label, color, formattedValue }) => `<div class=\"toastui-chart-tooltip-category\" style=\"${getFontStyleString(theme.header)}\">\n          ${label}\n        </div>\n        <div class=\"toastui-chart-tooltip-series-wrapper\" style=\"${getFontStyleString(theme.body)}\">\n          <div class=\"toastui-chart-tooltip-series\">\n            ${getSeriesNameTemplate(formattedValue, color)}\n          </div>\n        </div>`)\n        .join('')}`;\n}\nexport const tooltipTemplates = {\n    default: getDefaultTemplate,\n    defaultHeader: getHeaderTemplate,\n    defaultBody: getDefaultBodyTemplate,\n    boxPlot: getBoxPlotTemplate,\n    bullet: getBulletTemplate,\n    pie: getPieTemplate,\n    heatmap: getHeatmapTemplate,\n};\nexport function getBodyTemplate(type) {\n    return tooltipTemplates[type || 'defaultBody'];\n}\n"]},"metadata":{},"sourceType":"module"}