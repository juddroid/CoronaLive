{"ast":null,"code":"import { getFirstValidValue } from \"./utils\";\nexport function isRangeValue(value) {\n  return Array.isArray(value) && value.length === 2;\n}\nexport function isRangeData(data) {\n  return Array.isArray(data) && isRangeValue(getFirstValidValue(data));\n}\nexport function isZooming(categories, zoomRange) {\n  return !!(zoomRange && (zoomRange[0] !== 0 || zoomRange[1] !== categories.length - 1));\n}\nexport function getDataInRange(data, range) {\n  if (!range) {\n    return data;\n  }\n\n  return data.slice(range[0], range[1] + 1);\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/helpers/range.js"],"names":["getFirstValidValue","isRangeValue","value","Array","isArray","length","isRangeData","data","isZooming","categories","zoomRange","getDataInRange","range","slice"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,SAAnC;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAChC,SAAOC,KAAK,CAACC,OAAN,CAAcF,KAAd,KAAwBA,KAAK,CAACG,MAAN,KAAiB,CAAhD;AACH;AACD,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAC9B,SAAOJ,KAAK,CAACC,OAAN,CAAcG,IAAd,KAAuBN,YAAY,CAACD,kBAAkB,CAACO,IAAD,CAAnB,CAA1C;AACH;AACD,OAAO,SAASC,SAAT,CAAmBC,UAAnB,EAA+BC,SAA/B,EAA0C;AAC7C,SAAO,CAAC,EAAEA,SAAS,KAAKA,SAAS,CAAC,CAAD,CAAT,KAAiB,CAAjB,IAAsBA,SAAS,CAAC,CAAD,CAAT,KAAiBD,UAAU,CAACJ,MAAX,GAAoB,CAAhE,CAAX,CAAR;AACH;AACD,OAAO,SAASM,cAAT,CAAwBJ,IAAxB,EAA8BK,KAA9B,EAAqC;AACxC,MAAI,CAACA,KAAL,EAAY;AACR,WAAOL,IAAP;AACH;;AACD,SAAOA,IAAI,CAACM,KAAL,CAAWD,KAAK,CAAC,CAAD,CAAhB,EAAqBA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAhC,CAAP;AACH","sourcesContent":["import { getFirstValidValue } from \"./utils\";\nexport function isRangeValue(value) {\n    return Array.isArray(value) && value.length === 2;\n}\nexport function isRangeData(data) {\n    return Array.isArray(data) && isRangeValue(getFirstValidValue(data));\n}\nexport function isZooming(categories, zoomRange) {\n    return !!(zoomRange && (zoomRange[0] !== 0 || zoomRange[1] !== categories.length - 1));\n}\nexport function getDataInRange(data, range) {\n    if (!range) {\n        return data;\n    }\n    return data.slice(range[0], range[1] + 1);\n}\n"]},"metadata":{},"sourceType":"module"}