{"ast":null,"code":"import Component from \"./component\";\nimport { getRGBA } from \"../helpers/color\";\nimport { getRadialAnchorPosition, makeAnchorPositionParam, withinRadian, getDefaultRadius, DEGREE_360, DEGREE_0, DEGREE_90 } from \"../helpers/sector\";\nimport { getActiveSeriesMap } from \"../helpers/legend\";\nimport { getDataLabelsOptions, RADIUS_PADDING } from \"../helpers/dataLabels\";\nimport { getTotalAngle, isSemiCircle, getSemiCircleCenterY, makePieTooltipData, pieTooltipLabelFormatter } from \"../helpers/pieSeries\";\nimport { calculateSizeWithPercentString, isNumber, isUndefined, isNull, last } from \"../helpers/utils\";\nimport { pick } from \"../helpers/utils\";\nimport { message } from \"../message\";\nimport { getMaxLabelSize } from \"../helpers/axes\";\nimport { getFont } from \"../helpers/style\";\n\nfunction getCalculatedRadiusRange({\n  alias,\n  renderOptions,\n  radiusRangeMap,\n  pieIndex,\n  radiusRanges,\n  totalPieAliasCount\n}) {\n  var _a, _b, _c, _d, _e;\n\n  const radiusRangeLength = Object.keys(radiusRangeMap).length;\n  const {\n    defaultRadius = 0\n  } = renderOptions;\n  let {\n    inner,\n    outer\n  } = renderOptions.radiusRange;\n\n  if (!radiusRangeMap[alias]) {\n    if (!radiusRangeLength) {\n      const radius = defaultRadius / totalPieAliasCount;\n      inner = pieIndex * radius;\n      outer = (pieIndex + 1) * radius;\n    } else {\n      if (pieIndex && radiusRanges[pieIndex - 1].outer) {\n        inner = radiusRanges[pieIndex - 1].outer;\n      }\n\n      if ((_a = radiusRanges[pieIndex + 1]) === null || _a === void 0 ? void 0 : _a.inner) {\n        outer = radiusRanges[pieIndex + 1].inner;\n      } else if (pieIndex === totalPieAliasCount - 1) {\n        outer = defaultRadius;\n      } else {\n        const radius = (defaultRadius - (_c = (_b = radiusRanges[pieIndex - 1]) === null || _b === void 0 ? void 0 : _b.outer, _c !== null && _c !== void 0 ? _c : 0) - (_e = (_d = radiusRanges[pieIndex + 1]) === null || _d === void 0 ? void 0 : _d.inner, _e !== null && _e !== void 0 ? _e : 0)) / (totalPieAliasCount - radiusRangeLength);\n        outer = inner + radius;\n      }\n    }\n  }\n\n  return {\n    inner,\n    outer\n  };\n}\n\nfunction getPieSeriesOpacityByDepth(originAlpha, depth, indexOfGroup, brightness = 0.85) {\n  const depthAlpha = Number((originAlpha * Math.pow(brightness, depth)).toFixed(2));\n  return Number(Math.pow(depthAlpha, indexOfGroup + 1).toFixed(2));\n}\n\nfunction getMaxDataLabelSize(seriesNameLabels, options, dataLabelTheme) {\n  var _a, _b;\n\n  const outerLabels = [{\n    hasOuterLabel: options.visible && options.anchor === 'outer',\n    labels: ['00.00%'],\n    theme: dataLabelTheme\n  }, {\n    hasOuterLabel: ((_a = options.pieSeriesName) === null || _a === void 0 ? void 0 : _a.visible) && ((_b = options.pieSeriesName) === null || _b === void 0 ? void 0 : _b.anchor) === 'outer',\n    labels: seriesNameLabels,\n    theme: dataLabelTheme.pieSeriesName\n  }];\n  return outerLabels.reduce((acc, cur) => {\n    const {\n      width,\n      height\n    } = acc;\n    const {\n      hasOuterLabel,\n      labels,\n      theme\n    } = cur;\n\n    if (hasOuterLabel) {\n      const {\n        maxLabelWidth,\n        maxLabelHeight\n      } = getMaxLabelSize(labels, 0, getFont(theme));\n      return {\n        width: Math.max(maxLabelWidth + RADIUS_PADDING, width),\n        height: Math.max(maxLabelHeight + RADIUS_PADDING, height)\n      };\n    }\n\n    return acc;\n  }, {\n    width: 0,\n    height: 0\n  });\n}\n\nexport default class PieSeries extends Component {\n  constructor() {\n    super(...arguments);\n    this.models = {\n      series: []\n    };\n    this.activatedResponders = [];\n\n    this.onMouseoutComponent = () => {\n      this.eventBus.emit('seriesPointHovered', {\n        models: [],\n        name: this.alias || this.name\n      });\n      this.eventBus.emit('renderHoveredSeries', {\n        models: [],\n        name: this.alias || this.name\n      });\n      this.eventBus.emit('needDraw');\n    };\n\n    this.selectSeries = ({\n      seriesIndex,\n      name\n    }) => {\n      if (!isNumber(seriesIndex) || !isUndefined(name) && name !== this.alias) {\n        return;\n      }\n\n      const model = this.responders[seriesIndex];\n\n      if (!model) {\n        throw new Error(message.SELECT_SERIES_API_INDEX_ERROR);\n      }\n\n      this.eventBus.emit('renderSelectedSeries', {\n        models: this.getResponderModelsWithTheme([model], 'select'),\n        name: this.name,\n        alias: this.alias\n      });\n      this.eventBus.emit('needDraw');\n    };\n\n    this.showTooltip = ({\n      seriesIndex,\n      name\n    }) => {\n      if (!isNumber(seriesIndex) || !isUndefined(name) && name !== this.alias) {\n        return;\n      }\n\n      const models = [this.responders[seriesIndex]];\n\n      if (!models.length) {\n        return;\n      }\n\n      this.eventBus.emit('renderHoveredSeries', {\n        models: this.getResponderModelsWithTheme(models, 'hover'),\n        name: this.name,\n        alias: this.alias\n      });\n      this.activatedResponders = this.makeTooltipResponder(models);\n      this.eventBus.emit('seriesPointHovered', {\n        models: this.activatedResponders,\n        name: this.alias || this.name\n      });\n      this.eventBus.emit('needDraw');\n    };\n  }\n\n  initUpdate(delta) {\n    if (!this.drawModels) {\n      return;\n    }\n\n    let currentDegree;\n    const index = this.models.series.findIndex(({\n      clockwise,\n      degree: {\n        start,\n        end\n      },\n      totalAngle\n    }) => {\n      currentDegree = clockwise ? totalAngle * delta : DEGREE_360 - totalAngle * delta;\n      return withinRadian(clockwise, start, end, currentDegree);\n    });\n    this.syncEndAngle(index < 0 ? this.models.series.length : index);\n\n    if (~index) {\n      this.drawModels.series[index].degree.end = currentDegree;\n    }\n  }\n\n  syncEndAngle(index) {\n    if (index < 1) {\n      return;\n    }\n\n    for (let i = 0; i < index; i += 1) {\n      const prevTargetEndDegree = this.models.series[i].degree.end;\n\n      if (this.drawModels.series[i].degree.end !== prevTargetEndDegree) {\n        this.drawModels.series[i].degree.end = prevTargetEndDegree;\n      }\n    }\n  }\n\n  initialize(param) {\n    var _a, _b;\n\n    this.type = 'series';\n    this.name = 'pie';\n    this.alias = (_b = (_a = param) === null || _a === void 0 ? void 0 : _a.alias, _b !== null && _b !== void 0 ? _b : '');\n    this.eventBus.on('selectSeries', this.selectSeries);\n    this.eventBus.on('showTooltip', this.showTooltip);\n    this.eventBus.on('hideTooltip', this.onMouseoutComponent);\n  }\n\n  render(chartState) {\n    var _a, _b, _c, _d;\n\n    const {\n      layout,\n      series,\n      legend,\n      options,\n      nestedPieSeries,\n      theme\n    } = chartState;\n    const categories = (_a = chartState.categories, _a !== null && _a !== void 0 ? _a : []);\n\n    if (!series.pie) {\n      throw new Error(message.noDataError(this.name));\n    }\n\n    const pieTheme = theme.series.pie;\n    this.theme = this.alias ? pieTheme[this.alias] : pieTheme;\n    this.rect = layout.plot;\n    this.activeSeriesMap = getActiveSeriesMap(legend);\n    this.selectable = this.getSelectableOption(options);\n    let seriesModel, tooltipDataModel;\n    const dataLabelsOptions = getDataLabelsOptions(options, this.alias);\n\n    if (nestedPieSeries) {\n      const {\n        data\n      } = nestedPieSeries[this.alias];\n      const pieAlias = Object.keys(nestedPieSeries);\n      const pieIndex = pieAlias.findIndex(alias => alias === this.alias); // check the data label of the last Pie series\n\n      const lastAlias = last(pieAlias);\n      const lastSeries = nestedPieSeries[lastAlias];\n      const maxPieDataLabelSize = getMaxDataLabelSize(lastSeries.data.map(({\n        name\n      }) => name), getDataLabelsOptions(options, lastAlias), this.theme.dataLabels);\n      const renderOptionsMap = this.getRenderOptionsMap(options, pieAlias, maxPieDataLabelSize);\n      seriesModel = this.renderPieModel(data, renderOptionsMap[this.alias], pieIndex);\n      tooltipDataModel = makePieTooltipData(data, (_b = categories) === null || _b === void 0 ? void 0 : _b[pieIndex]);\n    } else {\n      const pieData = (_c = series.pie) === null || _c === void 0 ? void 0 : _c.data;\n      const {\n        width,\n        height\n      } = getMaxDataLabelSize(pieData.map(({\n        name\n      }) => name), dataLabelsOptions, this.theme.dataLabels);\n      const renderOptions = this.makeRenderOptions(options, width, height);\n      seriesModel = this.renderPieModel(pieData, renderOptions);\n      tooltipDataModel = makePieTooltipData(pieData, (_d = categories) === null || _d === void 0 ? void 0 : _d[0]);\n    }\n\n    this.models.series = seriesModel;\n\n    if (!this.drawModels) {\n      this.drawModels = {\n        series: this.models.series.map(m => Object.assign(Object.assign({}, m), {\n          degree: Object.assign(Object.assign({}, m.degree), {\n            end: m.degree.start\n          })\n        }))\n      };\n    }\n\n    if (dataLabelsOptions.visible) {\n      const dataLabelData = seriesModel.map(m => Object.assign(Object.assign({}, m), {\n        value: `${pieTooltipLabelFormatter(m.percentValue)}`,\n        theme: this.theme.dataLabels\n      }));\n      this.renderDataLabels(dataLabelData, this.alias);\n    }\n\n    this.responders = seriesModel.map((m, index) => Object.assign(Object.assign({}, m), {\n      type: 'sector',\n      radius: m.radius,\n      seriesIndex: index,\n      data: Object.assign(Object.assign({}, tooltipDataModel[index]), {\n        percentValue: m.percentValue\n      }),\n      color: getRGBA(m.color, 1)\n    }));\n  }\n\n  getRadiusRangeMap(options, pieAlias) {\n    return pieAlias.reduce((acc, alias) => {\n      var _a, _b;\n\n      const seriesOptions = this.getOptions(options, alias).series;\n\n      if ((_a = seriesOptions) === null || _a === void 0 ? void 0 : _a.radiusRange) {\n        acc[alias] = (_b = seriesOptions) === null || _b === void 0 ? void 0 : _b.radiusRange;\n      }\n\n      return acc;\n    }, {});\n  }\n\n  getRenderOptionsMap(options, pieAlias, maxPieDataLabelSize) {\n    const renderOptionsMap = this.initRenderOptionsMap(options, pieAlias, maxPieDataLabelSize);\n    const radiusRangeMap = this.getRadiusRangeMap(options, pieAlias);\n    pieAlias.forEach((alias, pieIndex) => {\n      const radiusRanges = Object.values(renderOptionsMap).map(({\n        radiusRange\n      }) => radiusRange);\n      renderOptionsMap[alias].radiusRange = getCalculatedRadiusRange({\n        alias,\n        renderOptions: renderOptionsMap[alias],\n        radiusRangeMap,\n        pieIndex,\n        radiusRanges,\n        totalPieAliasCount: pieAlias.length\n      });\n    });\n    return renderOptionsMap;\n  }\n\n  initRenderOptionsMap(options, pieAlias, {\n    width,\n    height\n  }) {\n    return pieAlias.reduce((acc, alias) => Object.assign(Object.assign({}, acc), {\n      [alias]: this.makeRenderOptions(this.getOptions(options, alias), width, height)\n    }), {});\n  }\n\n  getOptions(chartOptions, alias) {\n    var _a;\n\n    const options = Object.assign({}, chartOptions);\n\n    if (((_a = options) === null || _a === void 0 ? void 0 : _a.series) && alias) {\n      options.series = Object.assign(Object.assign({}, options.series), options.series[alias]);\n    }\n\n    return options;\n  }\n\n  makeRenderOptions(options, maxDataLabelWidth = 0, maxDataLabelHeight = 0) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n\n    const seriesOptions = options.series;\n    const clockwise = (_b = (_a = seriesOptions) === null || _a === void 0 ? void 0 : _a.clockwise, _b !== null && _b !== void 0 ? _b : true);\n    const startAngle = (_e = (_d = (_c = seriesOptions) === null || _c === void 0 ? void 0 : _c.angleRange) === null || _d === void 0 ? void 0 : _d.start, _e !== null && _e !== void 0 ? _e : DEGREE_0);\n    const endAngle = (_h = (_g = (_f = seriesOptions) === null || _f === void 0 ? void 0 : _f.angleRange) === null || _g === void 0 ? void 0 : _g.end, _h !== null && _h !== void 0 ? _h : DEGREE_360);\n    const totalAngle = getTotalAngle(clockwise, startAngle, endAngle);\n    const isSemiCircular = isSemiCircle(clockwise, startAngle, endAngle);\n    const {\n      width,\n      height\n    } = this.rect;\n    const defaultRadius = getDefaultRadius(this.rect, isSemiCircular, maxDataLabelWidth, maxDataLabelHeight);\n    const innerRadius = calculateSizeWithPercentString(defaultRadius, (_l = (_k = (_j = seriesOptions) === null || _j === void 0 ? void 0 : _j.radiusRange) === null || _k === void 0 ? void 0 : _k.inner, _l !== null && _l !== void 0 ? _l : 0));\n    const outerRadius = calculateSizeWithPercentString(defaultRadius, (_p = (_o = (_m = seriesOptions) === null || _m === void 0 ? void 0 : _m.radiusRange) === null || _o === void 0 ? void 0 : _o.outer, _p !== null && _p !== void 0 ? _p : this.alias ? 0 : defaultRadius));\n    const cx = width / 2;\n    const cy = isSemiCircular ? getSemiCircleCenterY(this.rect.height, clockwise) : height / 2;\n    return {\n      clockwise,\n      cx,\n      cy,\n      drawingStartAngle: startAngle - DEGREE_90,\n      radiusRange: {\n        inner: innerRadius,\n        outer: outerRadius\n      },\n      angleRange: {\n        start: startAngle,\n        end: endAngle\n      },\n      totalAngle,\n      defaultRadius\n    };\n  }\n\n  renderPieModel(seriesRawData, renderOptions, pieIndex) {\n    const sectorModels = [];\n    const total = seriesRawData.reduce((sum, {\n      data\n    }) => sum + (data !== null && data !== void 0 ? data : 0), 0);\n    const {\n      clockwise,\n      cx,\n      cy,\n      drawingStartAngle,\n      radiusRange: {\n        inner,\n        outer\n      },\n      totalAngle\n    } = renderOptions;\n    const defaultStartDegree = clockwise ? DEGREE_0 : DEGREE_360;\n    const {\n      lineWidth,\n      strokeStyle\n    } = this.theme;\n    seriesRawData.forEach((rawData, seriesIndex) => {\n      const color = this.alias ? this.getAliasSeriesColor(rawData, seriesRawData, pieIndex) : this.getSeriesColor(rawData);\n      const {\n        data,\n        name\n      } = rawData;\n\n      if (!isNull(data)) {\n        const degree = Math.max(data / total * totalAngle, 1) * (clockwise ? 1 : -1);\n        const percentValue = data / total * 100;\n        const prevModel = sectorModels[sectorModels.length - 1];\n        const startDegree = seriesIndex && prevModel ? prevModel.degree.end : defaultStartDegree;\n        const endDegree = clockwise ? Math.min(startDegree + degree, DEGREE_360) : Math.max(startDegree + degree, DEGREE_0);\n        sectorModels.push({\n          type: 'sector',\n          name,\n          color,\n          x: cx,\n          y: cy,\n          degree: {\n            start: startDegree,\n            end: endDegree\n          },\n          radius: {\n            inner,\n            outer\n          },\n          value: data,\n          style: [{\n            strokeStyle\n          }],\n          lineWidth,\n          clockwise,\n          drawingStartAngle,\n          totalAngle,\n          percentValue\n        });\n      }\n    });\n    return sectorModels;\n  }\n\n  makeTooltipResponder(responders) {\n    return responders.map(responder => Object.assign(Object.assign({}, responder), getRadialAnchorPosition(makeAnchorPositionParam('center', this.models.series[responder.seriesIndex]))));\n  }\n\n  onMousemove({\n    responders\n  }) {\n    this.eventBus.emit('renderHoveredSeries', {\n      models: this.getResponderModelsWithTheme(responders, 'hover'),\n      name: this.alias || this.name\n    });\n    this.activatedResponders = this.makeTooltipResponder(responders);\n    this.eventBus.emit('seriesPointHovered', {\n      models: this.activatedResponders,\n      name: this.alias || this.name\n    });\n    this.eventBus.emit('needDraw');\n  }\n\n  onClick({\n    responders\n  }) {\n    if (this.selectable) {\n      this.eventBus.emit('renderSelectedSeries', {\n        models: this.getResponderModelsWithTheme(responders, 'select'),\n        name: this.name,\n        alias: this.alias\n      });\n      this.eventBus.emit('needDraw');\n    }\n  }\n\n  getResponderModelsWithTheme(responders, type) {\n    const theme = this.theme[type];\n    const lineWidth = theme.lineWidth;\n    const isSameLineWidth = this.theme.lineWidth === lineWidth;\n    const thickness = isSameLineWidth ? 0 : lineWidth * 0.5;\n    return responders.map(m => {\n      var _a, _b;\n\n      return Object.assign(Object.assign({}, m), {\n        color: (_b = (_a = theme) === null || _a === void 0 ? void 0 : _a.color, _b !== null && _b !== void 0 ? _b : m.color),\n        lineWidth,\n        style: [pick(theme, 'strokeStyle', 'shadowBlur', 'shadowColor', 'shadowOffsetX', 'shadowOffsetY')],\n        radius: {\n          inner: Math.max(m.radius.inner - thickness, 0),\n          outer: m.radius.outer + thickness\n        }\n      });\n    });\n  }\n\n  getOpacity(active, selectedState) {\n    const {\n      select,\n      areaOpacity\n    } = this.theme;\n    const {\n      areaOpacity: selectedAreaOpacity,\n      restSeries: {\n        areaOpacity: restAreaOpacity\n      }\n    } = select;\n    const selectThemeOpacity = active ? selectedAreaOpacity : restAreaOpacity;\n    return selectedState ? selectThemeOpacity : areaOpacity;\n  }\n\n  getIndexOfGroup(seriesRawData, parentName, name) {\n    return seriesRawData.filter(datum => parentName === datum.parentName).findIndex(datum => name === datum.name);\n  }\n\n  getSeriesColor(rawData) {\n    const {\n      color,\n      name\n    } = rawData;\n    const active = this.activeSeriesMap[name];\n    const opacity = this.getOpacity(active, this.hasActiveSeries());\n    return getRGBA(color, opacity);\n  }\n\n  getAliasSeriesColor(rawData, seriesRawData, pieIndex) {\n    const {\n      color,\n      name\n    } = rawData;\n    const {\n      select: {\n        color: selectedColor\n      }\n    } = this.theme;\n    const {\n      rootParentName,\n      parentName\n    } = rawData;\n    const indexOfGroup = this.getIndexOfGroup(seriesRawData, parentName, name);\n    const opacity = this.getAliasSeriesOpacity(rootParentName, parentName, pieIndex, indexOfGroup, name);\n    const active = this.activeSeriesMap[rootParentName !== null && rootParentName !== void 0 ? rootParentName : name];\n    const seriesColor = active ? selectedColor !== null && selectedColor !== void 0 ? selectedColor : color : color;\n    return getRGBA(seriesColor, opacity);\n  }\n\n  getAliasSeriesOpacity(rootParentName, parentName, pieIndex, indexOfGroup, name) {\n    const active = this.activeSeriesMap[rootParentName !== null && rootParentName !== void 0 ? rootParentName : name];\n    const opacity = this.getOpacity(active, this.hasActiveSeries());\n    return pieIndex && parentName ? getPieSeriesOpacityByDepth(opacity, pieIndex, indexOfGroup) : opacity;\n  }\n\n  hasActiveSeries() {\n    return Object.values(this.activeSeriesMap).some(elem => !elem);\n  }\n\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/component/pieSeries.js"],"names":["Component","getRGBA","getRadialAnchorPosition","makeAnchorPositionParam","withinRadian","getDefaultRadius","DEGREE_360","DEGREE_0","DEGREE_90","getActiveSeriesMap","getDataLabelsOptions","RADIUS_PADDING","getTotalAngle","isSemiCircle","getSemiCircleCenterY","makePieTooltipData","pieTooltipLabelFormatter","calculateSizeWithPercentString","isNumber","isUndefined","isNull","last","pick","message","getMaxLabelSize","getFont","getCalculatedRadiusRange","alias","renderOptions","radiusRangeMap","pieIndex","radiusRanges","totalPieAliasCount","_a","_b","_c","_d","_e","radiusRangeLength","Object","keys","length","defaultRadius","inner","outer","radiusRange","radius","getPieSeriesOpacityByDepth","originAlpha","depth","indexOfGroup","brightness","depthAlpha","Number","Math","pow","toFixed","getMaxDataLabelSize","seriesNameLabels","options","dataLabelTheme","outerLabels","hasOuterLabel","visible","anchor","labels","theme","pieSeriesName","reduce","acc","cur","width","height","maxLabelWidth","maxLabelHeight","max","PieSeries","constructor","arguments","models","series","activatedResponders","onMouseoutComponent","eventBus","emit","name","selectSeries","seriesIndex","model","responders","Error","SELECT_SERIES_API_INDEX_ERROR","getResponderModelsWithTheme","showTooltip","makeTooltipResponder","initUpdate","delta","drawModels","currentDegree","index","findIndex","clockwise","degree","start","end","totalAngle","syncEndAngle","i","prevTargetEndDegree","initialize","param","type","on","render","chartState","layout","legend","nestedPieSeries","categories","pie","noDataError","pieTheme","rect","plot","activeSeriesMap","selectable","getSelectableOption","seriesModel","tooltipDataModel","dataLabelsOptions","data","pieAlias","lastAlias","lastSeries","maxPieDataLabelSize","map","dataLabels","renderOptionsMap","getRenderOptionsMap","renderPieModel","pieData","makeRenderOptions","m","assign","dataLabelData","value","percentValue","renderDataLabels","color","getRadiusRangeMap","seriesOptions","getOptions","initRenderOptionsMap","forEach","values","chartOptions","maxDataLabelWidth","maxDataLabelHeight","_f","_g","_h","_j","_k","_l","_m","_o","_p","startAngle","angleRange","endAngle","isSemiCircular","innerRadius","outerRadius","cx","cy","drawingStartAngle","seriesRawData","sectorModels","total","sum","defaultStartDegree","lineWidth","strokeStyle","rawData","getAliasSeriesColor","getSeriesColor","prevModel","startDegree","endDegree","min","push","x","y","style","responder","onMousemove","onClick","isSameLineWidth","thickness","getOpacity","active","selectedState","select","areaOpacity","selectedAreaOpacity","restSeries","restAreaOpacity","selectThemeOpacity","getIndexOfGroup","parentName","filter","datum","opacity","hasActiveSeries","selectedColor","rootParentName","getAliasSeriesOpacity","seriesColor","some","elem"],"mappings":"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","sourcesContent":["import Component from \"./component\";\nimport { getRGBA } from \"../helpers/color\";\nimport { getRadialAnchorPosition, makeAnchorPositionParam, withinRadian, getDefaultRadius, DEGREE_360, DEGREE_0, DEGREE_90, } from \"../helpers/sector\";\nimport { getActiveSeriesMap } from \"../helpers/legend\";\nimport { getDataLabelsOptions, RADIUS_PADDING } from \"../helpers/dataLabels\";\nimport { getTotalAngle, isSemiCircle, getSemiCircleCenterY, makePieTooltipData, pieTooltipLabelFormatter, } from \"../helpers/pieSeries\";\nimport { calculateSizeWithPercentString, isNumber, isUndefined, isNull, last, } from \"../helpers/utils\";\nimport { pick } from \"../helpers/utils\";\nimport { message } from \"../message\";\nimport { getMaxLabelSize } from \"../helpers/axes\";\nimport { getFont } from \"../helpers/style\";\nfunction getCalculatedRadiusRange({ alias, renderOptions, radiusRangeMap, pieIndex, radiusRanges, totalPieAliasCount, }) {\n    var _a, _b, _c, _d, _e;\n    const radiusRangeLength = Object.keys(radiusRangeMap).length;\n    const { defaultRadius = 0 } = renderOptions;\n    let { inner, outer } = renderOptions.radiusRange;\n    if (!radiusRangeMap[alias]) {\n        if (!radiusRangeLength) {\n            const radius = defaultRadius / totalPieAliasCount;\n            inner = pieIndex * radius;\n            outer = (pieIndex + 1) * radius;\n        }\n        else {\n            if (pieIndex && radiusRanges[pieIndex - 1].outer) {\n                inner = radiusRanges[pieIndex - 1].outer;\n            }\n            if ((_a = radiusRanges[pieIndex + 1]) === null || _a === void 0 ? void 0 : _a.inner) {\n                outer = radiusRanges[pieIndex + 1].inner;\n            }\n            else if (pieIndex === totalPieAliasCount - 1) {\n                outer = defaultRadius;\n            }\n            else {\n                const radius = (defaultRadius -\n                    (_c = (_b = radiusRanges[pieIndex - 1]) === null || _b === void 0 ? void 0 : _b.outer, (_c !== null && _c !== void 0 ? _c : 0)) -\n                    (_e = (_d = radiusRanges[pieIndex + 1]) === null || _d === void 0 ? void 0 : _d.inner, (_e !== null && _e !== void 0 ? _e : 0))) /\n                    (totalPieAliasCount - radiusRangeLength);\n                outer = inner + radius;\n            }\n        }\n    }\n    return { inner, outer };\n}\nfunction getPieSeriesOpacityByDepth(originAlpha, depth, indexOfGroup, brightness = 0.85) {\n    const depthAlpha = Number((originAlpha * Math.pow(brightness, depth)).toFixed(2));\n    return Number((Math.pow(depthAlpha, (indexOfGroup + 1))).toFixed(2));\n}\nfunction getMaxDataLabelSize(seriesNameLabels, options, dataLabelTheme) {\n    var _a, _b;\n    const outerLabels = [\n        {\n            hasOuterLabel: options.visible && options.anchor === 'outer',\n            labels: ['00.00%'],\n            theme: dataLabelTheme,\n        },\n        {\n            hasOuterLabel: ((_a = options.pieSeriesName) === null || _a === void 0 ? void 0 : _a.visible) && ((_b = options.pieSeriesName) === null || _b === void 0 ? void 0 : _b.anchor) === 'outer',\n            labels: seriesNameLabels,\n            theme: dataLabelTheme.pieSeriesName,\n        },\n    ];\n    return outerLabels.reduce((acc, cur) => {\n        const { width, height } = acc;\n        const { hasOuterLabel, labels, theme } = cur;\n        if (hasOuterLabel) {\n            const { maxLabelWidth, maxLabelHeight } = getMaxLabelSize(labels, 0, getFont(theme));\n            return {\n                width: Math.max(maxLabelWidth + RADIUS_PADDING, width),\n                height: Math.max(maxLabelHeight + RADIUS_PADDING, height),\n            };\n        }\n        return acc;\n    }, { width: 0, height: 0 });\n}\nexport default class PieSeries extends Component {\n    constructor() {\n        super(...arguments);\n        this.models = { series: [] };\n        this.activatedResponders = [];\n        this.onMouseoutComponent = () => {\n            this.eventBus.emit('seriesPointHovered', { models: [], name: this.alias || this.name });\n            this.eventBus.emit('renderHoveredSeries', { models: [], name: this.alias || this.name });\n            this.eventBus.emit('needDraw');\n        };\n        this.selectSeries = ({ seriesIndex, name }) => {\n            if (!isNumber(seriesIndex) || (!isUndefined(name) && name !== this.alias)) {\n                return;\n            }\n            const model = this.responders[seriesIndex];\n            if (!model) {\n                throw new Error(message.SELECT_SERIES_API_INDEX_ERROR);\n            }\n            this.eventBus.emit('renderSelectedSeries', {\n                models: this.getResponderModelsWithTheme([model], 'select'),\n                name: this.name,\n                alias: this.alias,\n            });\n            this.eventBus.emit('needDraw');\n        };\n        this.showTooltip = ({ seriesIndex, name }) => {\n            if (!isNumber(seriesIndex) || (!isUndefined(name) && name !== this.alias)) {\n                return;\n            }\n            const models = [this.responders[seriesIndex]];\n            if (!models.length) {\n                return;\n            }\n            this.eventBus.emit('renderHoveredSeries', {\n                models: this.getResponderModelsWithTheme(models, 'hover'),\n                name: this.name,\n                alias: this.alias,\n            });\n            this.activatedResponders = this.makeTooltipResponder(models);\n            this.eventBus.emit('seriesPointHovered', {\n                models: this.activatedResponders,\n                name: this.alias || this.name,\n            });\n            this.eventBus.emit('needDraw');\n        };\n    }\n    initUpdate(delta) {\n        if (!this.drawModels) {\n            return;\n        }\n        let currentDegree;\n        const index = this.models.series.findIndex(({ clockwise, degree: { start, end }, totalAngle }) => {\n            currentDegree = clockwise ? totalAngle * delta : DEGREE_360 - totalAngle * delta;\n            return withinRadian(clockwise, start, end, currentDegree);\n        });\n        this.syncEndAngle(index < 0 ? this.models.series.length : index);\n        if (~index) {\n            this.drawModels.series[index].degree.end = currentDegree;\n        }\n    }\n    syncEndAngle(index) {\n        if (index < 1) {\n            return;\n        }\n        for (let i = 0; i < index; i += 1) {\n            const prevTargetEndDegree = this.models.series[i].degree.end;\n            if (this.drawModels.series[i].degree.end !== prevTargetEndDegree) {\n                this.drawModels.series[i].degree.end = prevTargetEndDegree;\n            }\n        }\n    }\n    initialize(param) {\n        var _a, _b;\n        this.type = 'series';\n        this.name = 'pie';\n        this.alias = (_b = (_a = param) === null || _a === void 0 ? void 0 : _a.alias, (_b !== null && _b !== void 0 ? _b : ''));\n        this.eventBus.on('selectSeries', this.selectSeries);\n        this.eventBus.on('showTooltip', this.showTooltip);\n        this.eventBus.on('hideTooltip', this.onMouseoutComponent);\n    }\n    render(chartState) {\n        var _a, _b, _c, _d;\n        const { layout, series, legend, options, nestedPieSeries, theme } = chartState;\n        const categories = (_a = chartState.categories, (_a !== null && _a !== void 0 ? _a : []));\n        if (!series.pie) {\n            throw new Error(message.noDataError(this.name));\n        }\n        const pieTheme = theme.series.pie;\n        this.theme = this.alias ? pieTheme[this.alias] : pieTheme;\n        this.rect = layout.plot;\n        this.activeSeriesMap = getActiveSeriesMap(legend);\n        this.selectable = this.getSelectableOption(options);\n        let seriesModel, tooltipDataModel;\n        const dataLabelsOptions = getDataLabelsOptions(options, this.alias);\n        if (nestedPieSeries) {\n            const { data } = nestedPieSeries[this.alias];\n            const pieAlias = Object.keys(nestedPieSeries);\n            const pieIndex = pieAlias.findIndex((alias) => alias === this.alias);\n            // check the data label of the last Pie series\n            const lastAlias = last(pieAlias);\n            const lastSeries = nestedPieSeries[lastAlias];\n            const maxPieDataLabelSize = getMaxDataLabelSize(lastSeries.data.map(({ name }) => name), getDataLabelsOptions(options, lastAlias), this.theme.dataLabels);\n            const renderOptionsMap = this.getRenderOptionsMap(options, pieAlias, maxPieDataLabelSize);\n            seriesModel = this.renderPieModel(data, renderOptionsMap[this.alias], pieIndex);\n            tooltipDataModel = makePieTooltipData(data, (_b = categories) === null || _b === void 0 ? void 0 : _b[pieIndex]);\n        }\n        else {\n            const pieData = (_c = series.pie) === null || _c === void 0 ? void 0 : _c.data;\n            const { width, height } = getMaxDataLabelSize(pieData.map(({ name }) => name), dataLabelsOptions, this.theme.dataLabels);\n            const renderOptions = this.makeRenderOptions(options, width, height);\n            seriesModel = this.renderPieModel(pieData, renderOptions);\n            tooltipDataModel = makePieTooltipData(pieData, (_d = categories) === null || _d === void 0 ? void 0 : _d[0]);\n        }\n        this.models.series = seriesModel;\n        if (!this.drawModels) {\n            this.drawModels = {\n                series: this.models.series.map((m) => (Object.assign(Object.assign({}, m), { degree: Object.assign(Object.assign({}, m.degree), { end: m.degree.start }) }))),\n            };\n        }\n        if (dataLabelsOptions.visible) {\n            const dataLabelData = seriesModel.map((m) => (Object.assign(Object.assign({}, m), { value: `${pieTooltipLabelFormatter(m.percentValue)}`, theme: this.theme.dataLabels })));\n            this.renderDataLabels(dataLabelData, this.alias);\n        }\n        this.responders = seriesModel.map((m, index) => (Object.assign(Object.assign({}, m), { type: 'sector', radius: m.radius, seriesIndex: index, data: Object.assign(Object.assign({}, tooltipDataModel[index]), { percentValue: m.percentValue }), color: getRGBA(m.color, 1) })));\n    }\n    getRadiusRangeMap(options, pieAlias) {\n        return pieAlias.reduce((acc, alias) => {\n            var _a, _b;\n            const seriesOptions = this.getOptions(options, alias).series;\n            if ((_a = seriesOptions) === null || _a === void 0 ? void 0 : _a.radiusRange) {\n                acc[alias] = (_b = seriesOptions) === null || _b === void 0 ? void 0 : _b.radiusRange;\n            }\n            return acc;\n        }, {});\n    }\n    getRenderOptionsMap(options, pieAlias, maxPieDataLabelSize) {\n        const renderOptionsMap = this.initRenderOptionsMap(options, pieAlias, maxPieDataLabelSize);\n        const radiusRangeMap = this.getRadiusRangeMap(options, pieAlias);\n        pieAlias.forEach((alias, pieIndex) => {\n            const radiusRanges = Object.values(renderOptionsMap).map(({ radiusRange }) => radiusRange);\n            renderOptionsMap[alias].radiusRange = getCalculatedRadiusRange({\n                alias,\n                renderOptions: renderOptionsMap[alias],\n                radiusRangeMap,\n                pieIndex,\n                radiusRanges,\n                totalPieAliasCount: pieAlias.length,\n            });\n        });\n        return renderOptionsMap;\n    }\n    initRenderOptionsMap(options, pieAlias, { width, height }) {\n        return pieAlias.reduce((acc, alias) => (Object.assign(Object.assign({}, acc), { [alias]: this.makeRenderOptions(this.getOptions(options, alias), width, height) })), {});\n    }\n    getOptions(chartOptions, alias) {\n        var _a;\n        const options = Object.assign({}, chartOptions);\n        if (((_a = options) === null || _a === void 0 ? void 0 : _a.series) && alias) {\n            options.series = Object.assign(Object.assign({}, options.series), options.series[alias]);\n        }\n        return options;\n    }\n    makeRenderOptions(options, maxDataLabelWidth = 0, maxDataLabelHeight = 0) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const seriesOptions = options.series;\n        const clockwise = (_b = (_a = seriesOptions) === null || _a === void 0 ? void 0 : _a.clockwise, (_b !== null && _b !== void 0 ? _b : true));\n        const startAngle = (_e = (_d = (_c = seriesOptions) === null || _c === void 0 ? void 0 : _c.angleRange) === null || _d === void 0 ? void 0 : _d.start, (_e !== null && _e !== void 0 ? _e : DEGREE_0));\n        const endAngle = (_h = (_g = (_f = seriesOptions) === null || _f === void 0 ? void 0 : _f.angleRange) === null || _g === void 0 ? void 0 : _g.end, (_h !== null && _h !== void 0 ? _h : DEGREE_360));\n        const totalAngle = getTotalAngle(clockwise, startAngle, endAngle);\n        const isSemiCircular = isSemiCircle(clockwise, startAngle, endAngle);\n        const { width, height } = this.rect;\n        const defaultRadius = getDefaultRadius(this.rect, isSemiCircular, maxDataLabelWidth, maxDataLabelHeight);\n        const innerRadius = calculateSizeWithPercentString(defaultRadius, (_l = (_k = (_j = seriesOptions) === null || _j === void 0 ? void 0 : _j.radiusRange) === null || _k === void 0 ? void 0 : _k.inner, (_l !== null && _l !== void 0 ? _l : 0)));\n        const outerRadius = calculateSizeWithPercentString(defaultRadius, (_p = (_o = (_m = seriesOptions) === null || _m === void 0 ? void 0 : _m.radiusRange) === null || _o === void 0 ? void 0 : _o.outer, (_p !== null && _p !== void 0 ? _p : (this.alias ? 0 : defaultRadius))));\n        const cx = width / 2;\n        const cy = isSemiCircular ? getSemiCircleCenterY(this.rect.height, clockwise) : height / 2;\n        return {\n            clockwise,\n            cx,\n            cy,\n            drawingStartAngle: startAngle - DEGREE_90,\n            radiusRange: {\n                inner: innerRadius,\n                outer: outerRadius,\n            },\n            angleRange: {\n                start: startAngle,\n                end: endAngle,\n            },\n            totalAngle,\n            defaultRadius,\n        };\n    }\n    renderPieModel(seriesRawData, renderOptions, pieIndex) {\n        const sectorModels = [];\n        const total = seriesRawData.reduce((sum, { data }) => sum + ((data !== null && data !== void 0 ? data : 0)), 0);\n        const { clockwise, cx, cy, drawingStartAngle, radiusRange: { inner, outer }, totalAngle, } = renderOptions;\n        const defaultStartDegree = clockwise ? DEGREE_0 : DEGREE_360;\n        const { lineWidth, strokeStyle } = this.theme;\n        seriesRawData.forEach((rawData, seriesIndex) => {\n            const color = this.alias\n                ? this.getAliasSeriesColor(rawData, seriesRawData, pieIndex)\n                : this.getSeriesColor(rawData);\n            const { data, name } = rawData;\n            if (!isNull(data)) {\n                const degree = Math.max((data / total) * totalAngle, 1) * (clockwise ? 1 : -1);\n                const percentValue = (data / total) * 100;\n                const prevModel = sectorModels[sectorModels.length - 1];\n                const startDegree = seriesIndex && prevModel ? prevModel.degree.end : defaultStartDegree;\n                const endDegree = clockwise\n                    ? Math.min(startDegree + degree, DEGREE_360)\n                    : Math.max(startDegree + degree, DEGREE_0);\n                sectorModels.push({\n                    type: 'sector',\n                    name,\n                    color,\n                    x: cx,\n                    y: cy,\n                    degree: {\n                        start: startDegree,\n                        end: endDegree,\n                    },\n                    radius: {\n                        inner,\n                        outer,\n                    },\n                    value: data,\n                    style: [{ strokeStyle }],\n                    lineWidth,\n                    clockwise,\n                    drawingStartAngle,\n                    totalAngle,\n                    percentValue,\n                });\n            }\n        });\n        return sectorModels;\n    }\n    makeTooltipResponder(responders) {\n        return responders.map((responder) => (Object.assign(Object.assign({}, responder), getRadialAnchorPosition(makeAnchorPositionParam('center', this.models.series[responder.seriesIndex])))));\n    }\n    onMousemove({ responders }) {\n        this.eventBus.emit('renderHoveredSeries', {\n            models: this.getResponderModelsWithTheme(responders, 'hover'),\n            name: this.alias || this.name,\n        });\n        this.activatedResponders = this.makeTooltipResponder(responders);\n        this.eventBus.emit('seriesPointHovered', {\n            models: this.activatedResponders,\n            name: this.alias || this.name,\n        });\n        this.eventBus.emit('needDraw');\n    }\n    onClick({ responders }) {\n        if (this.selectable) {\n            this.eventBus.emit('renderSelectedSeries', {\n                models: this.getResponderModelsWithTheme(responders, 'select'),\n                name: this.name,\n                alias: this.alias,\n            });\n            this.eventBus.emit('needDraw');\n        }\n    }\n    getResponderModelsWithTheme(responders, type) {\n        const theme = this.theme[type];\n        const lineWidth = theme.lineWidth;\n        const isSameLineWidth = this.theme.lineWidth === lineWidth;\n        const thickness = isSameLineWidth ? 0 : lineWidth * 0.5;\n        return responders.map((m) => {\n            var _a, _b;\n            return (Object.assign(Object.assign({}, m), { color: (_b = (_a = theme) === null || _a === void 0 ? void 0 : _a.color, (_b !== null && _b !== void 0 ? _b : m.color)), lineWidth, style: [\n                    pick(theme, 'strokeStyle', 'shadowBlur', 'shadowColor', 'shadowOffsetX', 'shadowOffsetY'),\n                ], radius: {\n                    inner: Math.max(m.radius.inner - thickness, 0),\n                    outer: m.radius.outer + thickness,\n                } }));\n        });\n    }\n    getOpacity(active, selectedState) {\n        const { select, areaOpacity } = this.theme;\n        const { areaOpacity: selectedAreaOpacity, restSeries: { areaOpacity: restAreaOpacity }, } = select;\n        const selectThemeOpacity = active ? selectedAreaOpacity : restAreaOpacity;\n        return selectedState ? selectThemeOpacity : areaOpacity;\n    }\n    getIndexOfGroup(seriesRawData, parentName, name) {\n        return seriesRawData\n            .filter((datum) => parentName === datum.parentName)\n            .findIndex((datum) => name === datum.name);\n    }\n    getSeriesColor(rawData) {\n        const { color, name } = rawData;\n        const active = this.activeSeriesMap[name];\n        const opacity = this.getOpacity(active, this.hasActiveSeries());\n        return getRGBA(color, opacity);\n    }\n    getAliasSeriesColor(rawData, seriesRawData, pieIndex) {\n        const { color, name } = rawData;\n        const { select: { color: selectedColor }, } = this.theme;\n        const { rootParentName, parentName } = rawData;\n        const indexOfGroup = this.getIndexOfGroup(seriesRawData, parentName, name);\n        const opacity = this.getAliasSeriesOpacity(rootParentName, parentName, pieIndex, indexOfGroup, name);\n        const active = this.activeSeriesMap[(rootParentName !== null && rootParentName !== void 0 ? rootParentName : name)];\n        const seriesColor = active ? (selectedColor !== null && selectedColor !== void 0 ? selectedColor : color) : color;\n        return getRGBA(seriesColor, opacity);\n    }\n    getAliasSeriesOpacity(rootParentName, parentName, pieIndex, indexOfGroup, name) {\n        const active = this.activeSeriesMap[(rootParentName !== null && rootParentName !== void 0 ? rootParentName : name)];\n        const opacity = this.getOpacity(active, this.hasActiveSeries());\n        return pieIndex && parentName\n            ? getPieSeriesOpacityByDepth(opacity, pieIndex, indexOfGroup)\n            : opacity;\n    }\n    hasActiveSeries() {\n        return Object.values(this.activeSeriesMap).some((elem) => !elem);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}