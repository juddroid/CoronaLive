{"ast":null,"code":"import { makeStyleObj, fillStyle, strokeWithOptions } from \"../helpers/style\";\nimport { isNumber } from \"../helpers/utils\";\nimport { rgba } from \"../helpers/color\";\nexport const DEFAULT_LABEL_TEXT = 'normal 11px Arial';\nexport const labelStyle = {\n  default: {\n    font: DEFAULT_LABEL_TEXT,\n    fillStyle: '#333333',\n    textAlign: 'left',\n    textBaseline: 'middle'\n  },\n  title: {\n    textBaseline: 'top'\n  },\n  axisTitle: {\n    textBaseline: 'top'\n  },\n  rectLabel: {\n    font: DEFAULT_LABEL_TEXT,\n    fillStyle: 'rgba(0, 0, 0, 0.3)',\n    textAlign: 'center',\n    textBaseline: 'middle'\n  }\n};\nexport const strokeLabelStyle = {\n  none: {\n    lineWidth: 1,\n    strokeStyle: 'rgba(255, 255, 255, 0)'\n  },\n  stroke: {\n    lineWidth: 4,\n    strokeStyle: 'rgba(255, 255, 255, 0.5)'\n  }\n};\nexport function label(ctx, labelModel) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n\n  const {\n    x,\n    y,\n    text,\n    style,\n    stroke,\n    opacity,\n    radian,\n    rotationPosition\n  } = labelModel;\n\n  if (style) {\n    const styleObj = makeStyleObj(style, labelStyle);\n    Object.keys(styleObj).forEach(key => {\n      ctx[key] = key === 'fillStyle' && isNumber(opacity) ? rgba(styleObj[key], opacity) : styleObj[key];\n    });\n  }\n\n  ctx.save();\n\n  if (radian) {\n    ctx.translate((_b = (_a = rotationPosition) === null || _a === void 0 ? void 0 : _a.x, _b !== null && _b !== void 0 ? _b : x), (_d = (_c = rotationPosition) === null || _c === void 0 ? void 0 : _c.y, _d !== null && _d !== void 0 ? _d : y));\n    ctx.rotate(radian);\n    ctx.translate(-(_f = (_e = rotationPosition) === null || _e === void 0 ? void 0 : _e.x, _f !== null && _f !== void 0 ? _f : x), -(_h = (_g = rotationPosition) === null || _g === void 0 ? void 0 : _g.y, _h !== null && _h !== void 0 ? _h : y));\n  }\n\n  if (stroke) {\n    const strokeStyleObj = makeStyleObj(stroke, strokeLabelStyle);\n    const strokeStyleKeys = Object.keys(strokeStyleObj);\n    strokeStyleKeys.forEach(key => {\n      ctx[key] = key === 'strokeStyle' && isNumber(opacity) ? rgba(strokeStyleObj[key], opacity) : strokeStyleObj[key];\n    });\n\n    if (strokeStyleKeys.length) {\n      ctx.strokeText(text, x, y);\n    }\n  }\n\n  ctx.fillText(text, x, y);\n  ctx.restore();\n}\nconst textBubbleStyle = {\n  shadow: {\n    shadowColor: 'rgba(0, 0, 0, 0.3)',\n    shadowOffsetY: 2,\n    shadowBlur: 4\n  }\n};\nexport function bubbleLabel(ctx, model) {\n  var _a, _b, _c, _d;\n\n  const {\n    radian = 0,\n    rotationPosition,\n    bubble: {\n      x,\n      y,\n      width,\n      height,\n      radius = 0,\n      lineWidth = 1,\n      direction,\n      points = [],\n      fill = '#fff',\n      strokeStyle = 'rgba(0, 0, 0, 0)',\n      style: bubbleStyle = null\n    }\n  } = model;\n\n  if (width > 0 && height > 0) {\n    drawBubble(ctx, {\n      x,\n      y,\n      radius,\n      width,\n      height,\n      style: bubbleStyle,\n      fill,\n      strokeStyle,\n      lineWidth,\n      direction,\n      points,\n      radian,\n      rotationPosition: {\n        x: (_b = (_a = rotationPosition) === null || _a === void 0 ? void 0 : _a.x, _b !== null && _b !== void 0 ? _b : x),\n        y: (_d = (_c = rotationPosition) === null || _c === void 0 ? void 0 : _c.y, _d !== null && _d !== void 0 ? _d : y)\n      }\n    });\n  }\n\n  if (model.label.text) {\n    const {\n      x: labelX,\n      y: labelY,\n      text,\n      strokeStyle: labelStrokeColor = 'rgba(0, 0, 0, 0)',\n      style\n    } = model.label;\n    ctx.shadowColor = 'rgba(0, 0, 0, 0)';\n    label(ctx, {\n      type: 'label',\n      x: labelX,\n      y: labelY,\n      text,\n      style,\n      stroke: [{\n        strokeStyle: labelStrokeColor\n      }],\n      radian,\n      rotationPosition\n    });\n  }\n}\n\nfunction drawBubbleArrow(ctx, points) {\n  if (!points.length) {\n    return;\n  }\n\n  ctx.lineTo(points[0].x, points[0].y);\n  ctx.lineTo(points[1].x, points[1].y);\n  ctx.lineTo(points[2].x, points[2].y);\n}\n\nfunction drawBubble(ctx, model) {\n  const {\n    x,\n    y,\n    width,\n    height,\n    style,\n    radius = 0,\n    strokeStyle,\n    fill,\n    lineWidth = 1,\n    points = [],\n    direction = '',\n    radian,\n    rotationPosition\n  } = model;\n  const right = x + width;\n  const bottom = y + height;\n  ctx.beginPath();\n  ctx.save();\n\n  if (radian && rotationPosition) {\n    ctx.translate(rotationPosition.x, rotationPosition.y);\n    ctx.rotate(radian);\n    ctx.translate(-rotationPosition.x, -rotationPosition.y);\n  }\n\n  ctx.moveTo(x + radius, y);\n\n  if (direction === 'top') {\n    drawBubbleArrow(ctx, points);\n  }\n\n  ctx.lineTo(right - radius, y);\n  ctx.quadraticCurveTo(right, y, right, y + radius);\n\n  if (direction === 'right') {\n    drawBubbleArrow(ctx, points);\n  }\n\n  ctx.lineTo(right, y + height - radius);\n  ctx.quadraticCurveTo(right, bottom, right - radius, bottom);\n\n  if (direction === 'bottom') {\n    drawBubbleArrow(ctx, points);\n  }\n\n  ctx.lineTo(x + radius, bottom);\n  ctx.quadraticCurveTo(x, bottom, x, bottom - radius);\n\n  if (direction === 'left') {\n    drawBubbleArrow(ctx, points);\n  }\n\n  ctx.lineTo(x, y + radius);\n  ctx.quadraticCurveTo(x, y, x + radius, y);\n\n  if (style) {\n    const styleObj = makeStyleObj(style, textBubbleStyle);\n    Object.keys(styleObj).forEach(key => {\n      ctx[key] = styleObj[key];\n    });\n  }\n\n  if (fill) {\n    fillStyle(ctx, fill);\n  }\n\n  if (strokeStyle) {\n    strokeWithOptions(ctx, {\n      strokeStyle,\n      lineWidth\n    });\n  }\n\n  ctx.restore();\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/brushes/label.js"],"names":["makeStyleObj","fillStyle","strokeWithOptions","isNumber","rgba","DEFAULT_LABEL_TEXT","labelStyle","default","font","textAlign","textBaseline","title","axisTitle","rectLabel","strokeLabelStyle","none","lineWidth","strokeStyle","stroke","label","ctx","labelModel","_a","_b","_c","_d","_e","_f","_g","_h","x","y","text","style","opacity","radian","rotationPosition","styleObj","Object","keys","forEach","key","save","translate","rotate","strokeStyleObj","strokeStyleKeys","length","strokeText","fillText","restore","textBubbleStyle","shadow","shadowColor","shadowOffsetY","shadowBlur","bubbleLabel","model","bubble","width","height","radius","direction","points","fill","bubbleStyle","drawBubble","labelX","labelY","labelStrokeColor","type","drawBubbleArrow","lineTo","right","bottom","beginPath","moveTo","quadraticCurveTo"],"mappings":"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","sourcesContent":["import { makeStyleObj, fillStyle, strokeWithOptions } from \"../helpers/style\";\nimport { isNumber } from \"../helpers/utils\";\nimport { rgba } from \"../helpers/color\";\nexport const DEFAULT_LABEL_TEXT = 'normal 11px Arial';\nexport const labelStyle = {\n    default: {\n        font: DEFAULT_LABEL_TEXT,\n        fillStyle: '#333333',\n        textAlign: 'left',\n        textBaseline: 'middle',\n    },\n    title: {\n        textBaseline: 'top',\n    },\n    axisTitle: {\n        textBaseline: 'top',\n    },\n    rectLabel: {\n        font: DEFAULT_LABEL_TEXT,\n        fillStyle: 'rgba(0, 0, 0, 0.3)',\n        textAlign: 'center',\n        textBaseline: 'middle',\n    },\n};\nexport const strokeLabelStyle = {\n    none: {\n        lineWidth: 1,\n        strokeStyle: 'rgba(255, 255, 255, 0)',\n    },\n    stroke: {\n        lineWidth: 4,\n        strokeStyle: 'rgba(255, 255, 255, 0.5)',\n    },\n};\nexport function label(ctx, labelModel) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const { x, y, text, style, stroke, opacity, radian, rotationPosition } = labelModel;\n    if (style) {\n        const styleObj = makeStyleObj(style, labelStyle);\n        Object.keys(styleObj).forEach((key) => {\n            ctx[key] =\n                key === 'fillStyle' && isNumber(opacity) ? rgba(styleObj[key], opacity) : styleObj[key];\n        });\n    }\n    ctx.save();\n    if (radian) {\n        ctx.translate((_b = (_a = rotationPosition) === null || _a === void 0 ? void 0 : _a.x, (_b !== null && _b !== void 0 ? _b : x)), (_d = (_c = rotationPosition) === null || _c === void 0 ? void 0 : _c.y, (_d !== null && _d !== void 0 ? _d : y)));\n        ctx.rotate(radian);\n        ctx.translate(-(_f = (_e = rotationPosition) === null || _e === void 0 ? void 0 : _e.x, (_f !== null && _f !== void 0 ? _f : x)), -(_h = (_g = rotationPosition) === null || _g === void 0 ? void 0 : _g.y, (_h !== null && _h !== void 0 ? _h : y)));\n    }\n    if (stroke) {\n        const strokeStyleObj = makeStyleObj(stroke, strokeLabelStyle);\n        const strokeStyleKeys = Object.keys(strokeStyleObj);\n        strokeStyleKeys.forEach((key) => {\n            ctx[key] =\n                key === 'strokeStyle' && isNumber(opacity)\n                    ? rgba(strokeStyleObj[key], opacity)\n                    : strokeStyleObj[key];\n        });\n        if (strokeStyleKeys.length) {\n            ctx.strokeText(text, x, y);\n        }\n    }\n    ctx.fillText(text, x, y);\n    ctx.restore();\n}\nconst textBubbleStyle = {\n    shadow: {\n        shadowColor: 'rgba(0, 0, 0, 0.3)',\n        shadowOffsetY: 2,\n        shadowBlur: 4,\n    },\n};\nexport function bubbleLabel(ctx, model) {\n    var _a, _b, _c, _d;\n    const { radian = 0, rotationPosition, bubble: { x, y, width, height, radius = 0, lineWidth = 1, direction, points = [], fill = '#fff', strokeStyle = 'rgba(0, 0, 0, 0)', style: bubbleStyle = null, }, } = model;\n    if (width > 0 && height > 0) {\n        drawBubble(ctx, {\n            x,\n            y,\n            radius,\n            width,\n            height,\n            style: bubbleStyle,\n            fill,\n            strokeStyle,\n            lineWidth,\n            direction,\n            points,\n            radian,\n            rotationPosition: {\n                x: (_b = (_a = rotationPosition) === null || _a === void 0 ? void 0 : _a.x, (_b !== null && _b !== void 0 ? _b : x)),\n                y: (_d = (_c = rotationPosition) === null || _c === void 0 ? void 0 : _c.y, (_d !== null && _d !== void 0 ? _d : y)),\n            },\n        });\n    }\n    if (model.label.text) {\n        const { x: labelX, y: labelY, text, strokeStyle: labelStrokeColor = 'rgba(0, 0, 0, 0)', style, } = model.label;\n        ctx.shadowColor = 'rgba(0, 0, 0, 0)';\n        label(ctx, {\n            type: 'label',\n            x: labelX,\n            y: labelY,\n            text,\n            style,\n            stroke: [{ strokeStyle: labelStrokeColor }],\n            radian,\n            rotationPosition,\n        });\n    }\n}\nfunction drawBubbleArrow(ctx, points) {\n    if (!points.length) {\n        return;\n    }\n    ctx.lineTo(points[0].x, points[0].y);\n    ctx.lineTo(points[1].x, points[1].y);\n    ctx.lineTo(points[2].x, points[2].y);\n}\nfunction drawBubble(ctx, model) {\n    const { x, y, width, height, style, radius = 0, strokeStyle, fill, lineWidth = 1, points = [], direction = '', radian, rotationPosition, } = model;\n    const right = x + width;\n    const bottom = y + height;\n    ctx.beginPath();\n    ctx.save();\n    if (radian && rotationPosition) {\n        ctx.translate(rotationPosition.x, rotationPosition.y);\n        ctx.rotate(radian);\n        ctx.translate(-rotationPosition.x, -rotationPosition.y);\n    }\n    ctx.moveTo(x + radius, y);\n    if (direction === 'top') {\n        drawBubbleArrow(ctx, points);\n    }\n    ctx.lineTo(right - radius, y);\n    ctx.quadraticCurveTo(right, y, right, y + radius);\n    if (direction === 'right') {\n        drawBubbleArrow(ctx, points);\n    }\n    ctx.lineTo(right, y + height - radius);\n    ctx.quadraticCurveTo(right, bottom, right - radius, bottom);\n    if (direction === 'bottom') {\n        drawBubbleArrow(ctx, points);\n    }\n    ctx.lineTo(x + radius, bottom);\n    ctx.quadraticCurveTo(x, bottom, x, bottom - radius);\n    if (direction === 'left') {\n        drawBubbleArrow(ctx, points);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    if (style) {\n        const styleObj = makeStyleObj(style, textBubbleStyle);\n        Object.keys(styleObj).forEach((key) => {\n            ctx[key] = styleObj[key];\n        });\n    }\n    if (fill) {\n        fillStyle(ctx, fill);\n    }\n    if (strokeStyle) {\n        strokeWithOptions(ctx, { strokeStyle, lineWidth });\n    }\n    ctx.restore();\n}\n"]},"metadata":{},"sourceType":"module"}