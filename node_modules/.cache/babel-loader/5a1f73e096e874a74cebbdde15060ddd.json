{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport Component from \"./component\";\nimport { crispPixel } from \"../helpers/calculator\";\nimport { isUndefined, includes } from \"../helpers/utils\";\nimport { isSameSeriesResponder } from \"../helpers/responders\";\nimport { makeObservableObjectToNormal } from \"../store/reactive\";\nconst guideLineType = {\n  line: 'circle',\n  area: 'circle',\n  boxPlot: 'boxPlot'\n};\nexport default class HoveredSeries extends Component {\n  constructor() {\n    super(...arguments);\n    this.models = {\n      guideLine: []\n    };\n    this.isShow = false;\n\n    this.renderHoveredSeries = ({\n      models,\n      name,\n      eventDetectType\n    }) => {\n      var _a, _b;\n\n      const prevModels = this.getSeriesModels(name);\n      this.models[name] = [...models];\n      this.isShow = !!this.getSeriesModels().length;\n      const isSame = !!((_a = prevModels) === null || _a === void 0 ? void 0 : _a.length) && !!models.length && isSameSeriesResponder({\n        models,\n        comparisonModel: prevModels,\n        eventDetectType,\n        name\n      });\n\n      if (((_b = prevModels) === null || _b === void 0 ? void 0 : _b.length) && !models.length) {\n        this.eventBus.emit('unhoverSeries', makeObservableObjectToNormal(prevModels));\n      } else if (models.length && !isSame) {\n        this.eventBus.emit('hoverSeries', makeObservableObjectToNormal(models));\n      }\n\n      this.modelForGuideLine = this.getModelForGuideLine(name);\n\n      if (eventDetectType === 'grouped') {\n        this.renderGroupedModels(name);\n      }\n    };\n\n    this.resetHoveredSeries = () => {\n      this.models = {\n        guideLine: []\n      };\n    };\n  }\n\n  getSeriesModels(type) {\n    var _a;\n\n    const _b = this.models,\n          {\n      guideLine\n    } = _b,\n          models = __rest(_b, [\"guideLine\"]);\n\n    return (_a = type ? models[type] : Object.values(models)) === null || _a === void 0 ? void 0 : _a.flatMap(val => val);\n  }\n\n  hasGuideLine() {\n    const [rectModel] = this.getSeriesModels().filter(({\n      type\n    }) => type === 'rect');\n    return !isUndefined(this.modelForGuideLine) && isUndefined(rectModel);\n  }\n\n  getModelForGuideLine(name) {\n    return this.getSeriesModels().filter(({\n      type\n    }) => type === guideLineType[name])[0];\n  }\n\n  renderGroupedModels(name) {\n    if (includes(Object.keys(guideLineType), name)) {\n      if (this.isShow && this.hasGuideLine()) {\n        this.models.guideLine = [this.renderGuideLineModel(this.modelForGuideLine)];\n      } else {\n        this.models.guideLine = [];\n      }\n    }\n  }\n\n  renderGuideLineModel(model) {\n    const x = crispPixel(model.type === 'boxPlot' && model.boxPlotDetection ? model.boxPlotDetection.x + model.boxPlotDetection.width / 2 : model.x);\n    return {\n      type: 'line',\n      x,\n      y: 0,\n      x2: x,\n      y2: this.rect.height,\n      strokeStyle: '#ddd',\n      lineWidth: 1\n    };\n  }\n\n  initialize() {\n    this.type = 'hoveredSeries';\n    this.name = 'hoveredSeries';\n    this.eventBus.on('renderHoveredSeries', this.renderHoveredSeries);\n    this.eventBus.on('resetHoveredSeries', this.resetHoveredSeries);\n  }\n\n  render({\n    layout\n  }) {\n    this.rect = layout.plot;\n  }\n\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/component/hoveredSeries.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Component","crispPixel","isUndefined","includes","isSameSeriesResponder","makeObservableObjectToNormal","guideLineType","line","area","boxPlot","HoveredSeries","constructor","arguments","models","guideLine","isShow","renderHoveredSeries","name","eventDetectType","_a","_b","prevModels","getSeriesModels","isSame","comparisonModel","eventBus","emit","modelForGuideLine","getModelForGuideLine","renderGroupedModels","resetHoveredSeries","type","values","flatMap","val","hasGuideLine","rectModel","filter","keys","renderGuideLineModel","model","x","boxPlotDetection","width","y","x2","y2","rect","height","strokeStyle","lineWidth","initialize","on","render","layout","plot"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport Component from \"./component\";\nimport { crispPixel } from \"../helpers/calculator\";\nimport { isUndefined, includes } from \"../helpers/utils\";\nimport { isSameSeriesResponder } from \"../helpers/responders\";\nimport { makeObservableObjectToNormal } from \"../store/reactive\";\nconst guideLineType = {\n    line: 'circle',\n    area: 'circle',\n    boxPlot: 'boxPlot',\n};\nexport default class HoveredSeries extends Component {\n    constructor() {\n        super(...arguments);\n        this.models = { guideLine: [] };\n        this.isShow = false;\n        this.renderHoveredSeries = ({ models, name, eventDetectType, }) => {\n            var _a, _b;\n            const prevModels = this.getSeriesModels(name);\n            this.models[name] = [...models];\n            this.isShow = !!this.getSeriesModels().length;\n            const isSame = !!((_a = prevModels) === null || _a === void 0 ? void 0 : _a.length) &&\n                !!models.length &&\n                isSameSeriesResponder({ models, comparisonModel: prevModels, eventDetectType, name });\n            if (((_b = prevModels) === null || _b === void 0 ? void 0 : _b.length) && !models.length) {\n                this.eventBus.emit('unhoverSeries', makeObservableObjectToNormal(prevModels));\n            }\n            else if (models.length && !isSame) {\n                this.eventBus.emit('hoverSeries', makeObservableObjectToNormal(models));\n            }\n            this.modelForGuideLine = this.getModelForGuideLine(name);\n            if (eventDetectType === 'grouped') {\n                this.renderGroupedModels(name);\n            }\n        };\n        this.resetHoveredSeries = () => {\n            this.models = { guideLine: [] };\n        };\n    }\n    getSeriesModels(type) {\n        var _a;\n        const _b = this.models, { guideLine } = _b, models = __rest(_b, [\"guideLine\"]);\n        return (_a = (type ? models[type] : Object.values(models))) === null || _a === void 0 ? void 0 : _a.flatMap((val) => val);\n    }\n    hasGuideLine() {\n        const [rectModel] = this.getSeriesModels().filter(({ type }) => type === 'rect');\n        return !isUndefined(this.modelForGuideLine) && isUndefined(rectModel);\n    }\n    getModelForGuideLine(name) {\n        return this.getSeriesModels().filter(({ type }) => type === guideLineType[name])[0];\n    }\n    renderGroupedModels(name) {\n        if (includes(Object.keys(guideLineType), name)) {\n            if (this.isShow && this.hasGuideLine()) {\n                this.models.guideLine = [this.renderGuideLineModel(this.modelForGuideLine)];\n            }\n            else {\n                this.models.guideLine = [];\n            }\n        }\n    }\n    renderGuideLineModel(model) {\n        const x = crispPixel(model.type === 'boxPlot' && model.boxPlotDetection\n            ? model.boxPlotDetection.x + model.boxPlotDetection.width / 2\n            : model.x);\n        return {\n            type: 'line',\n            x,\n            y: 0,\n            x2: x,\n            y2: this.rect.height,\n            strokeStyle: '#ddd',\n            lineWidth: 1,\n        };\n    }\n    initialize() {\n        this.type = 'hoveredSeries';\n        this.name = 'hoveredSeries';\n        this.eventBus.on('renderHoveredSeries', this.renderHoveredSeries);\n        this.eventBus.on('resetHoveredSeries', this.resetHoveredSeries);\n    }\n    render({ layout }) {\n        this.rect = layout.plot;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}