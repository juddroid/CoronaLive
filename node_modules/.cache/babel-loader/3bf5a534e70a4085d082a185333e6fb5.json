{"ast":null,"code":"import { range, isInteger, isString, isNumber, isNull } from \"./utils\";\nimport { formatDate, getDateFormat } from \"./formatDate\";\nimport { DEFAULT_LABEL_TEXT } from \"../brushes/label\";\nimport { TICK_SIZE } from \"../brushes/axis\";\nconst LINE_HEIGHT_NORMAL = 1.2;\nconst ctx = document.createElement('canvas').getContext('2d');\nexport function getTextWidth(text, font = DEFAULT_LABEL_TEXT) {\n  ctx.font = font;\n  return Math.ceil(ctx.measureText(text).width);\n}\n/*\n * Calculate height of canvas text\n * https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics\n * */\n\nexport function getTextHeight(text, font = DEFAULT_LABEL_TEXT) {\n  ctx.font = font;\n  const {\n    actualBoundingBoxAscent,\n    actualBoundingBoxDescent\n  } = ctx.measureText(text);\n  const validActualBoundingBox = isNumber(actualBoundingBoxAscent) && isNumber(actualBoundingBoxDescent);\n  return validActualBoundingBox ? Math.ceil(Math.abs(actualBoundingBoxAscent) + Math.abs(actualBoundingBoxDescent)) + 1 : getFontHeight(font);\n}\nexport function getFontHeight(font = DEFAULT_LABEL_TEXT) {\n  const fontSize = font.match(/\\d+(?=px)/);\n  return parseInt(String(Number(fontSize) * LINE_HEIGHT_NORMAL), 10);\n}\nexport function getAxisLabelAnchorPoint(labelHeight) {\n  return crispPixel(TICK_SIZE * 2 + labelHeight / 2);\n}\n\nfunction getDecimalLength(value) {\n  var _a, _b;\n\n  return _b = (_a = String(value).split('.')[1]) === null || _a === void 0 ? void 0 : _a.length, _b !== null && _b !== void 0 ? _b : 0;\n}\n\nfunction findMultipleNum(...args) {\n  const underPointLens = args.map(value => getDecimalLength(value));\n  const underPointLen = Math.max(...underPointLens);\n  return Math.pow(10, underPointLen);\n}\n\nexport function add(a, b) {\n  const multipleNum = findMultipleNum(a, b);\n  return (a * multipleNum + b * multipleNum) / multipleNum;\n}\nexport function multiply(a, b) {\n  const multipleNum = findMultipleNum(a, b);\n  return a * multipleNum * (b * multipleNum) / (multipleNum * multipleNum);\n}\nexport function divide(a, b) {\n  const multipleNum = findMultipleNum(a, b);\n  return a * multipleNum / (b * multipleNum);\n}\nexport function sum(values) {\n  const copyArr = values.slice();\n  copyArr.unshift(0);\n  return copyArr.reduce((base, value) => add(parseFloat(String(base)), parseFloat(String(value))));\n}\nexport function divisors(value) {\n  const result = [];\n\n  for (let a = 2, b; a * a <= value; a += 1) {\n    if (value % a === 0) {\n      b = value / a;\n      result.push(a);\n\n      if (b !== a) {\n        result.push(b);\n      }\n    }\n  }\n\n  return result.sort((prev, next) => prev - next);\n}\nexport function makeLabelsFromLimit(limit, stepSize, options) {\n  var _a, _b;\n\n  const multipleNum = findMultipleNum(stepSize);\n  const min = Math.round(limit.min * multipleNum);\n  const max = Math.round(limit.max * multipleNum);\n  const labels = range(min, max + 1, stepSize * multipleNum);\n  const format = getDateFormat((_b = (_a = options) === null || _a === void 0 ? void 0 : _a.xAxis) === null || _b === void 0 ? void 0 : _b.date);\n  return labels.map(label => {\n    return format ? formatDate(format, new Date(label)) : String(label / multipleNum);\n  });\n}\nexport function makeTickPixelPositions(size, count, additionalPosition = 0, remainLastBlockIntervalPosition = 0) {\n  let positions = [];\n\n  if (count > 0) {\n    positions = range(0, count).map(index => {\n      const ratio = index === 0 ? 0 : index / (count - 1);\n      return ratio * size + additionalPosition;\n    });\n  }\n\n  if (remainLastBlockIntervalPosition) {\n    positions.push(remainLastBlockIntervalPosition);\n  }\n\n  return positions;\n}\nexport function crispPixel(pixel, thickness = 1) {\n  const halfThickness = thickness / 2;\n  return thickness % 2 ? (isInteger(pixel) ? pixel : Math.round(pixel - halfThickness)) + halfThickness : Math.round(pixel);\n}\n\nfunction getControlPoints(prev, cur, next) {\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n  const TENSION = 0.333;\n  const {\n    x: x0,\n    y: y0\n  } = prev;\n  const {\n    x: x1,\n    y: y1\n  } = cur;\n  const {\n    x: x2,\n    y: y2\n  } = next;\n  const d12 = getDistance(next, cur);\n  const d01 = getDistance(cur, prev);\n  const fa = TENSION * d01 / (d01 + d12) || 0; // scaling factor for triangle Ta\n\n  const fb = TENSION * d12 / (d01 + d12) || 0; // ditto for Tb, simplifies to fb=t-fa\n\n  return {\n    prev: {\n      x: x1 - fa * (x2 - x0),\n      y: y1 - fa * (y2 - y0)\n    },\n    next: {\n      x: x1 + fb * (x2 - x0),\n      y: y1 + fb * (y2 - y0)\n    }\n  };\n}\n\nexport function setSplineControlPoint(points) {\n  for (let i = 0, pointsSize = points.length, prev = points[0]; i < pointsSize; i += 1) {\n    const point = points[i];\n\n    if (isNull(point)) {\n      prev = points[i + 1];\n      continue;\n    }\n\n    const next = points[Math.min(i + 1, pointsSize - 1) % pointsSize];\n\n    if (prev && next) {\n      point.controlPoint = getControlPoints(prev, point, next);\n    }\n\n    prev = point;\n  }\n}\nexport function getValueRatio(value, {\n  min,\n  max\n}) {\n  return (value - min) / (max - min);\n}\nexport function getDistance(point1, point2) {\n  return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n}\nexport function getMaxLengthLabelWidth(labels) {\n  const maxLengthLabel = labels.reduce((acc, cur) => acc.length > cur.length ? acc : cur, '');\n  return getTextWidth(maxLengthLabel);\n}\nexport function getXPosition(axisData, offsetSize, value, dataIndex, xAxisLimit) {\n  const {\n    pointOnColumn,\n    tickDistance,\n    labelDistance\n  } = axisData;\n  let x;\n\n  if (xAxisLimit) {\n    const xValue = isString(value) ? Number(new Date(value)) : Number(value);\n    const xValueRatio = getValueRatio(xValue, xAxisLimit);\n    x = xValueRatio * (offsetSize - (pointOnColumn ? labelDistance : 0)) + (pointOnColumn ? labelDistance / 2 : 0);\n  } else {\n    x = tickDistance * dataIndex + (pointOnColumn ? tickDistance / 2 : 0);\n  }\n\n  return x;\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/helpers/calculator.js"],"names":["range","isInteger","isString","isNumber","isNull","formatDate","getDateFormat","DEFAULT_LABEL_TEXT","TICK_SIZE","LINE_HEIGHT_NORMAL","ctx","document","createElement","getContext","getTextWidth","text","font","Math","ceil","measureText","width","getTextHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","validActualBoundingBox","abs","getFontHeight","fontSize","match","parseInt","String","Number","getAxisLabelAnchorPoint","labelHeight","crispPixel","getDecimalLength","value","_a","_b","split","length","findMultipleNum","args","underPointLens","map","underPointLen","max","pow","add","a","b","multipleNum","multiply","divide","sum","values","copyArr","slice","unshift","reduce","base","parseFloat","divisors","result","push","sort","prev","next","makeLabelsFromLimit","limit","stepSize","options","min","round","labels","format","xAxis","date","label","Date","makeTickPixelPositions","size","count","additionalPosition","remainLastBlockIntervalPosition","positions","index","ratio","pixel","thickness","halfThickness","getControlPoints","cur","TENSION","x","x0","y","y0","x1","y1","x2","y2","d12","getDistance","d01","fa","fb","setSplineControlPoint","points","i","pointsSize","point","controlPoint","getValueRatio","point1","point2","sqrt","getMaxLengthLabelWidth","maxLengthLabel","acc","getXPosition","axisData","offsetSize","dataIndex","xAxisLimit","pointOnColumn","tickDistance","labelDistance","xValue","xValueRatio"],"mappings":"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","sourcesContent":["import { range, isInteger, isString, isNumber, isNull } from \"./utils\";\nimport { formatDate, getDateFormat } from \"./formatDate\";\nimport { DEFAULT_LABEL_TEXT } from \"../brushes/label\";\nimport { TICK_SIZE } from \"../brushes/axis\";\nconst LINE_HEIGHT_NORMAL = 1.2;\nconst ctx = document.createElement('canvas').getContext('2d');\nexport function getTextWidth(text, font = DEFAULT_LABEL_TEXT) {\n    ctx.font = font;\n    return Math.ceil(ctx.measureText(text).width);\n}\n/*\n * Calculate height of canvas text\n * https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics\n * */\nexport function getTextHeight(text, font = DEFAULT_LABEL_TEXT) {\n    ctx.font = font;\n    const { actualBoundingBoxAscent, actualBoundingBoxDescent } = ctx.measureText(text);\n    const validActualBoundingBox = isNumber(actualBoundingBoxAscent) && isNumber(actualBoundingBoxDescent);\n    return validActualBoundingBox\n        ? Math.ceil(Math.abs(actualBoundingBoxAscent) + Math.abs(actualBoundingBoxDescent)) + 1\n        : getFontHeight(font);\n}\nexport function getFontHeight(font = DEFAULT_LABEL_TEXT) {\n    const fontSize = font.match(/\\d+(?=px)/);\n    return parseInt(String(Number(fontSize) * LINE_HEIGHT_NORMAL), 10);\n}\nexport function getAxisLabelAnchorPoint(labelHeight) {\n    return crispPixel(TICK_SIZE * 2 + labelHeight / 2);\n}\nfunction getDecimalLength(value) {\n    var _a, _b;\n    return _b = (_a = String(value).split('.')[1]) === null || _a === void 0 ? void 0 : _a.length, (_b !== null && _b !== void 0 ? _b : 0);\n}\nfunction findMultipleNum(...args) {\n    const underPointLens = args.map((value) => getDecimalLength(value));\n    const underPointLen = Math.max(...underPointLens);\n    return Math.pow(10, underPointLen);\n}\nexport function add(a, b) {\n    const multipleNum = findMultipleNum(a, b);\n    return (a * multipleNum + b * multipleNum) / multipleNum;\n}\nexport function multiply(a, b) {\n    const multipleNum = findMultipleNum(a, b);\n    return (a * multipleNum * (b * multipleNum)) / (multipleNum * multipleNum);\n}\nexport function divide(a, b) {\n    const multipleNum = findMultipleNum(a, b);\n    return (a * multipleNum) / (b * multipleNum);\n}\nexport function sum(values) {\n    const copyArr = values.slice();\n    copyArr.unshift(0);\n    return copyArr.reduce((base, value) => add(parseFloat(String(base)), parseFloat(String(value))));\n}\nexport function divisors(value) {\n    const result = [];\n    for (let a = 2, b; a * a <= value; a += 1) {\n        if (value % a === 0) {\n            b = value / a;\n            result.push(a);\n            if (b !== a) {\n                result.push(b);\n            }\n        }\n    }\n    return result.sort((prev, next) => prev - next);\n}\nexport function makeLabelsFromLimit(limit, stepSize, options) {\n    var _a, _b;\n    const multipleNum = findMultipleNum(stepSize);\n    const min = Math.round(limit.min * multipleNum);\n    const max = Math.round(limit.max * multipleNum);\n    const labels = range(min, max + 1, stepSize * multipleNum);\n    const format = getDateFormat((_b = (_a = options) === null || _a === void 0 ? void 0 : _a.xAxis) === null || _b === void 0 ? void 0 : _b.date);\n    return labels.map((label) => {\n        return format ? formatDate(format, new Date(label)) : String(label / multipleNum);\n    });\n}\nexport function makeTickPixelPositions(size, count, additionalPosition = 0, remainLastBlockIntervalPosition = 0) {\n    let positions = [];\n    if (count > 0) {\n        positions = range(0, count).map((index) => {\n            const ratio = index === 0 ? 0 : index / (count - 1);\n            return ratio * size + additionalPosition;\n        });\n    }\n    if (remainLastBlockIntervalPosition) {\n        positions.push(remainLastBlockIntervalPosition);\n    }\n    return positions;\n}\nexport function crispPixel(pixel, thickness = 1) {\n    const halfThickness = thickness / 2;\n    return thickness % 2\n        ? (isInteger(pixel) ? pixel : Math.round(pixel - halfThickness)) + halfThickness\n        : Math.round(pixel);\n}\nfunction getControlPoints(prev, cur, next) {\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    const TENSION = 0.333;\n    const { x: x0, y: y0 } = prev;\n    const { x: x1, y: y1 } = cur;\n    const { x: x2, y: y2 } = next;\n    const d12 = getDistance(next, cur);\n    const d01 = getDistance(cur, prev);\n    const fa = (TENSION * d01) / (d01 + d12) || 0; // scaling factor for triangle Ta\n    const fb = (TENSION * d12) / (d01 + d12) || 0; // ditto for Tb, simplifies to fb=t-fa\n    return {\n        prev: {\n            x: x1 - fa * (x2 - x0),\n            y: y1 - fa * (y2 - y0),\n        },\n        next: { x: x1 + fb * (x2 - x0), y: y1 + fb * (y2 - y0) },\n    };\n}\nexport function setSplineControlPoint(points) {\n    for (let i = 0, pointsSize = points.length, prev = points[0]; i < pointsSize; i += 1) {\n        const point = points[i];\n        if (isNull(point)) {\n            prev = points[i + 1];\n            continue;\n        }\n        const next = points[Math.min(i + 1, pointsSize - 1) % pointsSize];\n        if (prev && next) {\n            point.controlPoint = getControlPoints(prev, point, next);\n        }\n        prev = point;\n    }\n}\nexport function getValueRatio(value, { min, max }) {\n    return (value - min) / (max - min);\n}\nexport function getDistance(point1, point2) {\n    return Math.sqrt(Math.pow((point2.x - point1.x), 2) + Math.pow((point2.y - point1.y), 2));\n}\nexport function getMaxLengthLabelWidth(labels) {\n    const maxLengthLabel = labels.reduce((acc, cur) => (acc.length > cur.length ? acc : cur), '');\n    return getTextWidth(maxLengthLabel);\n}\nexport function getXPosition(axisData, offsetSize, value, dataIndex, xAxisLimit) {\n    const { pointOnColumn, tickDistance, labelDistance } = axisData;\n    let x;\n    if (xAxisLimit) {\n        const xValue = isString(value) ? Number(new Date(value)) : Number(value);\n        const xValueRatio = getValueRatio(xValue, xAxisLimit);\n        x =\n            xValueRatio * (offsetSize - (pointOnColumn ? labelDistance : 0)) +\n                (pointOnColumn ? labelDistance / 2 : 0);\n    }\n    else {\n        x = tickDistance * dataIndex + (pointOnColumn ? tickDistance / 2 : 0);\n    }\n    return x;\n}\n"]},"metadata":{},"sourceType":"module"}