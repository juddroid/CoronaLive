{"ast":null,"code":"import Component from \"./component\";\nimport { getTextHeight, getTextWidth } from \"../helpers/calculator\";\nimport { getTitleFontString } from \"../helpers/style\";\nimport { isNoData } from \"../helpers/validation\";\nconst DEFAULT_NO_DATA_TEXT = 'No data to display';\nexport default class NoDataText extends Component {\n  initialize() {\n    this.type = 'noDataText';\n    this.name = 'noDataText';\n  }\n\n  getCenterPosition(text, font) {\n    const textWidth = getTextWidth(text, font);\n    const textHeight = getTextHeight(text, font);\n    return {\n      x: (this.rect.width - textWidth) / 2,\n      y: (this.rect.height - textHeight) / 2\n    };\n  }\n\n  render({\n    layout,\n    series,\n    options,\n    theme\n  }) {\n    var _a, _b, _c;\n\n    const text = (_c = (_b = (_a = options) === null || _a === void 0 ? void 0 : _a.lang) === null || _b === void 0 ? void 0 : _b.noData, _c !== null && _c !== void 0 ? _c : DEFAULT_NO_DATA_TEXT);\n    const labelTheme = theme.noData;\n    const font = getTitleFontString(labelTheme);\n    const fillStyle = labelTheme.color;\n    this.isShow = isNoData(series);\n    this.rect = layout.plot;\n    this.models = [Object.assign(Object.assign({\n      type: 'label'\n    }, this.getCenterPosition(text, font)), {\n      text,\n      style: [{\n        font,\n        fillStyle\n      }]\n    })];\n  }\n\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/component/noDataText.js"],"names":["Component","getTextHeight","getTextWidth","getTitleFontString","isNoData","DEFAULT_NO_DATA_TEXT","NoDataText","initialize","type","name","getCenterPosition","text","font","textWidth","textHeight","x","rect","width","y","height","render","layout","series","options","theme","_a","_b","_c","lang","noData","labelTheme","fillStyle","color","isShow","plot","models","Object","assign","style"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,uBAA5C;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,MAAMC,oBAAoB,GAAG,oBAA7B;AACA,eAAe,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAC9CO,EAAAA,UAAU,GAAG;AACT,SAAKC,IAAL,GAAY,YAAZ;AACA,SAAKC,IAAL,GAAY,YAAZ;AACH;;AACDC,EAAAA,iBAAiB,CAACC,IAAD,EAAOC,IAAP,EAAa;AAC1B,UAAMC,SAAS,GAAGX,YAAY,CAACS,IAAD,EAAOC,IAAP,CAA9B;AACA,UAAME,UAAU,GAAGb,aAAa,CAACU,IAAD,EAAOC,IAAP,CAAhC;AACA,WAAO;AACHG,MAAAA,CAAC,EAAE,CAAC,KAAKC,IAAL,CAAUC,KAAV,GAAkBJ,SAAnB,IAAgC,CADhC;AAEHK,MAAAA,CAAC,EAAE,CAAC,KAAKF,IAAL,CAAUG,MAAV,GAAmBL,UAApB,IAAkC;AAFlC,KAAP;AAIH;;AACDM,EAAAA,MAAM,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,GAAD,EAAqC;AACvC,QAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;AACA,UAAMhB,IAAI,IAAIgB,EAAE,GAAG,CAACD,EAAE,GAAG,CAACD,EAAE,GAAGF,OAAN,MAAmB,IAAnB,IAA2BE,EAAE,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,EAAE,CAACG,IAA7D,MAAuE,IAAvE,IAA+EF,EAAE,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwGA,EAAE,CAACG,MAAhH,EAAyHF,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAK,KAAK,CAA3B,GAA+BA,EAA/B,GAAoCtB,oBAAjK,CAAV;AACA,UAAMyB,UAAU,GAAGN,KAAK,CAACK,MAAzB;AACA,UAAMjB,IAAI,GAAGT,kBAAkB,CAAC2B,UAAD,CAA/B;AACA,UAAMC,SAAS,GAAGD,UAAU,CAACE,KAA7B;AACA,SAAKC,MAAL,GAAc7B,QAAQ,CAACkB,MAAD,CAAtB;AACA,SAAKN,IAAL,GAAYK,MAAM,CAACa,IAAnB;AACA,SAAKC,MAAL,GAAc,CACVC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc;AAAE7B,MAAAA,IAAI,EAAE;AAAR,KAAd,EAAiC,KAAKE,iBAAL,CAAuBC,IAAvB,EAA6BC,IAA7B,CAAjC,CAAd,EAAoF;AAAED,MAAAA,IAAF;AAAQ2B,MAAAA,KAAK,EAAE,CAAC;AAAE1B,QAAAA,IAAF;AAAQmB,QAAAA;AAAR,OAAD;AAAf,KAApF,CADU,CAAd;AAGH;;AAxB6C","sourcesContent":["import Component from \"./component\";\nimport { getTextHeight, getTextWidth } from \"../helpers/calculator\";\nimport { getTitleFontString } from \"../helpers/style\";\nimport { isNoData } from \"../helpers/validation\";\nconst DEFAULT_NO_DATA_TEXT = 'No data to display';\nexport default class NoDataText extends Component {\n    initialize() {\n        this.type = 'noDataText';\n        this.name = 'noDataText';\n    }\n    getCenterPosition(text, font) {\n        const textWidth = getTextWidth(text, font);\n        const textHeight = getTextHeight(text, font);\n        return {\n            x: (this.rect.width - textWidth) / 2,\n            y: (this.rect.height - textHeight) / 2,\n        };\n    }\n    render({ layout, series, options, theme }) {\n        var _a, _b, _c;\n        const text = (_c = (_b = (_a = options) === null || _a === void 0 ? void 0 : _a.lang) === null || _b === void 0 ? void 0 : _b.noData, (_c !== null && _c !== void 0 ? _c : DEFAULT_NO_DATA_TEXT));\n        const labelTheme = theme.noData;\n        const font = getTitleFontString(labelTheme);\n        const fillStyle = labelTheme.color;\n        this.isShow = isNoData(series);\n        this.rect = layout.plot;\n        this.models = [\n            Object.assign(Object.assign({ type: 'label' }, this.getCenterPosition(text, font)), { text, style: [{ font, fillStyle }] }),\n        ];\n    }\n}\n"]},"metadata":{},"sourceType":"module"}