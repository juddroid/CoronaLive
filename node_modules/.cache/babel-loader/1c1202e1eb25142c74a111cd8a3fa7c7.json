{"ast":null,"code":"import { debounce } from \"../helpers/utils\";\nexport default class ComponentManager {\n  constructor({\n    store,\n    eventBus\n  }) {\n    this.components = [];\n    this.store = store;\n    this.eventBus = eventBus;\n  }\n\n  add(ComponentCtor, initialParam) {\n    const component = new ComponentCtor({\n      store: this.store,\n      eventBus: this.eventBus\n    });\n\n    if (component.initialize) {\n      component.initialize(initialParam);\n    }\n\n    let proc = (...args) => {\n      component.render(args[0], args[1]); // rest쓰면 에러남\n\n      component.sync();\n      this.eventBus.emit('needLoop');\n    };\n\n    this.store.observe((...args) => {\n      proc(...args);\n    });\n    proc = debounce(proc);\n    this.components.push(component);\n  }\n\n  remove(ComponentCtor) {\n    this.components = this.components.filter(component => !(component instanceof ComponentCtor));\n  }\n\n  clear() {\n    this.components = [];\n    this.eventBus.emit('needDraw');\n  }\n\n  invoke(method, params) {\n    this.components.forEach(component => {\n      const fn = component[method];\n\n      if (fn) {\n        fn.call(component, params);\n      }\n    });\n  }\n\n  forEach(iteratee) {\n    this.components.forEach(iteratee);\n  }\n\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/component/componentManager.js"],"names":["debounce","ComponentManager","constructor","store","eventBus","components","add","ComponentCtor","initialParam","component","initialize","proc","args","render","sync","emit","observe","push","remove","filter","clear","invoke","method","params","forEach","fn","call","iteratee"],"mappings":"AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,eAAe,MAAMC,gBAAN,CAAuB;AAClCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAsB;AAC7B,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AACDE,EAAAA,GAAG,CAACC,aAAD,EAAgBC,YAAhB,EAA8B;AAC7B,UAAMC,SAAS,GAAG,IAAIF,aAAJ,CAAkB;AAChCJ,MAAAA,KAAK,EAAE,KAAKA,KADoB;AAEhCC,MAAAA,QAAQ,EAAE,KAAKA;AAFiB,KAAlB,CAAlB;;AAIA,QAAIK,SAAS,CAACC,UAAd,EAA0B;AACtBD,MAAAA,SAAS,CAACC,UAAV,CAAqBF,YAArB;AACH;;AACD,QAAIG,IAAI,GAAG,CAAC,GAAGC,IAAJ,KAAa;AACpBH,MAAAA,SAAS,CAACI,MAAV,CAAiBD,IAAI,CAAC,CAAD,CAArB,EAA0BA,IAAI,CAAC,CAAD,CAA9B,EADoB,CACgB;;AACpCH,MAAAA,SAAS,CAACK,IAAV;AACA,WAAKV,QAAL,CAAcW,IAAd,CAAmB,UAAnB;AACH,KAJD;;AAKA,SAAKZ,KAAL,CAAWa,OAAX,CAAmB,CAAC,GAAGJ,IAAJ,KAAa;AAC5BD,MAAAA,IAAI,CAAC,GAAGC,IAAJ,CAAJ;AACH,KAFD;AAGAD,IAAAA,IAAI,GAAGX,QAAQ,CAACW,IAAD,CAAf;AACA,SAAKN,UAAL,CAAgBY,IAAhB,CAAqBR,SAArB;AACH;;AACDS,EAAAA,MAAM,CAACX,aAAD,EAAgB;AAClB,SAAKF,UAAL,GAAkB,KAAKA,UAAL,CAAgBc,MAAhB,CAAwBV,SAAD,IAAe,EAAEA,SAAS,YAAYF,aAAvB,CAAtC,CAAlB;AACH;;AACDa,EAAAA,KAAK,GAAG;AACJ,SAAKf,UAAL,GAAkB,EAAlB;AACA,SAAKD,QAAL,CAAcW,IAAd,CAAmB,UAAnB;AACH;;AACDM,EAAAA,MAAM,CAACC,MAAD,EAASC,MAAT,EAAiB;AACnB,SAAKlB,UAAL,CAAgBmB,OAAhB,CAAyBf,SAAD,IAAe;AACnC,YAAMgB,EAAE,GAAGhB,SAAS,CAACa,MAAD,CAApB;;AACA,UAAIG,EAAJ,EAAQ;AACJA,QAAAA,EAAE,CAACC,IAAH,CAAQjB,SAAR,EAAmBc,MAAnB;AACH;AACJ,KALD;AAMH;;AACDC,EAAAA,OAAO,CAACG,QAAD,EAAW;AACd,SAAKtB,UAAL,CAAgBmB,OAAhB,CAAwBG,QAAxB;AACH;;AA1CiC","sourcesContent":["import { debounce } from \"../helpers/utils\";\nexport default class ComponentManager {\n    constructor({ store, eventBus }) {\n        this.components = [];\n        this.store = store;\n        this.eventBus = eventBus;\n    }\n    add(ComponentCtor, initialParam) {\n        const component = new ComponentCtor({\n            store: this.store,\n            eventBus: this.eventBus,\n        });\n        if (component.initialize) {\n            component.initialize(initialParam);\n        }\n        let proc = (...args) => {\n            component.render(args[0], args[1]); // rest쓰면 에러남\n            component.sync();\n            this.eventBus.emit('needLoop');\n        };\n        this.store.observe((...args) => {\n            proc(...args);\n        });\n        proc = debounce(proc);\n        this.components.push(component);\n    }\n    remove(ComponentCtor) {\n        this.components = this.components.filter((component) => !(component instanceof ComponentCtor));\n    }\n    clear() {\n        this.components = [];\n        this.eventBus.emit('needDraw');\n    }\n    invoke(method, params) {\n        this.components.forEach((component) => {\n            const fn = component[method];\n            if (fn) {\n                fn.call(component, params);\n            }\n        });\n    }\n    forEach(iteratee) {\n        this.components.forEach(iteratee);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}