{"ast":null,"code":"import { getInitAxisIntervalData, getMaxLabelSize } from \"../helpers/axes\";\nimport { isSemiCircle, getSemiCircleCenterY, getTotalAngle } from \"../helpers/pieSeries\";\nimport { makeLabelsFromLimit, makeTickPixelPositions } from \"../helpers/calculator\";\nimport { getTitleFontString } from \"../helpers/style\";\nimport { calculateSizeWithPercentString, pick } from \"../helpers/utils\";\nimport { getDefaultRadius, initSectorOptions, DEGREE_360, DEGREE_0 } from \"../helpers/sector\";\nconst Y_LABEL_PADDING = 5;\nexport const RADIAL_LABEL_PADDING = 25;\nexport var RadialAxisType;\n\n(function (RadialAxisType) {\n  RadialAxisType[\"CIRCULAR\"] = \"circularAxis\";\n  RadialAxisType[\"VERTICAL\"] = \"verticalAxis\";\n})(RadialAxisType || (RadialAxisType = {}));\n\nfunction getRadiusInfo(axisSize, count, seriesOptions) {\n  var _a, _b, _c, _d, _e, _f;\n\n  const innerRadius = calculateSizeWithPercentString(axisSize, (_c = (_b = (_a = seriesOptions) === null || _a === void 0 ? void 0 : _a.radiusRange) === null || _b === void 0 ? void 0 : _b.inner, _c !== null && _c !== void 0 ? _c : 0));\n  const outerRadius = calculateSizeWithPercentString(axisSize, (_f = (_e = (_d = seriesOptions) === null || _d === void 0 ? void 0 : _d.radiusRange) === null || _e === void 0 ? void 0 : _e.outer, _f !== null && _f !== void 0 ? _f : axisSize));\n  return {\n    radiusRanges: makeTickPixelPositions(outerRadius - innerRadius, count, innerRadius).splice(innerRadius === 0 ? 1 : 0, count).reverse(),\n    innerRadius: innerRadius,\n    outerRadius: outerRadius\n  };\n}\n\nfunction getDefaultAxisData(options, plot, maxLabelWidth = 0, maxLabelHeight = 0, isLabelOnVerticalAxis = false) {\n  var _a;\n\n  let isSemiCircular = false;\n  let centerY = plot.height / 2;\n  let totalAngle = DEGREE_360;\n  let drawingStartAngle = DEGREE_0;\n  let clockwiseOption = true;\n  let startAngleOption = DEGREE_0;\n  let endAngleOption = DEGREE_360;\n\n  if (isLabelOnVerticalAxis) {\n    const {\n      startAngle,\n      endAngle,\n      clockwise\n    } = initSectorOptions((_a = options) === null || _a === void 0 ? void 0 : _a.series);\n    isSemiCircular = isSemiCircle(clockwise, startAngle, endAngle);\n    centerY = isSemiCircular ? getSemiCircleCenterY(plot.height, clockwise) : plot.height / 2;\n    totalAngle = getTotalAngle(clockwise, startAngle, endAngle);\n    drawingStartAngle = startAngle;\n    clockwiseOption = clockwise;\n    startAngleOption = startAngle;\n    endAngleOption = endAngle;\n  }\n\n  return {\n    axisSize: getDefaultRadius(plot, isSemiCircular, maxLabelWidth, maxLabelHeight),\n    centerX: plot.width / 2,\n    centerY,\n    totalAngle,\n    drawingStartAngle: drawingStartAngle,\n    clockwise: clockwiseOption,\n    startAngle: startAngleOption,\n    endAngle: endAngleOption\n  };\n}\n\nfunction getYAxisLabelAlign(clockwise = true, isLabelOnVerticalAxis = false) {\n  let align = 'center';\n\n  if (isLabelOnVerticalAxis) {\n    align = clockwise ? 'right' : 'left';\n  }\n\n  return align;\n}\n\nfunction getVerticalAxisData({\n  options,\n  labels,\n  pointOnColumn,\n  intervalData,\n  isLabelOnVerticalAxis,\n  verticalAxisLabelMargin,\n  verticalAxisLabelFont,\n  defaultAxisData\n}) {\n  var _a;\n\n  const {\n    axisSize,\n    clockwise\n  } = defaultAxisData;\n  const {\n    radiusRanges,\n    innerRadius,\n    outerRadius\n  } = isLabelOnVerticalAxis ? getRadiusInfo(axisSize, labels.length + 1, (_a = options) === null || _a === void 0 ? void 0 : _a.series) : {\n    radiusRanges: makeTickPixelPositions(axisSize, labels.length),\n    innerRadius: 0,\n    outerRadius: axisSize\n  };\n  const {\n    labelInterval\n  } = intervalData;\n  return Object.assign(Object.assign(Object.assign({\n    labels,\n    tickDistance: (outerRadius - innerRadius) / labels.length\n  }, pick(defaultAxisData, 'axisSize', 'centerX', 'centerY', 'startAngle', 'endAngle')), {\n    pointOnColumn,\n    radiusRanges,\n    innerRadius,\n    outerRadius,\n    labelInterval,\n    labelMargin: verticalAxisLabelMargin,\n    labelAlign: getYAxisLabelAlign(clockwise, isLabelOnVerticalAxis)\n  }), getMaxLabelSize(labels, verticalAxisLabelMargin, verticalAxisLabelFont));\n}\n\nfunction getCircularAxisData({\n  labels,\n  intervalData,\n  circularAxisLabelMargin,\n  circularAxisLabelFont,\n  defaultAxisData,\n  outerRadius\n}) {\n  const {\n    maxLabelWidth,\n    maxLabelHeight\n  } = getMaxLabelSize(labels, circularAxisLabelMargin, circularAxisLabelFont);\n  const {\n    totalAngle\n  } = defaultAxisData;\n  const {\n    tickInterval,\n    labelInterval\n  } = intervalData;\n  return Object.assign(Object.assign({\n    labels\n  }, defaultAxisData), {\n    degree: totalAngle / (labels.length + (totalAngle < DEGREE_360 ? -1 : DEGREE_0)),\n    tickInterval,\n    labelInterval,\n    labelMargin: circularAxisLabelMargin,\n    maxLabelWidth,\n    maxLabelHeight,\n    outerRadius\n  });\n}\n\nfunction makeLabels(options, rawLabels, axisName) {\n  var _a, _b, _c;\n\n  const formatter = (_c = (_b = (_a = options[axisName]) === null || _a === void 0 ? void 0 : _a.label) === null || _b === void 0 ? void 0 : _b.formatter, _c !== null && _c !== void 0 ? _c : value => value);\n  return rawLabels.map((label, index) => formatter(label, {\n    index,\n    labels: rawLabels,\n    axisName\n  }));\n}\n\nfunction getAxisLabels(isLabelOnVerticalAxis, options, categories, scale) {\n  const valueAxisName = isLabelOnVerticalAxis ? RadialAxisType.CIRCULAR : RadialAxisType.VERTICAL;\n  const {\n    limit,\n    stepSize\n  } = scale[valueAxisName];\n  const valueLabels = makeLabels(options, makeLabelsFromLimit(limit, stepSize), valueAxisName);\n  const categoryLabels = makeLabels(options, categories, isLabelOnVerticalAxis ? RadialAxisType.VERTICAL : RadialAxisType.CIRCULAR);\n  return {\n    radialAxisLabels: isLabelOnVerticalAxis ? valueLabels : categoryLabels,\n    yAxisLabels: isLabelOnVerticalAxis ? categoryLabels : valueLabels\n  };\n}\n\nfunction getAxisLabelMargin(isLabelOnVerticalAxis, options) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n\n  return {\n    verticalAxisLabelMargin: (_d = (_c = (_b = (_a = options) === null || _a === void 0 ? void 0 : _a.verticalAxis) === null || _b === void 0 ? void 0 : _b.label) === null || _c === void 0 ? void 0 : _c.margin, _d !== null && _d !== void 0 ? _d : isLabelOnVerticalAxis ? Y_LABEL_PADDING : 0),\n    circularAxisLabelMargin: (_h = (_g = (_f = (_e = options) === null || _e === void 0 ? void 0 : _e.circularAxis) === null || _f === void 0 ? void 0 : _f.label) === null || _g === void 0 ? void 0 : _g.margin, _h !== null && _h !== void 0 ? _h : RADIAL_LABEL_PADDING)\n  };\n}\n\nconst axes = {\n  name: 'axes',\n  state: () => ({\n    radialAxes: {}\n  }),\n  action: {\n    setRadialAxesData({\n      state\n    }) {\n      const {\n        series,\n        layout,\n        scale\n      } = state;\n      const {\n        plot\n      } = layout;\n      const isLabelOnVerticalAxis = !!series.radialBar;\n      const options = state.options;\n      const theme = state.theme;\n      const categories = state.categories;\n      const circularAxisLabelFont = getTitleFontString(theme.circularAxis.label);\n      const verticalAxisLabelFont = getTitleFontString(theme.verticalAxis.label);\n      const {\n        verticalAxisLabelMargin,\n        circularAxisLabelMargin\n      } = getAxisLabelMargin(isLabelOnVerticalAxis, options);\n      const {\n        radialAxisLabels,\n        yAxisLabels\n      } = getAxisLabels(isLabelOnVerticalAxis, options, categories, scale);\n      const {\n        maxLabelWidth,\n        maxLabelHeight\n      } = getMaxLabelSize(radialAxisLabels, circularAxisLabelMargin, circularAxisLabelFont);\n      const defaultAxisData = getDefaultAxisData(options, plot, maxLabelWidth, maxLabelHeight + circularAxisLabelMargin, isLabelOnVerticalAxis);\n      const verticalAxisData = getVerticalAxisData({\n        options,\n        labels: yAxisLabels,\n        pointOnColumn: isLabelOnVerticalAxis,\n        isLabelOnVerticalAxis,\n        intervalData: getInitAxisIntervalData(isLabelOnVerticalAxis, {\n          axis: options.verticalAxis,\n          categories,\n          layout\n        }),\n        verticalAxisLabelMargin,\n        verticalAxisLabelFont,\n        defaultAxisData\n      });\n      state.radialAxes = {\n        circularAxis: getCircularAxisData({\n          labels: radialAxisLabels,\n          intervalData: getInitAxisIntervalData(true, {\n            axis: options.circularAxis,\n            categories,\n            layout\n          }),\n          defaultAxisData,\n          circularAxisLabelMargin,\n          circularAxisLabelFont,\n          outerRadius: verticalAxisData.outerRadius\n        }),\n        verticalAxis: verticalAxisData\n      };\n    }\n\n  },\n  observe: {\n    updateRadialAxes() {\n      this.dispatch('setRadialAxesData');\n    }\n\n  }\n};\nexport default axes;","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/store/radialAxes.js"],"names":["getInitAxisIntervalData","getMaxLabelSize","isSemiCircle","getSemiCircleCenterY","getTotalAngle","makeLabelsFromLimit","makeTickPixelPositions","getTitleFontString","calculateSizeWithPercentString","pick","getDefaultRadius","initSectorOptions","DEGREE_360","DEGREE_0","Y_LABEL_PADDING","RADIAL_LABEL_PADDING","RadialAxisType","getRadiusInfo","axisSize","count","seriesOptions","_a","_b","_c","_d","_e","_f","innerRadius","radiusRange","inner","outerRadius","outer","radiusRanges","splice","reverse","getDefaultAxisData","options","plot","maxLabelWidth","maxLabelHeight","isLabelOnVerticalAxis","isSemiCircular","centerY","height","totalAngle","drawingStartAngle","clockwiseOption","startAngleOption","endAngleOption","startAngle","endAngle","clockwise","series","centerX","width","getYAxisLabelAlign","align","getVerticalAxisData","labels","pointOnColumn","intervalData","verticalAxisLabelMargin","verticalAxisLabelFont","defaultAxisData","length","labelInterval","Object","assign","tickDistance","labelMargin","labelAlign","getCircularAxisData","circularAxisLabelMargin","circularAxisLabelFont","tickInterval","degree","makeLabels","rawLabels","axisName","formatter","label","value","map","index","getAxisLabels","categories","scale","valueAxisName","CIRCULAR","VERTICAL","limit","stepSize","valueLabels","categoryLabels","radialAxisLabels","yAxisLabels","getAxisLabelMargin","_g","_h","verticalAxis","margin","circularAxis","axes","name","state","radialAxes","action","setRadialAxesData","layout","radialBar","theme","verticalAxisData","axis","observe","updateRadialAxes","dispatch"],"mappings":"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","sourcesContent":["import { getInitAxisIntervalData, getMaxLabelSize } from \"../helpers/axes\";\nimport { isSemiCircle, getSemiCircleCenterY, getTotalAngle } from \"../helpers/pieSeries\";\nimport { makeLabelsFromLimit, makeTickPixelPositions } from \"../helpers/calculator\";\nimport { getTitleFontString } from \"../helpers/style\";\nimport { calculateSizeWithPercentString, pick } from \"../helpers/utils\";\nimport { getDefaultRadius, initSectorOptions, DEGREE_360, DEGREE_0 } from \"../helpers/sector\";\nconst Y_LABEL_PADDING = 5;\nexport const RADIAL_LABEL_PADDING = 25;\nexport var RadialAxisType;\n(function (RadialAxisType) {\n    RadialAxisType[\"CIRCULAR\"] = \"circularAxis\";\n    RadialAxisType[\"VERTICAL\"] = \"verticalAxis\";\n})(RadialAxisType || (RadialAxisType = {}));\nfunction getRadiusInfo(axisSize, count, seriesOptions) {\n    var _a, _b, _c, _d, _e, _f;\n    const innerRadius = calculateSizeWithPercentString(axisSize, (_c = (_b = (_a = seriesOptions) === null || _a === void 0 ? void 0 : _a.radiusRange) === null || _b === void 0 ? void 0 : _b.inner, (_c !== null && _c !== void 0 ? _c : 0)));\n    const outerRadius = calculateSizeWithPercentString(axisSize, (_f = (_e = (_d = seriesOptions) === null || _d === void 0 ? void 0 : _d.radiusRange) === null || _e === void 0 ? void 0 : _e.outer, (_f !== null && _f !== void 0 ? _f : axisSize)));\n    return {\n        radiusRanges: makeTickPixelPositions(outerRadius - innerRadius, count, innerRadius)\n            .splice(innerRadius === 0 ? 1 : 0, count)\n            .reverse(),\n        innerRadius: innerRadius,\n        outerRadius: outerRadius,\n    };\n}\nfunction getDefaultAxisData(options, plot, maxLabelWidth = 0, maxLabelHeight = 0, isLabelOnVerticalAxis = false) {\n    var _a;\n    let isSemiCircular = false;\n    let centerY = plot.height / 2;\n    let totalAngle = DEGREE_360;\n    let drawingStartAngle = DEGREE_0;\n    let clockwiseOption = true;\n    let startAngleOption = DEGREE_0;\n    let endAngleOption = DEGREE_360;\n    if (isLabelOnVerticalAxis) {\n        const { startAngle, endAngle, clockwise } = initSectorOptions((_a = options) === null || _a === void 0 ? void 0 : _a.series);\n        isSemiCircular = isSemiCircle(clockwise, startAngle, endAngle);\n        centerY = isSemiCircular ? getSemiCircleCenterY(plot.height, clockwise) : plot.height / 2;\n        totalAngle = getTotalAngle(clockwise, startAngle, endAngle);\n        drawingStartAngle = startAngle;\n        clockwiseOption = clockwise;\n        startAngleOption = startAngle;\n        endAngleOption = endAngle;\n    }\n    return {\n        axisSize: getDefaultRadius(plot, isSemiCircular, maxLabelWidth, maxLabelHeight),\n        centerX: plot.width / 2,\n        centerY,\n        totalAngle,\n        drawingStartAngle: drawingStartAngle,\n        clockwise: clockwiseOption,\n        startAngle: startAngleOption,\n        endAngle: endAngleOption,\n    };\n}\nfunction getYAxisLabelAlign(clockwise = true, isLabelOnVerticalAxis = false) {\n    let align = 'center';\n    if (isLabelOnVerticalAxis) {\n        align = clockwise ? 'right' : 'left';\n    }\n    return align;\n}\nfunction getVerticalAxisData({ options, labels, pointOnColumn, intervalData, isLabelOnVerticalAxis, verticalAxisLabelMargin, verticalAxisLabelFont, defaultAxisData, }) {\n    var _a;\n    const { axisSize, clockwise } = defaultAxisData;\n    const { radiusRanges, innerRadius, outerRadius } = isLabelOnVerticalAxis\n        ? getRadiusInfo(axisSize, labels.length + 1, (_a = options) === null || _a === void 0 ? void 0 : _a.series)\n        : {\n            radiusRanges: makeTickPixelPositions(axisSize, labels.length),\n            innerRadius: 0,\n            outerRadius: axisSize,\n        };\n    const { labelInterval } = intervalData;\n    return Object.assign(Object.assign(Object.assign({ labels, tickDistance: (outerRadius - innerRadius) / labels.length }, pick(defaultAxisData, 'axisSize', 'centerX', 'centerY', 'startAngle', 'endAngle')), { pointOnColumn,\n        radiusRanges,\n        innerRadius,\n        outerRadius,\n        labelInterval, labelMargin: verticalAxisLabelMargin, labelAlign: getYAxisLabelAlign(clockwise, isLabelOnVerticalAxis) }), getMaxLabelSize(labels, verticalAxisLabelMargin, verticalAxisLabelFont));\n}\nfunction getCircularAxisData({ labels, intervalData, circularAxisLabelMargin, circularAxisLabelFont, defaultAxisData, outerRadius, }) {\n    const { maxLabelWidth, maxLabelHeight } = getMaxLabelSize(labels, circularAxisLabelMargin, circularAxisLabelFont);\n    const { totalAngle } = defaultAxisData;\n    const { tickInterval, labelInterval } = intervalData;\n    return Object.assign(Object.assign({ labels }, defaultAxisData), { degree: totalAngle / (labels.length + (totalAngle < DEGREE_360 ? -1 : DEGREE_0)), tickInterval,\n        labelInterval, labelMargin: circularAxisLabelMargin, maxLabelWidth,\n        maxLabelHeight,\n        outerRadius });\n}\nfunction makeLabels(options, rawLabels, axisName) {\n    var _a, _b, _c;\n    const formatter = (_c = (_b = (_a = options[axisName]) === null || _a === void 0 ? void 0 : _a.label) === null || _b === void 0 ? void 0 : _b.formatter, (_c !== null && _c !== void 0 ? _c : ((value) => value)));\n    return rawLabels.map((label, index) => formatter(label, { index, labels: rawLabels, axisName }));\n}\nfunction getAxisLabels(isLabelOnVerticalAxis, options, categories, scale) {\n    const valueAxisName = isLabelOnVerticalAxis\n        ? RadialAxisType.CIRCULAR\n        : RadialAxisType.VERTICAL;\n    const { limit, stepSize } = scale[valueAxisName];\n    const valueLabels = makeLabels(options, makeLabelsFromLimit(limit, stepSize), valueAxisName);\n    const categoryLabels = makeLabels(options, categories, isLabelOnVerticalAxis ? RadialAxisType.VERTICAL : RadialAxisType.CIRCULAR);\n    return {\n        radialAxisLabels: isLabelOnVerticalAxis ? valueLabels : categoryLabels,\n        yAxisLabels: isLabelOnVerticalAxis ? categoryLabels : valueLabels,\n    };\n}\nfunction getAxisLabelMargin(isLabelOnVerticalAxis, options) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    return {\n        verticalAxisLabelMargin: (_d = (_c = (_b = (_a = options) === null || _a === void 0 ? void 0 : _a.verticalAxis) === null || _b === void 0 ? void 0 : _b.label) === null || _c === void 0 ? void 0 : _c.margin, (_d !== null && _d !== void 0 ? _d : (isLabelOnVerticalAxis ? Y_LABEL_PADDING : 0))),\n        circularAxisLabelMargin: (_h = (_g = (_f = (_e = options) === null || _e === void 0 ? void 0 : _e.circularAxis) === null || _f === void 0 ? void 0 : _f.label) === null || _g === void 0 ? void 0 : _g.margin, (_h !== null && _h !== void 0 ? _h : RADIAL_LABEL_PADDING)),\n    };\n}\nconst axes = {\n    name: 'axes',\n    state: () => ({\n        radialAxes: {},\n    }),\n    action: {\n        setRadialAxesData({ state }) {\n            const { series, layout, scale } = state;\n            const { plot } = layout;\n            const isLabelOnVerticalAxis = !!series.radialBar;\n            const options = state.options;\n            const theme = state.theme;\n            const categories = state.categories;\n            const circularAxisLabelFont = getTitleFontString(theme.circularAxis.label);\n            const verticalAxisLabelFont = getTitleFontString(theme.verticalAxis.label);\n            const { verticalAxisLabelMargin, circularAxisLabelMargin } = getAxisLabelMargin(isLabelOnVerticalAxis, options);\n            const { radialAxisLabels, yAxisLabels } = getAxisLabels(isLabelOnVerticalAxis, options, categories, scale);\n            const { maxLabelWidth, maxLabelHeight } = getMaxLabelSize(radialAxisLabels, circularAxisLabelMargin, circularAxisLabelFont);\n            const defaultAxisData = getDefaultAxisData(options, plot, maxLabelWidth, maxLabelHeight + circularAxisLabelMargin, isLabelOnVerticalAxis);\n            const verticalAxisData = getVerticalAxisData({\n                options,\n                labels: yAxisLabels,\n                pointOnColumn: isLabelOnVerticalAxis,\n                isLabelOnVerticalAxis,\n                intervalData: getInitAxisIntervalData(isLabelOnVerticalAxis, {\n                    axis: options.verticalAxis,\n                    categories,\n                    layout,\n                }),\n                verticalAxisLabelMargin,\n                verticalAxisLabelFont,\n                defaultAxisData,\n            });\n            state.radialAxes = {\n                circularAxis: getCircularAxisData({\n                    labels: radialAxisLabels,\n                    intervalData: getInitAxisIntervalData(true, {\n                        axis: options.circularAxis,\n                        categories,\n                        layout,\n                    }),\n                    defaultAxisData,\n                    circularAxisLabelMargin,\n                    circularAxisLabelFont,\n                    outerRadius: verticalAxisData.outerRadius,\n                }),\n                verticalAxis: verticalAxisData,\n            };\n        },\n    },\n    observe: {\n        updateRadialAxes() {\n            this.dispatch('setRadialAxesData');\n        },\n    },\n};\nexport default axes;\n"]},"metadata":{},"sourceType":"module"}