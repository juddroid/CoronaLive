{"ast":null,"code":"// https://github.com/nhn/tui.code-snippet/blob/master/formatDate/formatDate.js\nimport { isDate, isObject } from \"./utils\";\nexport const DEFAULT_DATE_FORMAT = 'YY-MM-DD hh:mm:ss';\nexport function getDateFormat(date) {\n  if (!date) {\n    return;\n  }\n\n  return isObject(date) ? date.format : DEFAULT_DATE_FORMAT;\n}\nconst tokens = /[\\\\]*YYYY|[\\\\]*YY|[\\\\]*MMMM|[\\\\]*MMM|[\\\\]*MM|[\\\\]*M|[\\\\]*DD|[\\\\]*D|[\\\\]*HH|[\\\\]*H|[\\\\]*mm|[\\\\]*m|[\\\\]*ss|[\\\\]*s|[\\\\]*A/gi;\nconst MONTH_STR = ['Invalid month', 'January', 'February', 'March', 'April', 'May', 'Jun', 'Jul', 'August', 'September', 'October', 'November', 'December'];\nconst MONTH_DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst replaceMap = {\n  M: date => Number(date.month),\n  MM: date => {\n    const month = date.month;\n    return Number(month) < 10 ? `0${month}` : month;\n  },\n  MMM: date => MONTH_STR[Number(date.month)].substr(0, 3),\n  MMMM: date => MONTH_STR[Number(date.month)],\n  D: date => Number(date.date),\n  d: date => replaceMap.D(date),\n  DD: date => {\n    const dayInMonth = date.date;\n    return Number(dayInMonth) < 10 ? `0${dayInMonth}` : dayInMonth;\n  },\n  dd: date => replaceMap.DD(date),\n  YY: date => Number(date.year) % 100,\n  yy: date => replaceMap.YY(date),\n  YYYY: date => {\n    let prefix = '20';\n    const year = date.year;\n\n    if (year > 69 && year < 100) {\n      prefix = '19';\n    }\n\n    return Number(year) < 100 ? prefix + String(year) : year;\n  },\n  yyyy: date => replaceMap.YYYY(date),\n  A: date => date.meridiem,\n  a: date => date.meridiem,\n  hh: date => {\n    const hour = date.hour;\n    return Number(hour) < 10 ? '0' + hour : hour;\n  },\n  HH: date => replaceMap.hh(date),\n  h: date => String(Number(date.hour)),\n  H: date => replaceMap.h(date),\n  m: date => String(Number(date.minute)),\n  mm: date => {\n    const minute = date.minute;\n    return Number(minute) < 10 ? `0${minute}` : minute;\n  },\n  s: date => String(Number(date.second)),\n  ss: date => {\n    const second = date.second;\n    return Number(second) < 10 ? `0${second}` : second;\n  }\n};\n\nfunction isLeapYear(month, year) {\n  return month === 2 && year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nfunction isValidDate(y, m, d) {\n  const year = Number(y);\n  const month = Number(m);\n  const date = Number(d);\n  const isValidYear = year > -1 && year < 100 || year > 1969 && year < 2070;\n  const isValidMonth = month > 0 && month < 13;\n\n  if (!isValidYear || !isValidMonth) {\n    return false;\n  }\n\n  const lastDayInMonth = isLeapYear(month, year) ? 29 : MONTH_DAYS[month];\n  return date > 0 && date <= lastDayInMonth;\n}\n/*\n * key             | Shorthand\n * --------------- |-----------------------\n * years           | YY / YYYY / yy / yyyy\n * months(n)       | M / MM\n * months(str)     | MMM / MMMM\n * days            | D / DD / d / dd\n * hours           | H / HH / h / hh\n * minutes         | m / mm\n * seconds         | s / ss\n * meridiem(AM,PM) | A / a\n */\n\n\nexport function formatDate(form, date, option) {\n  var _a, _b, _c;\n\n  const am = (_b = (_a = option) === null || _a === void 0 ? void 0 : _a.meridiemSet.AM, _b !== null && _b !== void 0 ? _b : 'AM');\n  const pm = ((_c = option) === null || _c === void 0 ? void 0 : _c.meridiemSet.PM) || 'PM';\n  let nDate;\n\n  if (isDate(date)) {\n    nDate = {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      date: date.getDate(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      second: date.getSeconds()\n    };\n  } else {\n    const {\n      year,\n      month,\n      hour,\n      minute,\n      second\n    } = date;\n    nDate = {\n      year,\n      month,\n      date: date.date,\n      hour,\n      minute,\n      second\n    };\n  }\n\n  if (!isValidDate(nDate.year, nDate.month, nDate.date)) {\n    return '';\n  }\n\n  nDate.meridiem = '';\n\n  if (/([^\\\\]|^)[aA]\\b/.test(form)) {\n    if (nDate.hour > 12) {\n      // See the clock system: https://en.wikipedia.org/wiki/12-hour_clock\n      nDate.hour %= 12;\n    }\n\n    if (nDate.hour === 0) {\n      nDate.hour = 12;\n    }\n\n    nDate.meridiem = nDate.hour > 11 ? pm : am;\n  }\n\n  return form.replace(tokens, key => {\n    if (key.indexOf('\\\\') > -1) {\n      // escape character\n      return key.replace(/\\\\/, '');\n    }\n\n    return replaceMap[key](nDate) || '';\n  });\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/helpers/formatDate.js"],"names":["isDate","isObject","DEFAULT_DATE_FORMAT","getDateFormat","date","format","tokens","MONTH_STR","MONTH_DAYS","replaceMap","M","Number","month","MM","MMM","substr","MMMM","D","d","DD","dayInMonth","dd","YY","year","yy","YYYY","prefix","String","yyyy","A","meridiem","a","hh","hour","HH","h","H","m","minute","mm","s","second","ss","isLeapYear","isValidDate","y","isValidYear","isValidMonth","lastDayInMonth","formatDate","form","option","_a","_b","_c","am","meridiemSet","AM","pm","PM","nDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","test","replace","key","indexOf"],"mappings":"AAAA;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,SAAjC;AACA,OAAO,MAAMC,mBAAmB,GAAG,mBAA5B;AACP,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAChC,MAAI,CAACA,IAAL,EAAW;AACP;AACH;;AACD,SAAOH,QAAQ,CAACG,IAAD,CAAR,GAAiBA,IAAI,CAACC,MAAtB,GAA+BH,mBAAtC;AACH;AACD,MAAMI,MAAM,GAAG,0HAAf;AACA,MAAMC,SAAS,GAAG,CACd,eADc,EAEd,SAFc,EAGd,UAHc,EAId,OAJc,EAKd,OALc,EAMd,KANc,EAOd,KAPc,EAQd,KARc,EASd,QATc,EAUd,WAVc,EAWd,SAXc,EAYd,UAZc,EAad,UAbc,CAAlB;AAeA,MAAMC,UAAU,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,CAAnB;AACA,MAAMC,UAAU,GAAG;AACfC,EAAAA,CAAC,EAAGN,IAAD,IAAUO,MAAM,CAACP,IAAI,CAACQ,KAAN,CADJ;AAEfC,EAAAA,EAAE,EAAGT,IAAD,IAAU;AACV,UAAMQ,KAAK,GAAGR,IAAI,CAACQ,KAAnB;AACA,WAAOD,MAAM,CAACC,KAAD,CAAN,GAAgB,EAAhB,GAAsB,IAAGA,KAAM,EAA/B,GAAmCA,KAA1C;AACH,GALc;AAMfE,EAAAA,GAAG,EAAGV,IAAD,IAAUG,SAAS,CAACI,MAAM,CAACP,IAAI,CAACQ,KAAN,CAAP,CAAT,CAA8BG,MAA9B,CAAqC,CAArC,EAAwC,CAAxC,CANA;AAOfC,EAAAA,IAAI,EAAGZ,IAAD,IAAUG,SAAS,CAACI,MAAM,CAACP,IAAI,CAACQ,KAAN,CAAP,CAPV;AAQfK,EAAAA,CAAC,EAAGb,IAAD,IAAUO,MAAM,CAACP,IAAI,CAACA,IAAN,CARJ;AASfc,EAAAA,CAAC,EAAGd,IAAD,IAAUK,UAAU,CAACQ,CAAX,CAAab,IAAb,CATE;AAUfe,EAAAA,EAAE,EAAGf,IAAD,IAAU;AACV,UAAMgB,UAAU,GAAGhB,IAAI,CAACA,IAAxB;AACA,WAAOO,MAAM,CAACS,UAAD,CAAN,GAAqB,EAArB,GAA2B,IAAGA,UAAW,EAAzC,GAA6CA,UAApD;AACH,GAbc;AAcfC,EAAAA,EAAE,EAAGjB,IAAD,IAAUK,UAAU,CAACU,EAAX,CAAcf,IAAd,CAdC;AAefkB,EAAAA,EAAE,EAAGlB,IAAD,IAAUO,MAAM,CAACP,IAAI,CAACmB,IAAN,CAAN,GAAoB,GAfnB;AAgBfC,EAAAA,EAAE,EAAGpB,IAAD,IAAUK,UAAU,CAACa,EAAX,CAAclB,IAAd,CAhBC;AAiBfqB,EAAAA,IAAI,EAAGrB,IAAD,IAAU;AACZ,QAAIsB,MAAM,GAAG,IAAb;AACA,UAAMH,IAAI,GAAGnB,IAAI,CAACmB,IAAlB;;AACA,QAAIA,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAG,GAAxB,EAA6B;AACzBG,MAAAA,MAAM,GAAG,IAAT;AACH;;AACD,WAAOf,MAAM,CAACY,IAAD,CAAN,GAAe,GAAf,GAAqBG,MAAM,GAAGC,MAAM,CAACJ,IAAD,CAApC,GAA6CA,IAApD;AACH,GAxBc;AAyBfK,EAAAA,IAAI,EAAGxB,IAAD,IAAUK,UAAU,CAACgB,IAAX,CAAgBrB,IAAhB,CAzBD;AA0BfyB,EAAAA,CAAC,EAAGzB,IAAD,IAAUA,IAAI,CAAC0B,QA1BH;AA2BfC,EAAAA,CAAC,EAAG3B,IAAD,IAAUA,IAAI,CAAC0B,QA3BH;AA4BfE,EAAAA,EAAE,EAAG5B,IAAD,IAAU;AACV,UAAM6B,IAAI,GAAG7B,IAAI,CAAC6B,IAAlB;AACA,WAAOtB,MAAM,CAACsB,IAAD,CAAN,GAAe,EAAf,GAAoB,MAAMA,IAA1B,GAAiCA,IAAxC;AACH,GA/Bc;AAgCfC,EAAAA,EAAE,EAAG9B,IAAD,IAAUK,UAAU,CAACuB,EAAX,CAAc5B,IAAd,CAhCC;AAiCf+B,EAAAA,CAAC,EAAG/B,IAAD,IAAUuB,MAAM,CAAChB,MAAM,CAACP,IAAI,CAAC6B,IAAN,CAAP,CAjCJ;AAkCfG,EAAAA,CAAC,EAAGhC,IAAD,IAAUK,UAAU,CAAC0B,CAAX,CAAa/B,IAAb,CAlCE;AAmCfiC,EAAAA,CAAC,EAAGjC,IAAD,IAAUuB,MAAM,CAAChB,MAAM,CAACP,IAAI,CAACkC,MAAN,CAAP,CAnCJ;AAoCfC,EAAAA,EAAE,EAAGnC,IAAD,IAAU;AACV,UAAMkC,MAAM,GAAGlC,IAAI,CAACkC,MAApB;AACA,WAAO3B,MAAM,CAAC2B,MAAD,CAAN,GAAiB,EAAjB,GAAuB,IAAGA,MAAO,EAAjC,GAAqCA,MAA5C;AACH,GAvCc;AAwCfE,EAAAA,CAAC,EAAGpC,IAAD,IAAUuB,MAAM,CAAChB,MAAM,CAACP,IAAI,CAACqC,MAAN,CAAP,CAxCJ;AAyCfC,EAAAA,EAAE,EAAGtC,IAAD,IAAU;AACV,UAAMqC,MAAM,GAAGrC,IAAI,CAACqC,MAApB;AACA,WAAO9B,MAAM,CAAC8B,MAAD,CAAN,GAAiB,EAAjB,GAAuB,IAAGA,MAAO,EAAjC,GAAqCA,MAA5C;AACH;AA5Cc,CAAnB;;AA8CA,SAASE,UAAT,CAAoB/B,KAApB,EAA2BW,IAA3B,EAAiC;AAC7B,SAAOX,KAAK,KAAK,CAAV,IAAeW,IAAI,GAAG,CAAP,KAAa,CAA5B,KAAkCA,IAAI,GAAG,GAAP,KAAe,CAAf,IAAoBA,IAAI,GAAG,GAAP,KAAe,CAArE,CAAP;AACH;;AACD,SAASqB,WAAT,CAAqBC,CAArB,EAAwBR,CAAxB,EAA2BnB,CAA3B,EAA8B;AAC1B,QAAMK,IAAI,GAAGZ,MAAM,CAACkC,CAAD,CAAnB;AACA,QAAMjC,KAAK,GAAGD,MAAM,CAAC0B,CAAD,CAApB;AACA,QAAMjC,IAAI,GAAGO,MAAM,CAACO,CAAD,CAAnB;AACA,QAAM4B,WAAW,GAAIvB,IAAI,GAAG,CAAC,CAAR,IAAaA,IAAI,GAAG,GAArB,IAA8BA,IAAI,GAAG,IAAP,IAAeA,IAAI,GAAG,IAAxE;AACA,QAAMwB,YAAY,GAAGnC,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAA1C;;AACA,MAAI,CAACkC,WAAD,IAAgB,CAACC,YAArB,EAAmC;AAC/B,WAAO,KAAP;AACH;;AACD,QAAMC,cAAc,GAAGL,UAAU,CAAC/B,KAAD,EAAQW,IAAR,CAAV,GAA0B,EAA1B,GAA+Bf,UAAU,CAACI,KAAD,CAAhE;AACA,SAAOR,IAAI,GAAG,CAAP,IAAYA,IAAI,IAAI4C,cAA3B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B9C,IAA1B,EAAgC+C,MAAhC,EAAwC;AAC3C,MAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;AACA,QAAMC,EAAE,IAAIF,EAAE,GAAG,CAACD,EAAE,GAAGD,MAAN,MAAkB,IAAlB,IAA0BC,EAAE,KAAK,KAAK,CAAtC,GAA0C,KAAK,CAA/C,GAAmDA,EAAE,CAACI,WAAH,CAAeC,EAAvE,EAA4EJ,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAK,KAAK,CAA3B,GAA+BA,EAA/B,GAAoC,IAApH,CAAR;AACA,QAAMK,EAAE,GAAG,CAAC,CAACJ,EAAE,GAAGH,MAAN,MAAkB,IAAlB,IAA0BG,EAAE,KAAK,KAAK,CAAtC,GAA0C,KAAK,CAA/C,GAAmDA,EAAE,CAACE,WAAH,CAAeG,EAAnE,KAA0E,IAArF;AACA,MAAIC,KAAJ;;AACA,MAAI5D,MAAM,CAACI,IAAD,CAAV,EAAkB;AACdwD,IAAAA,KAAK,GAAG;AACJrC,MAAAA,IAAI,EAAEnB,IAAI,CAACyD,WAAL,EADF;AAEJjD,MAAAA,KAAK,EAAER,IAAI,CAAC0D,QAAL,KAAkB,CAFrB;AAGJ1D,MAAAA,IAAI,EAAEA,IAAI,CAAC2D,OAAL,EAHF;AAIJ9B,MAAAA,IAAI,EAAE7B,IAAI,CAAC4D,QAAL,EAJF;AAKJ1B,MAAAA,MAAM,EAAElC,IAAI,CAAC6D,UAAL,EALJ;AAMJxB,MAAAA,MAAM,EAAErC,IAAI,CAAC8D,UAAL;AANJ,KAAR;AAQH,GATD,MAUK;AACD,UAAM;AAAE3C,MAAAA,IAAF;AAAQX,MAAAA,KAAR;AAAeqB,MAAAA,IAAf;AAAqBK,MAAAA,MAArB;AAA6BG,MAAAA;AAA7B,QAAwCrC,IAA9C;AACAwD,IAAAA,KAAK,GAAG;AAAErC,MAAAA,IAAF;AAAQX,MAAAA,KAAR;AAAeR,MAAAA,IAAI,EAAEA,IAAI,CAACA,IAA1B;AAAgC6B,MAAAA,IAAhC;AAAsCK,MAAAA,MAAtC;AAA8CG,MAAAA;AAA9C,KAAR;AACH;;AACD,MAAI,CAACG,WAAW,CAACgB,KAAK,CAACrC,IAAP,EAAaqC,KAAK,CAAChD,KAAnB,EAA0BgD,KAAK,CAACxD,IAAhC,CAAhB,EAAuD;AACnD,WAAO,EAAP;AACH;;AACDwD,EAAAA,KAAK,CAAC9B,QAAN,GAAiB,EAAjB;;AACA,MAAI,kBAAkBqC,IAAlB,CAAuBjB,IAAvB,CAAJ,EAAkC;AAC9B,QAAIU,KAAK,CAAC3B,IAAN,GAAa,EAAjB,EAAqB;AACjB;AACA2B,MAAAA,KAAK,CAAC3B,IAAN,IAAc,EAAd;AACH;;AACD,QAAI2B,KAAK,CAAC3B,IAAN,KAAe,CAAnB,EAAsB;AAClB2B,MAAAA,KAAK,CAAC3B,IAAN,GAAa,EAAb;AACH;;AACD2B,IAAAA,KAAK,CAAC9B,QAAN,GAAiB8B,KAAK,CAAC3B,IAAN,GAAa,EAAb,GAAkByB,EAAlB,GAAuBH,EAAxC;AACH;;AACD,SAAOL,IAAI,CAACkB,OAAL,CAAa9D,MAAb,EAAsB+D,GAAD,IAAS;AACjC,QAAIA,GAAG,CAACC,OAAJ,CAAY,IAAZ,IAAoB,CAAC,CAAzB,EAA4B;AACxB;AACA,aAAOD,GAAG,CAACD,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAP;AACH;;AACD,WAAO3D,UAAU,CAAC4D,GAAD,CAAV,CAAgBT,KAAhB,KAA0B,EAAjC;AACH,GANM,CAAP;AAOH","sourcesContent":["// https://github.com/nhn/tui.code-snippet/blob/master/formatDate/formatDate.js\nimport { isDate, isObject } from \"./utils\";\nexport const DEFAULT_DATE_FORMAT = 'YY-MM-DD hh:mm:ss';\nexport function getDateFormat(date) {\n    if (!date) {\n        return;\n    }\n    return isObject(date) ? date.format : DEFAULT_DATE_FORMAT;\n}\nconst tokens = /[\\\\]*YYYY|[\\\\]*YY|[\\\\]*MMMM|[\\\\]*MMM|[\\\\]*MM|[\\\\]*M|[\\\\]*DD|[\\\\]*D|[\\\\]*HH|[\\\\]*H|[\\\\]*mm|[\\\\]*m|[\\\\]*ss|[\\\\]*s|[\\\\]*A/gi;\nconst MONTH_STR = [\n    'Invalid month',\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'Jun',\n    'Jul',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\nconst MONTH_DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst replaceMap = {\n    M: (date) => Number(date.month),\n    MM: (date) => {\n        const month = date.month;\n        return Number(month) < 10 ? `0${month}` : month;\n    },\n    MMM: (date) => MONTH_STR[Number(date.month)].substr(0, 3),\n    MMMM: (date) => MONTH_STR[Number(date.month)],\n    D: (date) => Number(date.date),\n    d: (date) => replaceMap.D(date),\n    DD: (date) => {\n        const dayInMonth = date.date;\n        return Number(dayInMonth) < 10 ? `0${dayInMonth}` : dayInMonth;\n    },\n    dd: (date) => replaceMap.DD(date),\n    YY: (date) => Number(date.year) % 100,\n    yy: (date) => replaceMap.YY(date),\n    YYYY: (date) => {\n        let prefix = '20';\n        const year = date.year;\n        if (year > 69 && year < 100) {\n            prefix = '19';\n        }\n        return Number(year) < 100 ? prefix + String(year) : year;\n    },\n    yyyy: (date) => replaceMap.YYYY(date),\n    A: (date) => date.meridiem,\n    a: (date) => date.meridiem,\n    hh: (date) => {\n        const hour = date.hour;\n        return Number(hour) < 10 ? '0' + hour : hour;\n    },\n    HH: (date) => replaceMap.hh(date),\n    h: (date) => String(Number(date.hour)),\n    H: (date) => replaceMap.h(date),\n    m: (date) => String(Number(date.minute)),\n    mm: (date) => {\n        const minute = date.minute;\n        return Number(minute) < 10 ? `0${minute}` : minute;\n    },\n    s: (date) => String(Number(date.second)),\n    ss: (date) => {\n        const second = date.second;\n        return Number(second) < 10 ? `0${second}` : second;\n    },\n};\nfunction isLeapYear(month, year) {\n    return month === 2 && year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nfunction isValidDate(y, m, d) {\n    const year = Number(y);\n    const month = Number(m);\n    const date = Number(d);\n    const isValidYear = (year > -1 && year < 100) || (year > 1969 && year < 2070);\n    const isValidMonth = month > 0 && month < 13;\n    if (!isValidYear || !isValidMonth) {\n        return false;\n    }\n    const lastDayInMonth = isLeapYear(month, year) ? 29 : MONTH_DAYS[month];\n    return date > 0 && date <= lastDayInMonth;\n}\n/*\n * key             | Shorthand\n * --------------- |-----------------------\n * years           | YY / YYYY / yy / yyyy\n * months(n)       | M / MM\n * months(str)     | MMM / MMMM\n * days            | D / DD / d / dd\n * hours           | H / HH / h / hh\n * minutes         | m / mm\n * seconds         | s / ss\n * meridiem(AM,PM) | A / a\n */\nexport function formatDate(form, date, option) {\n    var _a, _b, _c;\n    const am = (_b = (_a = option) === null || _a === void 0 ? void 0 : _a.meridiemSet.AM, (_b !== null && _b !== void 0 ? _b : 'AM'));\n    const pm = ((_c = option) === null || _c === void 0 ? void 0 : _c.meridiemSet.PM) || 'PM';\n    let nDate;\n    if (isDate(date)) {\n        nDate = {\n            year: date.getFullYear(),\n            month: date.getMonth() + 1,\n            date: date.getDate(),\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds(),\n        };\n    }\n    else {\n        const { year, month, hour, minute, second } = date;\n        nDate = { year, month, date: date.date, hour, minute, second };\n    }\n    if (!isValidDate(nDate.year, nDate.month, nDate.date)) {\n        return '';\n    }\n    nDate.meridiem = '';\n    if (/([^\\\\]|^)[aA]\\b/.test(form)) {\n        if (nDate.hour > 12) {\n            // See the clock system: https://en.wikipedia.org/wiki/12-hour_clock\n            nDate.hour %= 12;\n        }\n        if (nDate.hour === 0) {\n            nDate.hour = 12;\n        }\n        nDate.meridiem = nDate.hour > 11 ? pm : am;\n    }\n    return form.replace(tokens, (key) => {\n        if (key.indexOf('\\\\') > -1) {\n            // escape character\n            return key.replace(/\\\\/, '');\n        }\n        return replaceMap[key](nDate) || '';\n    });\n}\n"]},"metadata":{},"sourceType":"module"}