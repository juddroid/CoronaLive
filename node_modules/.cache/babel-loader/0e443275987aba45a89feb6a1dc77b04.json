{"ast":null,"code":"import Component from \"./component\";\nimport { isUndefined } from \"../helpers/utils\";\nimport { isModelExistingInRect } from \"../helpers/coordinate\";\nimport { getDataLabelsOptions, getDefaultDataLabelsOptions, makePointLabelInfo, makeSectorLabelInfo, makePieSeriesNameLabelInfo, makeRectLabelInfo, makeLineLabelInfo, makeSectorBarLabelInfo } from \"../helpers/dataLabels\";\nimport { pickStackOption } from \"../store/stackSeriesData\";\n\nfunction getLabelInfo(model, labelOptions, rect, name) {\n  var _a;\n\n  const {\n    type\n  } = model;\n  const dataLabel = [];\n\n  if (type === 'point') {\n    dataLabel.push(makePointLabelInfo(model, labelOptions, rect));\n  } else if (type === 'sector') {\n    if (name === 'radialBar') {\n      dataLabel.push(makeSectorBarLabelInfo(model, labelOptions));\n    } else {\n      dataLabel.push(makeSectorLabelInfo(model, labelOptions));\n\n      if ((_a = labelOptions.pieSeriesName) === null || _a === void 0 ? void 0 : _a.visible) {\n        const seriesNameLabel = makePieSeriesNameLabelInfo(model, labelOptions);\n        dataLabel.push(seriesNameLabel);\n      }\n    }\n  } else if (type === 'line') {\n    dataLabel.push(makeLineLabelInfo(model, labelOptions));\n  } else {\n    dataLabel.push(makeRectLabelInfo(model, labelOptions));\n  }\n\n  return dataLabel;\n}\n\nexport default class DataLabels extends Component {\n  constructor() {\n    super(...arguments);\n    this.dataLabelsMap = {};\n\n    this.renderSeriesDataLabels = seriesDataLabel => {\n      this.appendDataLabels(seriesDataLabel);\n      this.models = this.renderLabelModel();\n\n      if (!this.drawModels) {\n        this.drawModels = this.getDrawModelsAppliedOpacity(0);\n      } else {\n        this.sync();\n      }\n    };\n  }\n\n  initialize() {\n    this.type = 'dataLabels';\n    this.name = 'dataLabels';\n    this.eventBus.on('renderDataLabels', this.renderSeriesDataLabels);\n  }\n\n  initUpdate(delta) {\n    if (!this.drawModels) {\n      return;\n    }\n\n    this.drawModels = this.getDrawModelsAppliedOpacity(delta);\n  }\n\n  render({\n    layout,\n    options,\n    series,\n    nestedPieSeries\n  }) {\n    this.rect = layout.plot;\n    this.options = options;\n    this.isShow = this.visibleDataLabels(series, nestedPieSeries);\n  }\n\n  visibleDataLabels(series, nestedPieSeries) {\n    var _a, _b;\n\n    const visibleCommonSeriesDataLabels = !!((_b = (_a = this.options.series) === null || _a === void 0 ? void 0 : _a.dataLabels) === null || _b === void 0 ? void 0 : _b.visible);\n    const visibleComboSeriesDataLabels = Object.keys(series).some(seriesName => {\n      var _a, _b, _c;\n\n      return !!((_c = (_b = (_a = this.options.series) === null || _a === void 0 ? void 0 : _a[seriesName]) === null || _b === void 0 ? void 0 : _b.dataLabels) === null || _c === void 0 ? void 0 : _c.visible);\n    });\n    const visibleNestedPieSeriesDataLabels = !!(nestedPieSeries && Object.keys(nestedPieSeries).some(alias => {\n      var _a, _b, _c;\n\n      return !!((_c = (_b = (_a = this.options.series) === null || _a === void 0 ? void 0 : _a[alias]) === null || _b === void 0 ? void 0 : _b.dataLabels) === null || _c === void 0 ? void 0 : _c.visible);\n    }));\n    return visibleCommonSeriesDataLabels || visibleComboSeriesDataLabels || visibleNestedPieSeriesDataLabels;\n  }\n\n  appendDataLabels({\n    name,\n    data\n  }) {\n    const dataLabelOptions = getDataLabelsOptions(this.options, name);\n    const withStack = !!pickStackOption(this.options);\n    const labels = [];\n    data.forEach(model => {\n      var _a;\n\n      const {\n        type,\n        value\n      } = model;\n      const labelOptions = getDefaultDataLabelsOptions(dataLabelOptions, type, withStack);\n      const disableStackTotal = type === 'stackTotal' && !((_a = labelOptions.stackTotal) === null || _a === void 0 ? void 0 : _a.visible);\n\n      if (disableStackTotal || isUndefined(value)) {\n        return;\n      }\n\n      labels.splice(labels.length, 0, ...getLabelInfo(model, labelOptions, this.rect, name));\n    });\n    this.dataLabelsMap[name] = {\n      data: labels,\n      options: dataLabelOptions\n    };\n  }\n\n  getDrawModelsAppliedOpacity(opacity) {\n    return Object.keys(this.models).reduce((acc, key) => Object.assign(Object.assign({}, acc), {\n      [key]: this.models[key].map(m => Object.assign(Object.assign({}, m), {\n        opacity\n      }))\n    }), {\n      series: [],\n      total: []\n    });\n  }\n\n  renderLabelModel() {\n    return Object.keys(this.dataLabelsMap).map(seriesName => {\n      const {\n        data\n      } = this.dataLabelsMap[seriesName];\n      return this.makeLabelModel(data);\n    }).reduce((acc, cur) => ({\n      series: [...acc.series, ...cur.series],\n      total: [...acc.total, ...cur.total]\n    }), {\n      series: [],\n      total: []\n    });\n  }\n\n  makeLabelModel(dataLabels) {\n    return dataLabels.reduce((acc, dataLabel) => {\n      var _a;\n\n      const {\n        type,\n        x,\n        y,\n        text,\n        textAlign,\n        textBaseline,\n        name,\n        callout,\n        theme,\n        radian\n      } = dataLabel;\n\n      if (!isModelExistingInRect(this.rect, {\n        x,\n        y\n      })) {\n        return acc;\n      }\n\n      const modelName = type === 'stackTotal' ? 'total' : 'series';\n      return Object.assign(Object.assign({}, acc), {\n        [modelName]: [...(_a = acc[modelName], _a !== null && _a !== void 0 ? _a : []), {\n          type: 'dataLabel',\n          dataLabelType: type,\n          text,\n          x,\n          y,\n          textAlign,\n          textBaseline,\n          opacity: 1,\n          name,\n          callout,\n          theme,\n          radian\n        }]\n      });\n    }, {\n      series: [],\n      total: []\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/component/dataLabels.js"],"names":["Component","isUndefined","isModelExistingInRect","getDataLabelsOptions","getDefaultDataLabelsOptions","makePointLabelInfo","makeSectorLabelInfo","makePieSeriesNameLabelInfo","makeRectLabelInfo","makeLineLabelInfo","makeSectorBarLabelInfo","pickStackOption","getLabelInfo","model","labelOptions","rect","name","_a","type","dataLabel","push","pieSeriesName","visible","seriesNameLabel","DataLabels","constructor","arguments","dataLabelsMap","renderSeriesDataLabels","seriesDataLabel","appendDataLabels","models","renderLabelModel","drawModels","getDrawModelsAppliedOpacity","sync","initialize","eventBus","on","initUpdate","delta","render","layout","options","series","nestedPieSeries","plot","isShow","visibleDataLabels","_b","visibleCommonSeriesDataLabels","dataLabels","visibleComboSeriesDataLabels","Object","keys","some","seriesName","_c","visibleNestedPieSeriesDataLabels","alias","data","dataLabelOptions","withStack","labels","forEach","value","disableStackTotal","stackTotal","splice","length","opacity","reduce","acc","key","assign","map","m","total","makeLabelModel","cur","x","y","text","textAlign","textBaseline","callout","theme","radian","modelName","dataLabelType"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AACA,SAASC,oBAAT,EAA+BC,2BAA/B,EAA4DC,kBAA5D,EAAgFC,mBAAhF,EAAqGC,0BAArG,EAAiIC,iBAAjI,EAAoJC,iBAApJ,EAAuKC,sBAAvK,QAAsM,uBAAtM;AACA,SAASC,eAAT,QAAgC,0BAAhC;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,YAA7B,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuD;AACnD,MAAIC,EAAJ;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWL,KAAjB;AACA,QAAMM,SAAS,GAAG,EAAlB;;AACA,MAAID,IAAI,KAAK,OAAb,EAAsB;AAClBC,IAAAA,SAAS,CAACC,IAAV,CAAef,kBAAkB,CAACQ,KAAD,EAAQC,YAAR,EAAsBC,IAAtB,CAAjC;AACH,GAFD,MAGK,IAAIG,IAAI,KAAK,QAAb,EAAuB;AACxB,QAAIF,IAAI,KAAK,WAAb,EAA0B;AACtBG,MAAAA,SAAS,CAACC,IAAV,CAAeV,sBAAsB,CAACG,KAAD,EAAQC,YAAR,CAArC;AACH,KAFD,MAGK;AACDK,MAAAA,SAAS,CAACC,IAAV,CAAed,mBAAmB,CAACO,KAAD,EAAQC,YAAR,CAAlC;;AACA,UAAI,CAACG,EAAE,GAAGH,YAAY,CAACO,aAAnB,MAAsC,IAAtC,IAA8CJ,EAAE,KAAK,KAAK,CAA1D,GAA8D,KAAK,CAAnE,GAAuEA,EAAE,CAACK,OAA9E,EAAuF;AACnF,cAAMC,eAAe,GAAGhB,0BAA0B,CAACM,KAAD,EAAQC,YAAR,CAAlD;AACAK,QAAAA,SAAS,CAACC,IAAV,CAAeG,eAAf;AACH;AACJ;AACJ,GAXI,MAYA,IAAIL,IAAI,KAAK,MAAb,EAAqB;AACtBC,IAAAA,SAAS,CAACC,IAAV,CAAeX,iBAAiB,CAACI,KAAD,EAAQC,YAAR,CAAhC;AACH,GAFI,MAGA;AACDK,IAAAA,SAAS,CAACC,IAAV,CAAeZ,iBAAiB,CAACK,KAAD,EAAQC,YAAR,CAAhC;AACH;;AACD,SAAOK,SAAP;AACH;;AACD,eAAe,MAAMK,UAAN,SAAyBxB,SAAzB,CAAmC;AAC9CyB,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,aAAL,GAAqB,EAArB;;AACA,SAAKC,sBAAL,GAA+BC,eAAD,IAAqB;AAC/C,WAAKC,gBAAL,CAAsBD,eAAtB;AACA,WAAKE,MAAL,GAAc,KAAKC,gBAAL,EAAd;;AACA,UAAI,CAAC,KAAKC,UAAV,EAAsB;AAClB,aAAKA,UAAL,GAAkB,KAAKC,2BAAL,CAAiC,CAAjC,CAAlB;AACH,OAFD,MAGK;AACD,aAAKC,IAAL;AACH;AACJ,KATD;AAUH;;AACDC,EAAAA,UAAU,GAAG;AACT,SAAKlB,IAAL,GAAY,YAAZ;AACA,SAAKF,IAAL,GAAY,YAAZ;AACA,SAAKqB,QAAL,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKV,sBAA1C;AACH;;AACDW,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACd,QAAI,CAAC,KAAKP,UAAV,EAAsB;AAClB;AACH;;AACD,SAAKA,UAAL,GAAkB,KAAKC,2BAAL,CAAiCM,KAAjC,CAAlB;AACH;;AACDC,EAAAA,MAAM,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA;AAA3B,GAAD,EAA+C;AACjD,SAAK9B,IAAL,GAAY2B,MAAM,CAACI,IAAnB;AACA,SAAKH,OAAL,GAAeA,OAAf;AACA,SAAKI,MAAL,GAAc,KAAKC,iBAAL,CAAuBJ,MAAvB,EAA+BC,eAA/B,CAAd;AACH;;AACDG,EAAAA,iBAAiB,CAACJ,MAAD,EAASC,eAAT,EAA0B;AACvC,QAAI5B,EAAJ,EAAQgC,EAAR;;AACA,UAAMC,6BAA6B,GAAG,CAAC,EAAE,CAACD,EAAE,GAAG,CAAChC,EAAE,GAAG,KAAK0B,OAAL,CAAaC,MAAnB,MAA+B,IAA/B,IAAuC3B,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACkC,UAAzE,MAAyF,IAAzF,IAAiGF,EAAE,KAAK,KAAK,CAA7G,GAAiH,KAAK,CAAtH,GAA0HA,EAAE,CAAC3B,OAA/H,CAAvC;AACA,UAAM8B,4BAA4B,GAAGC,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,IAApB,CAA0BC,UAAD,IAAgB;AAAE,UAAIvC,EAAJ,EAAQgC,EAAR,EAAYQ,EAAZ;;AAAgB,aAAO,CAAC,EAAE,CAACA,EAAE,GAAG,CAACR,EAAE,GAAG,CAAChC,EAAE,GAAG,KAAK0B,OAAL,CAAaC,MAAnB,MAA+B,IAA/B,IAAuC3B,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACuC,UAAD,CAAxE,MAA0F,IAA1F,IAAkGP,EAAE,KAAK,KAAK,CAA9G,GAAkH,KAAK,CAAvH,GAA2HA,EAAE,CAACE,UAApI,MAAoJ,IAApJ,IAA4JM,EAAE,KAAK,KAAK,CAAxK,GAA4K,KAAK,CAAjL,GAAqLA,EAAE,CAACnC,OAA1L,CAAR;AAA6M,KAAxQ,CAArC;AACA,UAAMoC,gCAAgC,GAAG,CAAC,EAAEb,eAAe,IACvDQ,MAAM,CAACC,IAAP,CAAYT,eAAZ,EAA6BU,IAA7B,CAAmCI,KAAD,IAAW;AACzC,UAAI1C,EAAJ,EAAQgC,EAAR,EAAYQ,EAAZ;;AACA,aAAO,CAAC,EAAE,CAACA,EAAE,GAAG,CAACR,EAAE,GAAG,CAAChC,EAAE,GAAG,KAAK0B,OAAL,CAAaC,MAAnB,MAA+B,IAA/B,IAAuC3B,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAAC0C,KAAD,CAAxE,MAAqF,IAArF,IAA6FV,EAAE,KAAK,KAAK,CAAzG,GAA6G,KAAK,CAAlH,GAAsHA,EAAE,CAACE,UAA/H,MAA+I,IAA/I,IAAuJM,EAAE,KAAK,KAAK,CAAnK,GAAuK,KAAK,CAA5K,GAAgLA,EAAE,CAACnC,OAArL,CAAR;AACH,KAHD,CADsC,CAA1C;AAKA,WAAQ4B,6BAA6B,IACjCE,4BADI,IAEJM,gCAFJ;AAGH;;AACD5B,EAAAA,gBAAgB,CAAC;AAAEd,IAAAA,IAAF;AAAQ4C,IAAAA;AAAR,GAAD,EAAiB;AAC7B,UAAMC,gBAAgB,GAAG1D,oBAAoB,CAAC,KAAKwC,OAAN,EAAe3B,IAAf,CAA7C;AACA,UAAM8C,SAAS,GAAG,CAAC,CAACnD,eAAe,CAAC,KAAKgC,OAAN,CAAnC;AACA,UAAMoB,MAAM,GAAG,EAAf;AACAH,IAAAA,IAAI,CAACI,OAAL,CAAcnD,KAAD,IAAW;AACpB,UAAII,EAAJ;;AACA,YAAM;AAAEC,QAAAA,IAAF;AAAQ+C,QAAAA;AAAR,UAAkBpD,KAAxB;AACA,YAAMC,YAAY,GAAGV,2BAA2B,CAACyD,gBAAD,EAAmB3C,IAAnB,EAAyB4C,SAAzB,CAAhD;AACA,YAAMI,iBAAiB,GAAGhD,IAAI,KAAK,YAAT,IAAyB,EAAE,CAACD,EAAE,GAAGH,YAAY,CAACqD,UAAnB,MAAmC,IAAnC,IAA2ClD,EAAE,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,EAAE,CAACK,OAAzE,CAAnD;;AACA,UAAI4C,iBAAiB,IAAIjE,WAAW,CAACgE,KAAD,CAApC,EAA6C;AACzC;AACH;;AACDF,MAAAA,MAAM,CAACK,MAAP,CAAcL,MAAM,CAACM,MAArB,EAA6B,CAA7B,EAAgC,GAAGzD,YAAY,CAACC,KAAD,EAAQC,YAAR,EAAsB,KAAKC,IAA3B,EAAiCC,IAAjC,CAA/C;AACH,KATD;AAUA,SAAKW,aAAL,CAAmBX,IAAnB,IAA2B;AAAE4C,MAAAA,IAAI,EAAEG,MAAR;AAAgBpB,MAAAA,OAAO,EAAEkB;AAAzB,KAA3B;AACH;;AACD3B,EAAAA,2BAA2B,CAACoC,OAAD,EAAU;AACjC,WAAOjB,MAAM,CAACC,IAAP,CAAY,KAAKvB,MAAjB,EAAyBwC,MAAzB,CAAgC,CAACC,GAAD,EAAMC,GAAN,KAAepB,MAAM,CAACqB,MAAP,CAAcrB,MAAM,CAACqB,MAAP,CAAc,EAAd,EAAkBF,GAAlB,CAAd,EAAsC;AAAE,OAACC,GAAD,GAAO,KAAK1C,MAAL,CAAY0C,GAAZ,EAAiBE,GAAjB,CAAsBC,CAAD,IAAQvB,MAAM,CAACqB,MAAP,CAAcrB,MAAM,CAACqB,MAAP,CAAc,EAAd,EAAkBE,CAAlB,CAAd,EAAoC;AAAEN,QAAAA;AAAF,OAApC,CAA7B;AAAT,KAAtC,CAA/C,EAAmL;AAAE1B,MAAAA,MAAM,EAAE,EAAV;AAAciC,MAAAA,KAAK,EAAE;AAArB,KAAnL,CAAP;AACH;;AACD7C,EAAAA,gBAAgB,GAAG;AACf,WAAOqB,MAAM,CAACC,IAAP,CAAY,KAAK3B,aAAjB,EACFgD,GADE,CACGnB,UAAD,IAAgB;AACrB,YAAM;AAAEI,QAAAA;AAAF,UAAW,KAAKjC,aAAL,CAAmB6B,UAAnB,CAAjB;AACA,aAAO,KAAKsB,cAAL,CAAoBlB,IAApB,CAAP;AACH,KAJM,EAKFW,MALE,CAKK,CAACC,GAAD,EAAMO,GAAN,MAAe;AACvBnC,MAAAA,MAAM,EAAE,CAAC,GAAG4B,GAAG,CAAC5B,MAAR,EAAgB,GAAGmC,GAAG,CAACnC,MAAvB,CADe;AAEvBiC,MAAAA,KAAK,EAAE,CAAC,GAAGL,GAAG,CAACK,KAAR,EAAe,GAAGE,GAAG,CAACF,KAAtB;AAFgB,KAAf,CALL,EAQH;AAAEjC,MAAAA,MAAM,EAAE,EAAV;AAAciC,MAAAA,KAAK,EAAE;AAArB,KARG,CAAP;AASH;;AACDC,EAAAA,cAAc,CAAC3B,UAAD,EAAa;AACvB,WAAOA,UAAU,CAACoB,MAAX,CAAkB,CAACC,GAAD,EAAMrD,SAAN,KAAoB;AACzC,UAAIF,EAAJ;;AACA,YAAM;AAAEC,QAAAA,IAAF;AAAQ8D,QAAAA,CAAR;AAAWC,QAAAA,CAAX;AAAcC,QAAAA,IAAd;AAAoBC,QAAAA,SAApB;AAA+BC,QAAAA,YAA/B;AAA6CpE,QAAAA,IAA7C;AAAmDqE,QAAAA,OAAnD;AAA4DC,QAAAA,KAA5D;AAAmEC,QAAAA;AAAnE,UAA+EpE,SAArF;;AACA,UAAI,CAACjB,qBAAqB,CAAC,KAAKa,IAAN,EAAY;AAAEiE,QAAAA,CAAF;AAAKC,QAAAA;AAAL,OAAZ,CAA1B,EAAiD;AAC7C,eAAOT,GAAP;AACH;;AACD,YAAMgB,SAAS,GAAGtE,IAAI,KAAK,YAAT,GAAwB,OAAxB,GAAkC,QAApD;AACA,aAAOmC,MAAM,CAACqB,MAAP,CAAcrB,MAAM,CAACqB,MAAP,CAAc,EAAd,EAAkBF,GAAlB,CAAd,EAAsC;AAAE,SAACgB,SAAD,GAAa,CACpD,IAAIvE,EAAE,GAAGuD,GAAG,CAACgB,SAAD,CAAR,EAAsBvE,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAK,KAAK,CAA3B,GAA+BA,EAA/B,GAAoC,EAA9D,CADoD,EAEpD;AACIC,UAAAA,IAAI,EAAE,WADV;AAEIuE,UAAAA,aAAa,EAAEvE,IAFnB;AAGIgE,UAAAA,IAHJ;AAIIF,UAAAA,CAJJ;AAKIC,UAAAA,CALJ;AAMIE,UAAAA,SANJ;AAOIC,UAAAA,YAPJ;AAQId,UAAAA,OAAO,EAAE,CARb;AASItD,UAAAA,IATJ;AAUIqE,UAAAA,OAVJ;AAWIC,UAAAA,KAXJ;AAYIC,UAAAA;AAZJ,SAFoD;AAAf,OAAtC,CAAP;AAiBH,KAxBM,EAwBJ;AAAE3C,MAAAA,MAAM,EAAE,EAAV;AAAciC,MAAAA,KAAK,EAAE;AAArB,KAxBI,CAAP;AAyBH;;AApG6C","sourcesContent":["import Component from \"./component\";\nimport { isUndefined } from \"../helpers/utils\";\nimport { isModelExistingInRect } from \"../helpers/coordinate\";\nimport { getDataLabelsOptions, getDefaultDataLabelsOptions, makePointLabelInfo, makeSectorLabelInfo, makePieSeriesNameLabelInfo, makeRectLabelInfo, makeLineLabelInfo, makeSectorBarLabelInfo, } from \"../helpers/dataLabels\";\nimport { pickStackOption } from \"../store/stackSeriesData\";\nfunction getLabelInfo(model, labelOptions, rect, name) {\n    var _a;\n    const { type } = model;\n    const dataLabel = [];\n    if (type === 'point') {\n        dataLabel.push(makePointLabelInfo(model, labelOptions, rect));\n    }\n    else if (type === 'sector') {\n        if (name === 'radialBar') {\n            dataLabel.push(makeSectorBarLabelInfo(model, labelOptions));\n        }\n        else {\n            dataLabel.push(makeSectorLabelInfo(model, labelOptions));\n            if ((_a = labelOptions.pieSeriesName) === null || _a === void 0 ? void 0 : _a.visible) {\n                const seriesNameLabel = makePieSeriesNameLabelInfo(model, labelOptions);\n                dataLabel.push(seriesNameLabel);\n            }\n        }\n    }\n    else if (type === 'line') {\n        dataLabel.push(makeLineLabelInfo(model, labelOptions));\n    }\n    else {\n        dataLabel.push(makeRectLabelInfo(model, labelOptions));\n    }\n    return dataLabel;\n}\nexport default class DataLabels extends Component {\n    constructor() {\n        super(...arguments);\n        this.dataLabelsMap = {};\n        this.renderSeriesDataLabels = (seriesDataLabel) => {\n            this.appendDataLabels(seriesDataLabel);\n            this.models = this.renderLabelModel();\n            if (!this.drawModels) {\n                this.drawModels = this.getDrawModelsAppliedOpacity(0);\n            }\n            else {\n                this.sync();\n            }\n        };\n    }\n    initialize() {\n        this.type = 'dataLabels';\n        this.name = 'dataLabels';\n        this.eventBus.on('renderDataLabels', this.renderSeriesDataLabels);\n    }\n    initUpdate(delta) {\n        if (!this.drawModels) {\n            return;\n        }\n        this.drawModels = this.getDrawModelsAppliedOpacity(delta);\n    }\n    render({ layout, options, series, nestedPieSeries }) {\n        this.rect = layout.plot;\n        this.options = options;\n        this.isShow = this.visibleDataLabels(series, nestedPieSeries);\n    }\n    visibleDataLabels(series, nestedPieSeries) {\n        var _a, _b;\n        const visibleCommonSeriesDataLabels = !!((_b = (_a = this.options.series) === null || _a === void 0 ? void 0 : _a.dataLabels) === null || _b === void 0 ? void 0 : _b.visible);\n        const visibleComboSeriesDataLabels = Object.keys(series).some((seriesName) => { var _a, _b, _c; return !!((_c = (_b = (_a = this.options.series) === null || _a === void 0 ? void 0 : _a[seriesName]) === null || _b === void 0 ? void 0 : _b.dataLabels) === null || _c === void 0 ? void 0 : _c.visible); });\n        const visibleNestedPieSeriesDataLabels = !!(nestedPieSeries &&\n            Object.keys(nestedPieSeries).some((alias) => {\n                var _a, _b, _c;\n                return !!((_c = (_b = (_a = this.options.series) === null || _a === void 0 ? void 0 : _a[alias]) === null || _b === void 0 ? void 0 : _b.dataLabels) === null || _c === void 0 ? void 0 : _c.visible);\n            }));\n        return (visibleCommonSeriesDataLabels ||\n            visibleComboSeriesDataLabels ||\n            visibleNestedPieSeriesDataLabels);\n    }\n    appendDataLabels({ name, data }) {\n        const dataLabelOptions = getDataLabelsOptions(this.options, name);\n        const withStack = !!pickStackOption(this.options);\n        const labels = [];\n        data.forEach((model) => {\n            var _a;\n            const { type, value } = model;\n            const labelOptions = getDefaultDataLabelsOptions(dataLabelOptions, type, withStack);\n            const disableStackTotal = type === 'stackTotal' && !((_a = labelOptions.stackTotal) === null || _a === void 0 ? void 0 : _a.visible);\n            if (disableStackTotal || isUndefined(value)) {\n                return;\n            }\n            labels.splice(labels.length, 0, ...getLabelInfo(model, labelOptions, this.rect, name));\n        });\n        this.dataLabelsMap[name] = { data: labels, options: dataLabelOptions };\n    }\n    getDrawModelsAppliedOpacity(opacity) {\n        return Object.keys(this.models).reduce((acc, key) => (Object.assign(Object.assign({}, acc), { [key]: this.models[key].map((m) => (Object.assign(Object.assign({}, m), { opacity }))) })), { series: [], total: [] });\n    }\n    renderLabelModel() {\n        return Object.keys(this.dataLabelsMap)\n            .map((seriesName) => {\n            const { data } = this.dataLabelsMap[seriesName];\n            return this.makeLabelModel(data);\n        })\n            .reduce((acc, cur) => ({\n            series: [...acc.series, ...cur.series],\n            total: [...acc.total, ...cur.total],\n        }), { series: [], total: [] });\n    }\n    makeLabelModel(dataLabels) {\n        return dataLabels.reduce((acc, dataLabel) => {\n            var _a;\n            const { type, x, y, text, textAlign, textBaseline, name, callout, theme, radian, } = dataLabel;\n            if (!isModelExistingInRect(this.rect, { x, y })) {\n                return acc;\n            }\n            const modelName = type === 'stackTotal' ? 'total' : 'series';\n            return Object.assign(Object.assign({}, acc), { [modelName]: [\n                    ...(_a = acc[modelName], (_a !== null && _a !== void 0 ? _a : [])),\n                    {\n                        type: 'dataLabel',\n                        dataLabelType: type,\n                        text,\n                        x,\n                        y,\n                        textAlign,\n                        textBaseline,\n                        opacity: 1,\n                        name,\n                        callout,\n                        theme,\n                        radian,\n                    },\n                ] });\n        }, { series: [], total: [] });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}