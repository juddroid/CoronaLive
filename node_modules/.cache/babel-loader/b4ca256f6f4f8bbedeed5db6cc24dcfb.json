{"ast":null,"code":"import { extend } from \"./store\";\nimport { isUndefined, pick, isNumber } from \"../helpers/utils\";\nimport { isCenterYAxis } from \"./axes\";\nimport { BUTTON_RECT_SIZE } from \"../component/exportMenu\";\nimport { TICK_SIZE } from \"../brushes/axis\";\nimport { SPECTRUM_LEGEND_LABEL_HEIGHT, spectrumLegendBar, spectrumLegendTooltip } from \"../brushes/spectrumLegend\";\nimport { getYAxisOption } from \"../helpers/axes\";\nexport const padding = {\n  X: 10,\n  Y: 15\n};\nexport const X_AXIS_HEIGHT = 20;\nconst Y_AXIS_MIN_WIDTH = 40;\nexport function isVerticalAlign(align) {\n  return align === 'top' || align === 'bottom';\n}\n\nfunction getValidRectSize(size, width, height) {\n  var _a, _b, _c, _d;\n\n  return {\n    height: (_b = (_a = size) === null || _a === void 0 ? void 0 : _a.height, _b !== null && _b !== void 0 ? _b : height),\n    width: (_d = (_c = size) === null || _c === void 0 ? void 0 : _c.width, _d !== null && _d !== void 0 ? _d : width)\n  };\n}\n\nfunction getDefaultXAxisHeight(size) {\n  var _a;\n\n  return ((_a = size.xAxis) === null || _a === void 0 ? void 0 : _a.height) && !size.yAxis ? size.xAxis.height : X_AXIS_HEIGHT;\n}\n\nfunction getDefaultYAxisXPoint(yAxisRectParam) {\n  const {\n    yAxisTitle,\n    isRightSide,\n    visibleSecondaryYAxis\n  } = yAxisRectParam;\n  const yAxisWidth = getDefaultYAxisWidth(yAxisRectParam);\n  return isRightSide && visibleSecondaryYAxis ? Math.max(yAxisTitle.x + yAxisTitle.width - yAxisWidth, 0) : yAxisTitle.x;\n}\n\nfunction getYAxisXPoint(yAxisRectParam) {\n  const {\n    chartSize,\n    legend,\n    circleLegend,\n    hasCenterYAxis,\n    maxLabelWidth\n  } = yAxisRectParam;\n  const {\n    width\n  } = chartSize;\n  const {\n    align\n  } = legend;\n  let yAxisWidth = getDefaultYAxisWidth(yAxisRectParam);\n  let x = getDefaultYAxisXPoint(yAxisRectParam);\n\n  if (hasCenterYAxis) {\n    yAxisWidth = maxLabelWidth + (TICK_SIZE + padding.X) * 2;\n    x = (width - legend.width - yAxisWidth + padding.X * 2) / 2;\n  }\n\n  if (legend.visible && align === 'left') {\n    x = getDefaultYAxisXPoint(yAxisRectParam);\n  }\n\n  if (circleLegend.visible && align === 'left') {\n    x = Math.max(circleLegend.width + padding.X, x);\n  }\n\n  return x;\n}\n\nfunction getYAxisYPoint({\n  yAxisTitle\n}) {\n  return yAxisTitle.y + yAxisTitle.height;\n}\n\nfunction getDefaultYAxisWidth({\n  maxLabelWidth,\n  size,\n  isRightSide\n}) {\n  var _a, _b, _c;\n\n  return _c = (_b = (_a = size) === null || _a === void 0 ? void 0 : _a[isRightSide ? 'secondaryYAxis' : 'yAxis']) === null || _b === void 0 ? void 0 : _b.width, _c !== null && _c !== void 0 ? _c : maxLabelWidth;\n}\n\nfunction getYAxisWidth(yAxisRectParam) {\n  const {\n    hasCenterYAxis,\n    hasAxis,\n    maxLabelWidth,\n    visibleSecondaryYAxis = false,\n    isRightSide = false\n  } = yAxisRectParam;\n  let yAxisWidth = getDefaultYAxisWidth(yAxisRectParam);\n\n  if (hasCenterYAxis && !isRightSide) {\n    yAxisWidth = maxLabelWidth + (TICK_SIZE + padding.X) * 2;\n  } else if (!hasAxis || isRightSide && !visibleSecondaryYAxis) {\n    yAxisWidth = 0;\n  }\n\n  return yAxisWidth;\n}\n\nfunction getYAxisHeight({\n  chartSize,\n  legend,\n  yAxisTitle,\n  hasAxis,\n  size,\n  xAxisTitleHeight\n}) {\n  var _a, _b, _c, _d;\n\n  const {\n    height\n  } = chartSize;\n  const {\n    align,\n    height: legendHeight\n  } = legend;\n  const xAxisHeight = getDefaultXAxisHeight(size);\n  const y = yAxisTitle.y + yAxisTitle.height;\n  let yAxisHeight = height - y - xAxisHeight - xAxisTitleHeight;\n\n  if (!hasAxis) {\n    yAxisHeight = height - y;\n  }\n\n  if (legend.visible) {\n    const topArea = Math.max(y, legendHeight);\n\n    if (align === 'top') {\n      yAxisHeight = height - topArea - (hasAxis ? X_AXIS_HEIGHT + xAxisTitleHeight : 0);\n    } else if (align === 'bottom') {\n      yAxisHeight = height - y - X_AXIS_HEIGHT - xAxisTitleHeight - legendHeight;\n    }\n  }\n\n  if (!((_b = (_a = size) === null || _a === void 0 ? void 0 : _a.yAxis) === null || _b === void 0 ? void 0 : _b.height) && ((_d = (_c = size) === null || _c === void 0 ? void 0 : _c.plot) === null || _d === void 0 ? void 0 : _d.height)) {\n    yAxisHeight = size.plot.height;\n  }\n\n  return yAxisHeight;\n}\n\nfunction getYAxisRect(yAxisRectParam) {\n  var _a, _b;\n\n  const {\n    size,\n    isRightSide = false\n  } = yAxisRectParam;\n  const x = getYAxisXPoint(yAxisRectParam);\n  const y = getYAxisYPoint(yAxisRectParam);\n  const yAxisWidth = getYAxisWidth(yAxisRectParam);\n  const yAxisHeight = getYAxisHeight(yAxisRectParam);\n  return Object.assign({\n    x,\n    y\n  }, getValidRectSize(isRightSide ? (_a = size) === null || _a === void 0 ? void 0 : _a.secondaryYAxis : (_b = size) === null || _b === void 0 ? void 0 : _b.yAxis, yAxisWidth, yAxisHeight));\n}\n\nfunction getXAxisWidth({\n  chartSize,\n  yAxis,\n  hasCenterYAxis,\n  legend,\n  circleLegend,\n  secondaryYAxis,\n  xAxisData\n}) {\n  var _a;\n\n  const {\n    width\n  } = chartSize;\n  const {\n    align,\n    width: legendWidth\n  } = legend;\n  const legendVerticalAlign = isVerticalAlign(align);\n  let xAxisWidth;\n\n  if (legendVerticalAlign) {\n    xAxisWidth = width - (yAxis.x + yAxis.width + padding.X);\n\n    if (circleLegend.visible) {\n      xAxisWidth -= circleLegend.width;\n    }\n  } else {\n    xAxisWidth = width - (yAxis.width + Math.max(legendWidth, circleLegend.visible ? circleLegend.width : 0));\n  }\n\n  if (hasCenterYAxis) {\n    xAxisWidth = width - (legendVerticalAlign ? 0 : legendWidth) - padding.X * 2;\n  }\n\n  if (secondaryYAxis.width) {\n    xAxisWidth -= secondaryYAxis.width;\n  }\n\n  if ((_a = xAxisData) === null || _a === void 0 ? void 0 : _a.maxLabelWidth) {\n    // subtract half of the maximum label length to secure margin size\n    xAxisWidth -= xAxisData.maxLabelWidth * 0.5;\n  }\n\n  return xAxisWidth;\n}\n\nfunction getXAxisHeight(xAxisData, hasAxis = false) {\n  var _a, _b;\n\n  if (!hasAxis) {\n    return 0;\n  }\n\n  return _b = (_a = xAxisData) === null || _a === void 0 ? void 0 : _a.maxHeight, _b !== null && _b !== void 0 ? _b : X_AXIS_HEIGHT;\n}\n\nfunction getXAxisRect(xAxisRectParam) {\n  var _a;\n\n  const {\n    hasAxis,\n    hasCenterYAxis,\n    yAxis,\n    size,\n    xAxisData\n  } = xAxisRectParam;\n  const x = hasCenterYAxis ? padding.X * 2 : yAxis.x + yAxis.width;\n  const y = yAxis.y + yAxis.height;\n  const xAxisWidth = getXAxisWidth(xAxisRectParam);\n  const xAxisHeight = getXAxisHeight(xAxisData, hasAxis);\n  return Object.assign({\n    x,\n    y\n  }, getValidRectSize((_a = size) === null || _a === void 0 ? void 0 : _a.xAxis, xAxisWidth, xAxisHeight));\n}\n\nfunction getLegendRect(legendRectParams) {\n  const {\n    legend,\n    xAxis,\n    yAxis,\n    chartSize,\n    title,\n    hasAxis,\n    secondaryYAxis,\n    xAxisTitleHeight\n  } = legendRectParams;\n\n  if (!legend.visible) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  const {\n    align,\n    width: legendWidth,\n    height: legendHeight\n  } = legend;\n  const {\n    width\n  } = chartSize;\n  const verticalAlign = isVerticalAlign(align);\n  let x = xAxis.x + xAxis.width + secondaryYAxis.width + padding.X;\n  let y = Math.max(yAxis.y, BUTTON_RECT_SIZE);\n\n  if (verticalAlign) {\n    x = (width - legendWidth) / 2;\n\n    if (align === 'top') {\n      y = title.y + title.height;\n    } else {\n      y = yAxis.y + yAxis.height + (hasAxis ? xAxis.height + xAxisTitleHeight : padding.Y);\n    }\n  } else if (align === 'left') {\n    x = padding.X;\n  }\n\n  return {\n    width: legendWidth,\n    height: legendHeight,\n    x,\n    y\n  };\n}\n\nfunction getCircleLegendRect(xAxis, yAxis, align, width) {\n  return {\n    width,\n    height: yAxis.height,\n    x: align === 'left' ? padding.X : xAxis.x + xAxis.width + padding.X,\n    y: yAxis.y\n  };\n}\n\nfunction getPlotRect(xAxis, yAxis, size) {\n  return Object.assign({\n    x: xAxis.x,\n    y: yAxis.y\n  }, getValidRectSize(size, xAxis.width, yAxis.height));\n}\n\nfunction getTitleRect(chartSize, exportMenu, visible, titleHeight) {\n  const point = {\n    x: padding.X,\n    y: padding.Y\n  };\n  const marginBottom = 5;\n  const width = visible ? chartSize.width - exportMenu.width : 0;\n  const height = visible ? Math.max(titleHeight + marginBottom, exportMenu.height) : exportMenu.height;\n  return Object.assign({\n    width,\n    height\n  }, point);\n}\n\nfunction getTopLegendAreaHeight(useSpectrumLegend, legendHeight) {\n  return useSpectrumLegend ? SPECTRUM_LEGEND_LABEL_HEIGHT + spectrumLegendBar.PADDING * 2 + spectrumLegendTooltip.POINT_HEIGHT + spectrumLegendTooltip.HEIGHT + padding.Y : legendHeight + padding.Y;\n}\n\nfunction getYAxisTitleRect({\n  chartSize,\n  visible,\n  title,\n  legend: {\n    align: legendAlign,\n    width: legendWidth,\n    height: legendHeight,\n    visible: legendVisible,\n    useSpectrumLegend\n  },\n  hasCenterYAxis,\n  visibleSecondaryYAxis,\n  isRightSide = false,\n  yAxisTitleHeight\n}) {\n  const marginBottom = 5;\n  const height = visible ? yAxisTitleHeight + marginBottom : 0;\n  const verticalLegendAlign = isVerticalAlign(legendAlign);\n  const width = (chartSize.width - (verticalLegendAlign ? padding.X * 2 : legendWidth)) / (visibleSecondaryYAxis ? 2 : 1);\n  const point = {\n    x: isRightSide ? title.x + width : title.x,\n    y: title.y + title.height\n  };\n\n  if (legendVisible) {\n    if (legendAlign === 'left') {\n      point.x += legendWidth;\n    } else if (legendAlign === 'top') {\n      point.y += getTopLegendAreaHeight(useSpectrumLegend, legendHeight);\n    }\n  }\n\n  if (hasCenterYAxis) {\n    point.x = (width + padding.X * 2) / 2;\n  }\n\n  return Object.assign({\n    height,\n    width\n  }, point);\n}\n\nfunction getXAxisTitleRect(visible, xAxis, xAxisTitleHeight) {\n  const point = {\n    x: xAxis.x,\n    y: xAxis.y + xAxis.height\n  };\n  const height = visible ? xAxisTitleHeight : 0;\n  const width = visible ? xAxis.width : 0;\n  return Object.assign({\n    height,\n    width\n  }, point);\n}\n\nfunction getExportMenuRect(chartSize, visible) {\n  const marginY = 5;\n  const x = visible ? padding.X + chartSize.width - BUTTON_RECT_SIZE : padding.X + chartSize.width;\n  const y = padding.Y;\n  const height = visible ? BUTTON_RECT_SIZE + marginY : 0;\n  const width = visible ? BUTTON_RECT_SIZE : 0;\n  return {\n    x,\n    y,\n    height,\n    width\n  };\n}\n\nfunction getResetButtonRect(exportMenu, useResetButton) {\n  const marginY = 5;\n  const x = useResetButton ? exportMenu.x - BUTTON_RECT_SIZE - padding.X : 0;\n  const y = useResetButton ? exportMenu.y : 0;\n  const height = useResetButton ? BUTTON_RECT_SIZE + marginY : 0;\n  const width = useResetButton ? BUTTON_RECT_SIZE : 0;\n  return {\n    x,\n    y,\n    height,\n    width\n  };\n}\n\nexport function isUsingResetButton(options) {\n  var _a;\n\n  return !!((_a = options.series) === null || _a === void 0 ? void 0 : _a.zoomable);\n}\nexport function isExportMenuVisible(options) {\n  var _a;\n\n  const visible = (_a = options.exportMenu) === null || _a === void 0 ? void 0 : _a.visible;\n  return isUndefined(visible) ? true : visible;\n}\n\nfunction getYAxisMaxLabelWidth(maxLabelLength) {\n  return maxLabelLength ? maxLabelLength + padding.X : Y_AXIS_MIN_WIDTH;\n}\n\nfunction pickOptionSize(option) {\n  if (!option || isUndefined(option.width) && isUndefined(option.height)) {\n    return null;\n  }\n\n  return pick(option, 'width', 'height');\n}\n\nfunction validOffsetValue(axis, plot, sizeKey) {\n  const axisSize = axis[sizeKey];\n  const plotSize = plot[sizeKey];\n\n  if (isNumber(axisSize) && isNumber(plotSize)) {\n    return Math.max(axisSize, plotSize);\n  }\n}\n\nfunction getOptionSize(options) {\n  const xAxis = pickOptionSize(options.xAxis);\n  const yAxisOptions = getYAxisOption(options);\n  const yAxis = pickOptionSize(yAxisOptions.yAxis);\n  const secondaryYAxis = pickOptionSize(yAxisOptions.secondaryYAxis);\n  const plot = pickOptionSize(options.plot);\n\n  if (plot) {\n    /*\n    If both the width of the x-axis and the width of the plot are entered,\n    set the maximum value.\n    */\n    if (xAxis) {\n      xAxis.width = plot.width = validOffsetValue(xAxis, plot, 'width');\n    }\n    /*\n    If both the height of the y-axis and the height of the plot are entered,\n    set the maximum value.\n    */\n\n\n    if (yAxis) {\n      yAxis.height = plot.height = validOffsetValue(yAxis, plot, 'height');\n    }\n\n    if (secondaryYAxis) {\n      secondaryYAxis.height = plot.height = validOffsetValue(secondaryYAxis, plot, 'height');\n    }\n  }\n\n  return {\n    xAxis,\n    yAxis,\n    plot,\n    secondaryYAxis\n  };\n}\n\nfunction getAxisTitleHeight(axisTheme, offsetY = 0) {\n  const fontSize = Array.isArray(axisTheme) ? Math.max(axisTheme[0].title.fontSize, axisTheme[1].title.fontSize) : axisTheme.title.fontSize;\n  return fontSize + offsetY;\n}\n\nfunction adjustAxisSize({\n  width,\n  height\n}, layout, legendState) {\n  if (width < 0 || height < 0) {\n    return;\n  }\n\n  const {\n    title,\n    yAxisTitle,\n    yAxis,\n    xAxis,\n    xAxisTitle,\n    legend,\n    secondaryYAxis\n  } = layout;\n  const {\n    align\n  } = legendState;\n  const hasVerticalLegend = isVerticalAlign(align);\n  const legendHeight = hasVerticalLegend ? legend.height : 0;\n  const diffHeight = xAxis.height + xAxisTitle.height + yAxis.height + yAxisTitle.height + title.height + legendHeight - height;\n\n  if (diffHeight > 0) {\n    yAxis.height -= diffHeight;\n    xAxis.y -= diffHeight;\n    xAxisTitle.y -= diffHeight;\n\n    if (hasVerticalLegend) {\n      legend.y -= diffHeight;\n    }\n  }\n\n  secondaryYAxis.x = xAxis.x + xAxis.width;\n  secondaryYAxis.height = yAxis.height;\n}\n\nconst layout = {\n  name: 'layout',\n  state: () => ({\n    layout: {}\n  }),\n  action: {\n    setLayout({\n      state\n    }) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n\n      const {\n        legend: legendState,\n        theme,\n        circleLegend: circleLegendState,\n        series,\n        options,\n        chart,\n        axes\n      } = state;\n      const {\n        width,\n        height\n      } = chart;\n      const chartSize = {\n        height: height - padding.Y * 2,\n        width: width - padding.X * 2\n      };\n      const hasCenterYAxis = isCenterYAxis(options, !!series.bar);\n      const hasAxis = !(series.pie || series.radar || series.treemap || series.radialBar);\n      const optionSize = getOptionSize(options);\n      const {\n        yAxis: yAxisOption,\n        secondaryYAxis: secondaryYAxisOption\n      } = getYAxisOption(options);\n      const visibleSecondaryYAxis = !!secondaryYAxisOption;\n      const titleHeight = theme.title.fontSize;\n      const yAxisTitleHeight = (_d = getAxisTitleHeight(theme.yAxis, (_c = (_b = (_a = axes) === null || _a === void 0 ? void 0 : _a.yAxis) === null || _b === void 0 ? void 0 : _b.title) === null || _c === void 0 ? void 0 : _c.offsetY), _d !== null && _d !== void 0 ? _d : 0);\n      const xAxisTitleHeight = (_h = getAxisTitleHeight(theme.xAxis, (_g = (_f = (_e = axes) === null || _e === void 0 ? void 0 : _e.xAxis) === null || _f === void 0 ? void 0 : _f.title) === null || _g === void 0 ? void 0 : _g.offsetY), _h !== null && _h !== void 0 ? _h : 0); // Don't change the order!\n      // exportMenu -> resetButton -> title -> yAxis.title -> yAxis -> secondaryYAxisTitle -> secondaryYAxis -> xAxis -> xAxis.title -> legend -> circleLegend -> plot\n\n      const exportMenu = getExportMenuRect(chartSize, isExportMenuVisible(options));\n      const resetButton = getResetButtonRect(exportMenu, isUsingResetButton(options));\n      const btnAreaRect = exportMenu.height ? exportMenu : resetButton;\n      const title = getTitleRect(chartSize, btnAreaRect, !!((_j = options.chart) === null || _j === void 0 ? void 0 : _j.title), titleHeight);\n      const yAxisTitle = getYAxisTitleRect({\n        chartSize,\n        visible: !!((_k = yAxisOption) === null || _k === void 0 ? void 0 : _k.title) || !!((_l = secondaryYAxisOption) === null || _l === void 0 ? void 0 : _l.title),\n        title,\n        legend: legendState,\n        hasCenterYAxis,\n        visibleSecondaryYAxis,\n        yAxisTitleHeight\n      });\n      const yAxis = getYAxisRect({\n        chartSize,\n        legend: legendState,\n        circleLegend: circleLegendState,\n        yAxisTitle,\n        hasCenterYAxis,\n        hasAxis,\n        maxLabelWidth: getYAxisMaxLabelWidth((_m = axes) === null || _m === void 0 ? void 0 : _m.yAxis.maxLabelWidth),\n        size: optionSize,\n        xAxisTitleHeight\n      });\n      const secondaryYAxisTitle = getYAxisTitleRect({\n        chartSize,\n        visible: !!((_o = yAxisOption) === null || _o === void 0 ? void 0 : _o.title) || !!((_p = secondaryYAxisOption) === null || _p === void 0 ? void 0 : _p.title),\n        title,\n        legend: legendState,\n        hasCenterYAxis,\n        isRightSide: true,\n        visibleSecondaryYAxis,\n        yAxisTitleHeight\n      });\n      const secondaryYAxis = getYAxisRect({\n        chartSize,\n        legend: legendState,\n        circleLegend: circleLegendState,\n        yAxisTitle: secondaryYAxisTitle,\n        hasCenterYAxis,\n        hasAxis,\n        maxLabelWidth: getYAxisMaxLabelWidth((_r = (_q = axes) === null || _q === void 0 ? void 0 : _q.secondaryYAxis) === null || _r === void 0 ? void 0 : _r.maxLabelWidth),\n        size: optionSize,\n        isRightSide: true,\n        visibleSecondaryYAxis,\n        xAxisTitleHeight\n      });\n      const xAxis = getXAxisRect({\n        chartSize,\n        yAxis,\n        secondaryYAxis,\n        legend: legendState,\n        circleLegend: circleLegendState,\n        hasCenterYAxis,\n        hasAxis,\n        size: optionSize,\n        xAxisData: (_s = axes) === null || _s === void 0 ? void 0 : _s.xAxis\n      });\n      const xAxisTitle = getXAxisTitleRect(!!((_t = options.xAxis) === null || _t === void 0 ? void 0 : _t.title), xAxis, xAxisTitleHeight);\n      const legend = getLegendRect({\n        chartSize,\n        xAxis,\n        yAxis,\n        secondaryYAxis,\n        title,\n        legend: legendState,\n        hasAxis,\n        xAxisTitleHeight\n      });\n      adjustAxisSize(chartSize, {\n        title,\n        yAxisTitle,\n        yAxis,\n        xAxis,\n        xAxisTitle,\n        legend,\n        secondaryYAxis\n      }, legendState);\n      const circleLegend = getCircleLegendRect(xAxis, yAxis, legendState.align, circleLegendState.width);\n      const plot = getPlotRect(xAxis, yAxis, optionSize.plot);\n      extend(state.layout, {\n        chart: {\n          x: 0,\n          y: 0,\n          width,\n          height\n        },\n        title,\n        plot,\n        legend,\n        circleLegend,\n        xAxis,\n        xAxisTitle,\n        yAxis,\n        yAxisTitle,\n        exportMenu,\n        resetButton,\n        secondaryYAxisTitle,\n        secondaryYAxis\n      });\n    }\n\n  },\n  observe: {\n    updateLayoutObserve() {\n      this.dispatch('setLayout');\n    }\n\n  }\n};\nexport default layout;","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/store/layout.js"],"names":["extend","isUndefined","pick","isNumber","isCenterYAxis","BUTTON_RECT_SIZE","TICK_SIZE","SPECTRUM_LEGEND_LABEL_HEIGHT","spectrumLegendBar","spectrumLegendTooltip","getYAxisOption","padding","X","Y","X_AXIS_HEIGHT","Y_AXIS_MIN_WIDTH","isVerticalAlign","align","getValidRectSize","size","width","height","_a","_b","_c","_d","getDefaultXAxisHeight","xAxis","yAxis","getDefaultYAxisXPoint","yAxisRectParam","yAxisTitle","isRightSide","visibleSecondaryYAxis","yAxisWidth","getDefaultYAxisWidth","Math","max","x","getYAxisXPoint","chartSize","legend","circleLegend","hasCenterYAxis","maxLabelWidth","visible","getYAxisYPoint","y","getYAxisWidth","hasAxis","getYAxisHeight","xAxisTitleHeight","legendHeight","xAxisHeight","yAxisHeight","topArea","plot","getYAxisRect","Object","assign","secondaryYAxis","getXAxisWidth","xAxisData","legendWidth","legendVerticalAlign","xAxisWidth","getXAxisHeight","maxHeight","getXAxisRect","xAxisRectParam","getLegendRect","legendRectParams","title","verticalAlign","getCircleLegendRect","getPlotRect","getTitleRect","exportMenu","titleHeight","point","marginBottom","getTopLegendAreaHeight","useSpectrumLegend","PADDING","POINT_HEIGHT","HEIGHT","getYAxisTitleRect","legendAlign","legendVisible","yAxisTitleHeight","verticalLegendAlign","getXAxisTitleRect","getExportMenuRect","marginY","getResetButtonRect","useResetButton","isUsingResetButton","options","series","zoomable","isExportMenuVisible","getYAxisMaxLabelWidth","maxLabelLength","pickOptionSize","option","validOffsetValue","axis","sizeKey","axisSize","plotSize","getOptionSize","yAxisOptions","getAxisTitleHeight","axisTheme","offsetY","fontSize","Array","isArray","adjustAxisSize","layout","legendState","xAxisTitle","hasVerticalLegend","diffHeight","name","state","action","setLayout","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","theme","circleLegendState","chart","axes","bar","pie","radar","treemap","radialBar","optionSize","yAxisOption","secondaryYAxisOption","resetButton","btnAreaRect","secondaryYAxisTitle","observe","updateLayoutObserve","dispatch"],"mappings":"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","sourcesContent":["import { extend } from \"./store\";\nimport { isUndefined, pick, isNumber } from \"../helpers/utils\";\nimport { isCenterYAxis } from \"./axes\";\nimport { BUTTON_RECT_SIZE } from \"../component/exportMenu\";\nimport { TICK_SIZE } from \"../brushes/axis\";\nimport { SPECTRUM_LEGEND_LABEL_HEIGHT, spectrumLegendBar, spectrumLegendTooltip, } from \"../brushes/spectrumLegend\";\nimport { getYAxisOption } from \"../helpers/axes\";\nexport const padding = { X: 10, Y: 15 };\nexport const X_AXIS_HEIGHT = 20;\nconst Y_AXIS_MIN_WIDTH = 40;\nexport function isVerticalAlign(align) {\n    return align === 'top' || align === 'bottom';\n}\nfunction getValidRectSize(size, width, height) {\n    var _a, _b, _c, _d;\n    return {\n        height: (_b = (_a = size) === null || _a === void 0 ? void 0 : _a.height, (_b !== null && _b !== void 0 ? _b : height)),\n        width: (_d = (_c = size) === null || _c === void 0 ? void 0 : _c.width, (_d !== null && _d !== void 0 ? _d : width)),\n    };\n}\nfunction getDefaultXAxisHeight(size) {\n    var _a;\n    return ((_a = size.xAxis) === null || _a === void 0 ? void 0 : _a.height) && !size.yAxis ? size.xAxis.height : X_AXIS_HEIGHT;\n}\nfunction getDefaultYAxisXPoint(yAxisRectParam) {\n    const { yAxisTitle, isRightSide, visibleSecondaryYAxis } = yAxisRectParam;\n    const yAxisWidth = getDefaultYAxisWidth(yAxisRectParam);\n    return isRightSide && visibleSecondaryYAxis\n        ? Math.max(yAxisTitle.x + yAxisTitle.width - yAxisWidth, 0)\n        : yAxisTitle.x;\n}\nfunction getYAxisXPoint(yAxisRectParam) {\n    const { chartSize, legend, circleLegend, hasCenterYAxis, maxLabelWidth } = yAxisRectParam;\n    const { width } = chartSize;\n    const { align } = legend;\n    let yAxisWidth = getDefaultYAxisWidth(yAxisRectParam);\n    let x = getDefaultYAxisXPoint(yAxisRectParam);\n    if (hasCenterYAxis) {\n        yAxisWidth = maxLabelWidth + (TICK_SIZE + padding.X) * 2;\n        x = (width - legend.width - yAxisWidth + padding.X * 2) / 2;\n    }\n    if (legend.visible && align === 'left') {\n        x = getDefaultYAxisXPoint(yAxisRectParam);\n    }\n    if (circleLegend.visible && align === 'left') {\n        x = Math.max(circleLegend.width + padding.X, x);\n    }\n    return x;\n}\nfunction getYAxisYPoint({ yAxisTitle }) {\n    return yAxisTitle.y + yAxisTitle.height;\n}\nfunction getDefaultYAxisWidth({ maxLabelWidth, size, isRightSide }) {\n    var _a, _b, _c;\n    return _c = (_b = (_a = size) === null || _a === void 0 ? void 0 : _a[isRightSide ? 'secondaryYAxis' : 'yAxis']) === null || _b === void 0 ? void 0 : _b.width, (_c !== null && _c !== void 0 ? _c : maxLabelWidth);\n}\nfunction getYAxisWidth(yAxisRectParam) {\n    const { hasCenterYAxis, hasAxis, maxLabelWidth, visibleSecondaryYAxis = false, isRightSide = false, } = yAxisRectParam;\n    let yAxisWidth = getDefaultYAxisWidth(yAxisRectParam);\n    if (hasCenterYAxis && !isRightSide) {\n        yAxisWidth = maxLabelWidth + (TICK_SIZE + padding.X) * 2;\n    }\n    else if (!hasAxis || (isRightSide && !visibleSecondaryYAxis)) {\n        yAxisWidth = 0;\n    }\n    return yAxisWidth;\n}\nfunction getYAxisHeight({ chartSize, legend, yAxisTitle, hasAxis, size, xAxisTitleHeight, }) {\n    var _a, _b, _c, _d;\n    const { height } = chartSize;\n    const { align, height: legendHeight } = legend;\n    const xAxisHeight = getDefaultXAxisHeight(size);\n    const y = yAxisTitle.y + yAxisTitle.height;\n    let yAxisHeight = height - y - xAxisHeight - xAxisTitleHeight;\n    if (!hasAxis) {\n        yAxisHeight = height - y;\n    }\n    if (legend.visible) {\n        const topArea = Math.max(y, legendHeight);\n        if (align === 'top') {\n            yAxisHeight = height - topArea - (hasAxis ? X_AXIS_HEIGHT + xAxisTitleHeight : 0);\n        }\n        else if (align === 'bottom') {\n            yAxisHeight = height - y - X_AXIS_HEIGHT - xAxisTitleHeight - legendHeight;\n        }\n    }\n    if (!((_b = (_a = size) === null || _a === void 0 ? void 0 : _a.yAxis) === null || _b === void 0 ? void 0 : _b.height) && ((_d = (_c = size) === null || _c === void 0 ? void 0 : _c.plot) === null || _d === void 0 ? void 0 : _d.height)) {\n        yAxisHeight = size.plot.height;\n    }\n    return yAxisHeight;\n}\nfunction getYAxisRect(yAxisRectParam) {\n    var _a, _b;\n    const { size, isRightSide = false } = yAxisRectParam;\n    const x = getYAxisXPoint(yAxisRectParam);\n    const y = getYAxisYPoint(yAxisRectParam);\n    const yAxisWidth = getYAxisWidth(yAxisRectParam);\n    const yAxisHeight = getYAxisHeight(yAxisRectParam);\n    return Object.assign({ x,\n        y }, getValidRectSize(isRightSide ? (_a = size) === null || _a === void 0 ? void 0 : _a.secondaryYAxis : (_b = size) === null || _b === void 0 ? void 0 : _b.yAxis, yAxisWidth, yAxisHeight));\n}\nfunction getXAxisWidth({ chartSize, yAxis, hasCenterYAxis, legend, circleLegend, secondaryYAxis, xAxisData, }) {\n    var _a;\n    const { width } = chartSize;\n    const { align, width: legendWidth } = legend;\n    const legendVerticalAlign = isVerticalAlign(align);\n    let xAxisWidth;\n    if (legendVerticalAlign) {\n        xAxisWidth = width - (yAxis.x + yAxis.width + padding.X);\n        if (circleLegend.visible) {\n            xAxisWidth -= circleLegend.width;\n        }\n    }\n    else {\n        xAxisWidth =\n            width - (yAxis.width + Math.max(legendWidth, circleLegend.visible ? circleLegend.width : 0));\n    }\n    if (hasCenterYAxis) {\n        xAxisWidth = width - (legendVerticalAlign ? 0 : legendWidth) - padding.X * 2;\n    }\n    if (secondaryYAxis.width) {\n        xAxisWidth -= secondaryYAxis.width;\n    }\n    if ((_a = xAxisData) === null || _a === void 0 ? void 0 : _a.maxLabelWidth) {\n        // subtract half of the maximum label length to secure margin size\n        xAxisWidth -= xAxisData.maxLabelWidth * 0.5;\n    }\n    return xAxisWidth;\n}\nfunction getXAxisHeight(xAxisData, hasAxis = false) {\n    var _a, _b;\n    if (!hasAxis) {\n        return 0;\n    }\n    return _b = (_a = xAxisData) === null || _a === void 0 ? void 0 : _a.maxHeight, (_b !== null && _b !== void 0 ? _b : X_AXIS_HEIGHT);\n}\nfunction getXAxisRect(xAxisRectParam) {\n    var _a;\n    const { hasAxis, hasCenterYAxis, yAxis, size, xAxisData } = xAxisRectParam;\n    const x = hasCenterYAxis ? padding.X * 2 : yAxis.x + yAxis.width;\n    const y = yAxis.y + yAxis.height;\n    const xAxisWidth = getXAxisWidth(xAxisRectParam);\n    const xAxisHeight = getXAxisHeight(xAxisData, hasAxis);\n    return Object.assign({ x,\n        y }, getValidRectSize((_a = size) === null || _a === void 0 ? void 0 : _a.xAxis, xAxisWidth, xAxisHeight));\n}\nfunction getLegendRect(legendRectParams) {\n    const { legend, xAxis, yAxis, chartSize, title, hasAxis, secondaryYAxis, xAxisTitleHeight, } = legendRectParams;\n    if (!legend.visible) {\n        return {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n    const { align, width: legendWidth, height: legendHeight } = legend;\n    const { width } = chartSize;\n    const verticalAlign = isVerticalAlign(align);\n    let x = xAxis.x + xAxis.width + secondaryYAxis.width + padding.X;\n    let y = Math.max(yAxis.y, BUTTON_RECT_SIZE);\n    if (verticalAlign) {\n        x = (width - legendWidth) / 2;\n        if (align === 'top') {\n            y = title.y + title.height;\n        }\n        else {\n            y = yAxis.y + yAxis.height + (hasAxis ? xAxis.height + xAxisTitleHeight : padding.Y);\n        }\n    }\n    else if (align === 'left') {\n        x = padding.X;\n    }\n    return { width: legendWidth, height: legendHeight, x, y };\n}\nfunction getCircleLegendRect(xAxis, yAxis, align, width) {\n    return {\n        width,\n        height: yAxis.height,\n        x: align === 'left' ? padding.X : xAxis.x + xAxis.width + padding.X,\n        y: yAxis.y,\n    };\n}\nfunction getPlotRect(xAxis, yAxis, size) {\n    return Object.assign({ x: xAxis.x, y: yAxis.y }, getValidRectSize(size, xAxis.width, yAxis.height));\n}\nfunction getTitleRect(chartSize, exportMenu, visible, titleHeight) {\n    const point = { x: padding.X, y: padding.Y };\n    const marginBottom = 5;\n    const width = visible ? chartSize.width - exportMenu.width : 0;\n    const height = visible\n        ? Math.max(titleHeight + marginBottom, exportMenu.height)\n        : exportMenu.height;\n    return Object.assign({ width, height }, point);\n}\nfunction getTopLegendAreaHeight(useSpectrumLegend, legendHeight) {\n    return useSpectrumLegend\n        ? SPECTRUM_LEGEND_LABEL_HEIGHT +\n            spectrumLegendBar.PADDING * 2 +\n            spectrumLegendTooltip.POINT_HEIGHT +\n            spectrumLegendTooltip.HEIGHT +\n            padding.Y\n        : legendHeight + padding.Y;\n}\nfunction getYAxisTitleRect({ chartSize, visible, title, legend: { align: legendAlign, width: legendWidth, height: legendHeight, visible: legendVisible, useSpectrumLegend, }, hasCenterYAxis, visibleSecondaryYAxis, isRightSide = false, yAxisTitleHeight, }) {\n    const marginBottom = 5;\n    const height = visible ? yAxisTitleHeight + marginBottom : 0;\n    const verticalLegendAlign = isVerticalAlign(legendAlign);\n    const width = (chartSize.width - (verticalLegendAlign ? padding.X * 2 : legendWidth)) /\n        (visibleSecondaryYAxis ? 2 : 1);\n    const point = {\n        x: isRightSide ? title.x + width : title.x,\n        y: title.y + title.height,\n    };\n    if (legendVisible) {\n        if (legendAlign === 'left') {\n            point.x += legendWidth;\n        }\n        else if (legendAlign === 'top') {\n            point.y += getTopLegendAreaHeight(useSpectrumLegend, legendHeight);\n        }\n    }\n    if (hasCenterYAxis) {\n        point.x = (width + padding.X * 2) / 2;\n    }\n    return Object.assign({ height, width }, point);\n}\nfunction getXAxisTitleRect(visible, xAxis, xAxisTitleHeight) {\n    const point = { x: xAxis.x, y: xAxis.y + xAxis.height };\n    const height = visible ? xAxisTitleHeight : 0;\n    const width = visible ? xAxis.width : 0;\n    return Object.assign({ height, width }, point);\n}\nfunction getExportMenuRect(chartSize, visible) {\n    const marginY = 5;\n    const x = visible ? padding.X + chartSize.width - BUTTON_RECT_SIZE : padding.X + chartSize.width;\n    const y = padding.Y;\n    const height = visible ? BUTTON_RECT_SIZE + marginY : 0;\n    const width = visible ? BUTTON_RECT_SIZE : 0;\n    return { x, y, height, width };\n}\nfunction getResetButtonRect(exportMenu, useResetButton) {\n    const marginY = 5;\n    const x = useResetButton ? exportMenu.x - BUTTON_RECT_SIZE - padding.X : 0;\n    const y = useResetButton ? exportMenu.y : 0;\n    const height = useResetButton ? BUTTON_RECT_SIZE + marginY : 0;\n    const width = useResetButton ? BUTTON_RECT_SIZE : 0;\n    return { x, y, height, width };\n}\nexport function isUsingResetButton(options) {\n    var _a;\n    return !!((_a = options.series) === null || _a === void 0 ? void 0 : _a.zoomable);\n}\nexport function isExportMenuVisible(options) {\n    var _a;\n    const visible = (_a = options.exportMenu) === null || _a === void 0 ? void 0 : _a.visible;\n    return isUndefined(visible) ? true : visible;\n}\nfunction getYAxisMaxLabelWidth(maxLabelLength) {\n    return maxLabelLength ? maxLabelLength + padding.X : Y_AXIS_MIN_WIDTH;\n}\nfunction pickOptionSize(option) {\n    if (!option || (isUndefined(option.width) && isUndefined(option.height))) {\n        return null;\n    }\n    return pick(option, 'width', 'height');\n}\nfunction validOffsetValue(axis, plot, sizeKey) {\n    const axisSize = axis[sizeKey];\n    const plotSize = plot[sizeKey];\n    if (isNumber(axisSize) && isNumber(plotSize)) {\n        return Math.max(axisSize, plotSize);\n    }\n}\nfunction getOptionSize(options) {\n    const xAxis = pickOptionSize(options.xAxis);\n    const yAxisOptions = getYAxisOption(options);\n    const yAxis = pickOptionSize(yAxisOptions.yAxis);\n    const secondaryYAxis = pickOptionSize(yAxisOptions.secondaryYAxis);\n    const plot = pickOptionSize(options.plot);\n    if (plot) {\n        /*\n        If both the width of the x-axis and the width of the plot are entered,\n        set the maximum value.\n      */\n        if (xAxis) {\n            xAxis.width = plot.width = validOffsetValue(xAxis, plot, 'width');\n        }\n        /*\n        If both the height of the y-axis and the height of the plot are entered,\n        set the maximum value.\n      */\n        if (yAxis) {\n            yAxis.height = plot.height = validOffsetValue(yAxis, plot, 'height');\n        }\n        if (secondaryYAxis) {\n            secondaryYAxis.height = plot.height = validOffsetValue(secondaryYAxis, plot, 'height');\n        }\n    }\n    return {\n        xAxis,\n        yAxis,\n        plot,\n        secondaryYAxis,\n    };\n}\nfunction getAxisTitleHeight(axisTheme, offsetY = 0) {\n    const fontSize = Array.isArray(axisTheme)\n        ? Math.max(axisTheme[0].title.fontSize, axisTheme[1].title.fontSize)\n        : axisTheme.title.fontSize;\n    return fontSize + offsetY;\n}\nfunction adjustAxisSize({ width, height }, layout, legendState) {\n    if (width < 0 || height < 0) {\n        return;\n    }\n    const { title, yAxisTitle, yAxis, xAxis, xAxisTitle, legend, secondaryYAxis } = layout;\n    const { align } = legendState;\n    const hasVerticalLegend = isVerticalAlign(align);\n    const legendHeight = hasVerticalLegend ? legend.height : 0;\n    const diffHeight = xAxis.height +\n        xAxisTitle.height +\n        yAxis.height +\n        yAxisTitle.height +\n        title.height +\n        legendHeight -\n        height;\n    if (diffHeight > 0) {\n        yAxis.height -= diffHeight;\n        xAxis.y -= diffHeight;\n        xAxisTitle.y -= diffHeight;\n        if (hasVerticalLegend) {\n            legend.y -= diffHeight;\n        }\n    }\n    secondaryYAxis.x = xAxis.x + xAxis.width;\n    secondaryYAxis.height = yAxis.height;\n}\nconst layout = {\n    name: 'layout',\n    state: () => ({\n        layout: {},\n    }),\n    action: {\n        setLayout({ state }) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n            const { legend: legendState, theme, circleLegend: circleLegendState, series, options, chart, axes, } = state;\n            const { width, height } = chart;\n            const chartSize = {\n                height: height - padding.Y * 2,\n                width: width - padding.X * 2,\n            };\n            const hasCenterYAxis = isCenterYAxis(options, !!series.bar);\n            const hasAxis = !(series.pie || series.radar || series.treemap || series.radialBar);\n            const optionSize = getOptionSize(options);\n            const { yAxis: yAxisOption, secondaryYAxis: secondaryYAxisOption } = getYAxisOption(options);\n            const visibleSecondaryYAxis = !!secondaryYAxisOption;\n            const titleHeight = theme.title.fontSize;\n            const yAxisTitleHeight = (_d = getAxisTitleHeight(theme.yAxis, (_c = (_b = (_a = axes) === null || _a === void 0 ? void 0 : _a.yAxis) === null || _b === void 0 ? void 0 : _b.title) === null || _c === void 0 ? void 0 : _c.offsetY), (_d !== null && _d !== void 0 ? _d : 0));\n            const xAxisTitleHeight = (_h = getAxisTitleHeight(theme.xAxis, (_g = (_f = (_e = axes) === null || _e === void 0 ? void 0 : _e.xAxis) === null || _f === void 0 ? void 0 : _f.title) === null || _g === void 0 ? void 0 : _g.offsetY), (_h !== null && _h !== void 0 ? _h : 0));\n            // Don't change the order!\n            // exportMenu -> resetButton -> title -> yAxis.title -> yAxis -> secondaryYAxisTitle -> secondaryYAxis -> xAxis -> xAxis.title -> legend -> circleLegend -> plot\n            const exportMenu = getExportMenuRect(chartSize, isExportMenuVisible(options));\n            const resetButton = getResetButtonRect(exportMenu, isUsingResetButton(options));\n            const btnAreaRect = exportMenu.height ? exportMenu : resetButton;\n            const title = getTitleRect(chartSize, btnAreaRect, !!((_j = options.chart) === null || _j === void 0 ? void 0 : _j.title), titleHeight);\n            const yAxisTitle = getYAxisTitleRect({\n                chartSize,\n                visible: !!((_k = yAxisOption) === null || _k === void 0 ? void 0 : _k.title) || !!((_l = secondaryYAxisOption) === null || _l === void 0 ? void 0 : _l.title),\n                title,\n                legend: legendState,\n                hasCenterYAxis,\n                visibleSecondaryYAxis,\n                yAxisTitleHeight,\n            });\n            const yAxis = getYAxisRect({\n                chartSize,\n                legend: legendState,\n                circleLegend: circleLegendState,\n                yAxisTitle,\n                hasCenterYAxis,\n                hasAxis,\n                maxLabelWidth: getYAxisMaxLabelWidth((_m = axes) === null || _m === void 0 ? void 0 : _m.yAxis.maxLabelWidth),\n                size: optionSize,\n                xAxisTitleHeight,\n            });\n            const secondaryYAxisTitle = getYAxisTitleRect({\n                chartSize,\n                visible: !!((_o = yAxisOption) === null || _o === void 0 ? void 0 : _o.title) || !!((_p = secondaryYAxisOption) === null || _p === void 0 ? void 0 : _p.title),\n                title,\n                legend: legendState,\n                hasCenterYAxis,\n                isRightSide: true,\n                visibleSecondaryYAxis,\n                yAxisTitleHeight,\n            });\n            const secondaryYAxis = getYAxisRect({\n                chartSize,\n                legend: legendState,\n                circleLegend: circleLegendState,\n                yAxisTitle: secondaryYAxisTitle,\n                hasCenterYAxis,\n                hasAxis,\n                maxLabelWidth: getYAxisMaxLabelWidth((_r = (_q = axes) === null || _q === void 0 ? void 0 : _q.secondaryYAxis) === null || _r === void 0 ? void 0 : _r.maxLabelWidth),\n                size: optionSize,\n                isRightSide: true,\n                visibleSecondaryYAxis,\n                xAxisTitleHeight,\n            });\n            const xAxis = getXAxisRect({\n                chartSize,\n                yAxis,\n                secondaryYAxis,\n                legend: legendState,\n                circleLegend: circleLegendState,\n                hasCenterYAxis,\n                hasAxis,\n                size: optionSize,\n                xAxisData: (_s = axes) === null || _s === void 0 ? void 0 : _s.xAxis,\n            });\n            const xAxisTitle = getXAxisTitleRect(!!((_t = options.xAxis) === null || _t === void 0 ? void 0 : _t.title), xAxis, xAxisTitleHeight);\n            const legend = getLegendRect({\n                chartSize,\n                xAxis,\n                yAxis,\n                secondaryYAxis,\n                title,\n                legend: legendState,\n                hasAxis,\n                xAxisTitleHeight,\n            });\n            adjustAxisSize(chartSize, { title, yAxisTitle, yAxis, xAxis, xAxisTitle, legend, secondaryYAxis }, legendState);\n            const circleLegend = getCircleLegendRect(xAxis, yAxis, legendState.align, circleLegendState.width);\n            const plot = getPlotRect(xAxis, yAxis, optionSize.plot);\n            extend(state.layout, {\n                chart: { x: 0, y: 0, width, height },\n                title,\n                plot,\n                legend,\n                circleLegend,\n                xAxis,\n                xAxisTitle,\n                yAxis,\n                yAxisTitle,\n                exportMenu,\n                resetButton,\n                secondaryYAxisTitle,\n                secondaryYAxis,\n            });\n        },\n    },\n    observe: {\n        updateLayoutObserve() {\n            this.dispatch('setLayout');\n        },\n    },\n};\nexport default layout;\n"]},"metadata":{},"sourceType":"module"}