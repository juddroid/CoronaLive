{"ast":null,"code":"import Component from \"./component\";\nimport { isExportMenuVisible, padding } from \"../store/layout\";\nimport { execDownload, downloadSpreadSheet } from \"../helpers/downloader\";\nimport { isString } from \"../helpers/utils\";\nimport { getFontStyleString, getTranslateString } from \"../helpers/style\";\nconst EXPORT_MENU_WIDTH = 140;\nexport const BUTTON_RECT_SIZE = 24;\nexport default class ExportMenu extends Component {\n  constructor() {\n    super(...arguments);\n    this.models = {\n      exportMenuButton: []\n    };\n    this.opened = false;\n    this.chartWidth = 0;\n\n    this.toggleExportMenu = () => {\n      this.opened = !this.opened;\n      this.models.exportMenuButton[0].opened = this.opened;\n      this.eventBus.emit('needDraw');\n\n      if (this.opened) {\n        this.applyPanelWrapperStyle();\n        this.chartEl.appendChild(this.exportMenuEl);\n      } else {\n        this.chartEl.removeChild(this.exportMenuEl);\n      }\n    };\n\n    this.getCanvasExportBtnRemoved = () => {\n      const canvas = this.chartEl.getElementsByTagName('canvas')[0];\n      const ctx = canvas.getContext('2d');\n      const {\n        x,\n        y,\n        height: h,\n        width: w\n      } = this.rect;\n      ['#fff', this.chartBackgroundColor].forEach(color => {\n        ctx.fillStyle = color;\n        ctx.fillRect(x, y, w, h);\n      });\n      return canvas;\n    };\n\n    this.onClickExportButton = ev => {\n      const {\n        id\n      } = ev.target;\n\n      if (id === 'png' || id === 'jpeg') {\n        const canvas = this.getCanvasExportBtnRemoved();\n        execDownload(this.fileName, id, canvas.toDataURL(`image/${id}`, 1));\n      } else {\n        downloadSpreadSheet(this.fileName, id, this.data);\n      }\n\n      this.toggleExportMenu();\n    };\n  }\n\n  applyExportButtonPanelStyle() {\n    const exportMenuTitle = this.exportMenuEl.querySelector('.toastui-chart-export-menu-title');\n    const menuBtnWrapper = this.exportMenuEl.querySelector('.toastui-chart-export-menu-btn-wrapper');\n    exportMenuTitle.setAttribute('style', this.makePanelStyle('header'));\n    menuBtnWrapper.setAttribute('style', this.makePanelStyle('body'));\n  }\n\n  makeExportMenuButton() {\n    const el = document.createElement('div');\n    el.onclick = this.onClickExportButton;\n    el.innerHTML = `\n        <div class=\"toastui-chart-export-menu\">\n          <p class=\"toastui-chart-export-menu-title\">Export to</p>\n          <div class=\"toastui-chart-export-menu-btn-wrapper\">\n            <button class=\"toastui-chart-export-menu-btn\" id=\"xls\">xls</button>\n            <button class=\"toastui-chart-export-menu-btn\" id=\"csv\">csv</button>\n            <button class=\"toastui-chart-export-menu-btn\" id=\"png\">png</button>\n            <button class=\"toastui-chart-export-menu-btn\" id=\"jpeg\">jpeg</button>\n          </div>\n        </div>\n      `;\n    return el;\n  }\n\n  initialize({\n    chartEl\n  }) {\n    this.chartEl = chartEl;\n    this.type = 'exportMenu';\n    this.name = 'exportMenu';\n    this.exportMenuEl = this.makeExportMenuButton();\n  }\n\n  onClick({\n    responders\n  }) {\n    if (responders.length) {\n      this.toggleExportMenu();\n    }\n  }\n\n  getFileName(title) {\n    var _a, _b;\n\n    return isString(title) ? title : (_b = (_a = title) === null || _a === void 0 ? void 0 : _a.text, _b !== null && _b !== void 0 ? _b : 'toast-ui-chart');\n  }\n\n  render({\n    options,\n    layout,\n    chart,\n    series,\n    rawCategories,\n    theme\n  }) {\n    var _a, _b;\n\n    this.isShow = isExportMenuVisible(options);\n    this.chartWidth = chart.width;\n\n    if (!this.isShow) {\n      return;\n    }\n\n    this.chartBackgroundColor = theme.chart.backgroundColor;\n    this.theme = theme.exportMenu;\n    this.data = {\n      series,\n      categories: rawCategories\n    };\n    this.fileName = this.getFileName(((_b = (_a = options) === null || _a === void 0 ? void 0 : _a.exportMenu) === null || _b === void 0 ? void 0 : _b.filename) || chart.title);\n    this.applyExportButtonPanelStyle();\n    this.rect = layout.exportMenu;\n    this.models.exportMenuButton = [{\n      type: 'exportMenuButton',\n      x: 0,\n      y: 0,\n      opened: this.opened,\n      theme: this.theme.button\n    }];\n    this.responders = [{\n      type: 'rect',\n      width: BUTTON_RECT_SIZE,\n      height: BUTTON_RECT_SIZE,\n      x: 0,\n      y: 0\n    }];\n  }\n\n  applyPanelWrapperStyle() {\n    const exportMenu = this.exportMenuEl.querySelector('.toastui-chart-export-menu');\n    const x = this.chartWidth - EXPORT_MENU_WIDTH - padding.X;\n    const y = padding.Y + BUTTON_RECT_SIZE + 5;\n    const {\n      borderRadius,\n      borderWidth,\n      borderColor\n    } = this.theme.panel;\n    const style = `\n      transform: ${getTranslateString(x, y)};\n      border: ${borderWidth}px solid ${borderColor};\n      border-radius: ${borderRadius}px;`;\n    exportMenu.setAttribute('style', style);\n  }\n\n  makePanelStyle(type) {\n    const sectionTheme = this.theme.panel[type];\n    const direction = type === 'header' ? 'top' : 'bottom';\n    const {\n      borderRadius,\n      borderWidth\n    } = this.theme.panel;\n    const borderRadiusPx = `${borderRadius - borderWidth}px`;\n    return [`${getFontStyleString(sectionTheme)}`, `border-${direction}-left-radius: ${borderRadiusPx};`, `border-${direction}-right-radius: ${borderRadiusPx};`, `background-color: ${sectionTheme.backgroundColor};`].join('');\n  }\n\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/component/exportMenu.js"],"names":["Component","isExportMenuVisible","padding","execDownload","downloadSpreadSheet","isString","getFontStyleString","getTranslateString","EXPORT_MENU_WIDTH","BUTTON_RECT_SIZE","ExportMenu","constructor","arguments","models","exportMenuButton","opened","chartWidth","toggleExportMenu","eventBus","emit","applyPanelWrapperStyle","chartEl","appendChild","exportMenuEl","removeChild","getCanvasExportBtnRemoved","canvas","getElementsByTagName","ctx","getContext","x","y","height","h","width","w","rect","chartBackgroundColor","forEach","color","fillStyle","fillRect","onClickExportButton","ev","id","target","fileName","toDataURL","data","applyExportButtonPanelStyle","exportMenuTitle","querySelector","menuBtnWrapper","setAttribute","makePanelStyle","makeExportMenuButton","el","document","createElement","onclick","innerHTML","initialize","type","name","onClick","responders","length","getFileName","title","_a","_b","text","render","options","layout","chart","series","rawCategories","theme","isShow","backgroundColor","exportMenu","categories","filename","button","X","Y","borderRadius","borderWidth","borderColor","panel","style","sectionTheme","direction","borderRadiusPx","join"],"mappings":"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","sourcesContent":["import Component from \"./component\";\nimport { isExportMenuVisible, padding } from \"../store/layout\";\nimport { execDownload, downloadSpreadSheet } from \"../helpers/downloader\";\nimport { isString } from \"../helpers/utils\";\nimport { getFontStyleString, getTranslateString } from \"../helpers/style\";\nconst EXPORT_MENU_WIDTH = 140;\nexport const BUTTON_RECT_SIZE = 24;\nexport default class ExportMenu extends Component {\n    constructor() {\n        super(...arguments);\n        this.models = { exportMenuButton: [] };\n        this.opened = false;\n        this.chartWidth = 0;\n        this.toggleExportMenu = () => {\n            this.opened = !this.opened;\n            this.models.exportMenuButton[0].opened = this.opened;\n            this.eventBus.emit('needDraw');\n            if (this.opened) {\n                this.applyPanelWrapperStyle();\n                this.chartEl.appendChild(this.exportMenuEl);\n            }\n            else {\n                this.chartEl.removeChild(this.exportMenuEl);\n            }\n        };\n        this.getCanvasExportBtnRemoved = () => {\n            const canvas = this.chartEl.getElementsByTagName('canvas')[0];\n            const ctx = canvas.getContext('2d');\n            const { x, y, height: h, width: w } = this.rect;\n            ['#fff', this.chartBackgroundColor].forEach((color) => {\n                ctx.fillStyle = color;\n                ctx.fillRect(x, y, w, h);\n            });\n            return canvas;\n        };\n        this.onClickExportButton = (ev) => {\n            const { id } = ev.target;\n            if (id === 'png' || id === 'jpeg') {\n                const canvas = this.getCanvasExportBtnRemoved();\n                execDownload(this.fileName, id, canvas.toDataURL(`image/${id}`, 1));\n            }\n            else {\n                downloadSpreadSheet(this.fileName, id, this.data);\n            }\n            this.toggleExportMenu();\n        };\n    }\n    applyExportButtonPanelStyle() {\n        const exportMenuTitle = this.exportMenuEl.querySelector('.toastui-chart-export-menu-title');\n        const menuBtnWrapper = this.exportMenuEl.querySelector('.toastui-chart-export-menu-btn-wrapper');\n        exportMenuTitle.setAttribute('style', this.makePanelStyle('header'));\n        menuBtnWrapper.setAttribute('style', this.makePanelStyle('body'));\n    }\n    makeExportMenuButton() {\n        const el = document.createElement('div');\n        el.onclick = this.onClickExportButton;\n        el.innerHTML = `\n        <div class=\"toastui-chart-export-menu\">\n          <p class=\"toastui-chart-export-menu-title\">Export to</p>\n          <div class=\"toastui-chart-export-menu-btn-wrapper\">\n            <button class=\"toastui-chart-export-menu-btn\" id=\"xls\">xls</button>\n            <button class=\"toastui-chart-export-menu-btn\" id=\"csv\">csv</button>\n            <button class=\"toastui-chart-export-menu-btn\" id=\"png\">png</button>\n            <button class=\"toastui-chart-export-menu-btn\" id=\"jpeg\">jpeg</button>\n          </div>\n        </div>\n      `;\n        return el;\n    }\n    initialize({ chartEl }) {\n        this.chartEl = chartEl;\n        this.type = 'exportMenu';\n        this.name = 'exportMenu';\n        this.exportMenuEl = this.makeExportMenuButton();\n    }\n    onClick({ responders }) {\n        if (responders.length) {\n            this.toggleExportMenu();\n        }\n    }\n    getFileName(title) {\n        var _a, _b;\n        return isString(title) ? title : (_b = (_a = title) === null || _a === void 0 ? void 0 : _a.text, (_b !== null && _b !== void 0 ? _b : 'toast-ui-chart'));\n    }\n    render({ options, layout, chart, series, rawCategories, theme }) {\n        var _a, _b;\n        this.isShow = isExportMenuVisible(options);\n        this.chartWidth = chart.width;\n        if (!this.isShow) {\n            return;\n        }\n        this.chartBackgroundColor = theme.chart.backgroundColor;\n        this.theme = theme.exportMenu;\n        this.data = { series, categories: rawCategories };\n        this.fileName = this.getFileName(((_b = (_a = options) === null || _a === void 0 ? void 0 : _a.exportMenu) === null || _b === void 0 ? void 0 : _b.filename) || chart.title);\n        this.applyExportButtonPanelStyle();\n        this.rect = layout.exportMenu;\n        this.models.exportMenuButton = [\n            {\n                type: 'exportMenuButton',\n                x: 0,\n                y: 0,\n                opened: this.opened,\n                theme: this.theme.button,\n            },\n        ];\n        this.responders = [\n            {\n                type: 'rect',\n                width: BUTTON_RECT_SIZE,\n                height: BUTTON_RECT_SIZE,\n                x: 0,\n                y: 0,\n            },\n        ];\n    }\n    applyPanelWrapperStyle() {\n        const exportMenu = this.exportMenuEl.querySelector('.toastui-chart-export-menu');\n        const x = this.chartWidth - EXPORT_MENU_WIDTH - padding.X;\n        const y = padding.Y + BUTTON_RECT_SIZE + 5;\n        const { borderRadius, borderWidth, borderColor } = this.theme.panel;\n        const style = `\n      transform: ${getTranslateString(x, y)};\n      border: ${borderWidth}px solid ${borderColor};\n      border-radius: ${borderRadius}px;`;\n        exportMenu.setAttribute('style', style);\n    }\n    makePanelStyle(type) {\n        const sectionTheme = this.theme.panel[type];\n        const direction = type === 'header' ? 'top' : 'bottom';\n        const { borderRadius, borderWidth } = this.theme.panel;\n        const borderRadiusPx = `${borderRadius - borderWidth}px`;\n        return [\n            `${getFontStyleString(sectionTheme)}`,\n            `border-${direction}-left-radius: ${borderRadiusPx};`,\n            `border-${direction}-right-radius: ${borderRadiusPx};`,\n            `background-color: ${sectionTheme.backgroundColor};`,\n        ].join('');\n    }\n}\n"]},"metadata":{},"sourceType":"module"}