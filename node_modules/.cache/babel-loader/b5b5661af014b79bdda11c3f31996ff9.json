{"ast":null,"code":"import { range } from \"./utils\";\nconst hexRX = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;\nconst rgbRX = /rgb\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3})\\)/;\nconst rgbaRX = /rgba\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3}), ?(1|0?\\.?\\d+)\\)/;\n/**\n * Color map.\n * http://stackoverflow.com/questions/1573053/javascript-function-to-convert-color-names-to-hex-codes\n * http://www.w3schools.com/HTML/html_colornames.asp\n * @ignore\n */\n\nexport const colorMap = {\n  aliceblue: '#f0f8ff',\n  antiquewhite: '#faebd7',\n  aqua: '#00ffff',\n  aquamarine: '#7fffd4',\n  azure: '#f0ffff',\n  beige: '#f5f5dc',\n  bisque: '#ffe4c4',\n  black: '#000000',\n  blanchedalmond: '#ffebcd',\n  blue: '#0000ff',\n  blueviolet: '#8a2be2',\n  brown: '#a52a2a',\n  burlywood: '#deb887',\n  cadetblue: '#5f9ea0',\n  chartreuse: '#7fff00',\n  chocolate: '#d2691e',\n  coral: '#ff7f50',\n  cornflowerblue: '#6495ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cyan: '#00ffff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  darkgreen: '#006400',\n  darkkhaki: '#bdb76b',\n  darkmagenta: '#8b008b',\n  darkolivegreen: '#556b2f',\n  darkorange: '#ff8c00',\n  darkorchid: '#9932cc',\n  darkred: '#8b0000',\n  darksalmon: '#e9967a',\n  darkseagreen: '#8fbc8f',\n  darkslateblue: '#483d8b',\n  darkslategray: '#2f4f4f',\n  darkturquoise: '#00ced1',\n  darkviolet: '#9400d3',\n  deeppink: '#ff1493',\n  deepskyblue: '#00bfff',\n  dimgray: '#696969',\n  dodgerblue: '#1e90ff',\n  firebrick: '#b22222',\n  floralwhite: '#fffaf0',\n  forestgreen: '#228b22',\n  fuchsia: '#ff00ff',\n  gainsboro: '#dcdcdc',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#adff2f',\n  honeydew: '#f0fff0',\n  hotpink: '#ff69b4',\n  indianred: '#cd5c5c',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  khaki: '#f0e68c',\n  lavender: '#e6e6fa',\n  lavenderblush: '#fff0f5',\n  lawngreen: '#7cfc00',\n  lemonchiffon: '#fffacd',\n  lightblue: '#add8e6',\n  lightcoral: '#f08080',\n  lightcyan: '#e0ffff',\n  lightgoldenrodyellow: '#fafad2',\n  lightgrey: '#d3d3d3',\n  lightgreen: '#90ee90',\n  lightpink: '#ffb6c1',\n  lightsalmon: '#ffa07a',\n  lightseagreen: '#20b2aa',\n  lightskyblue: '#87cefa',\n  lightslategray: '#778899',\n  lightsteelblue: '#b0c4de',\n  lightyellow: '#ffffe0',\n  lime: '#00ff00',\n  limegreen: '#32cd32',\n  linen: '#faf0e6',\n  magenta: '#ff00ff',\n  maroon: '#800000',\n  mediumaquamarine: '#66cdaa',\n  mediumblue: '#0000cd',\n  mediumorchid: '#ba55d3',\n  mediumpurple: '#9370d8',\n  mediumseagreen: '#3cb371',\n  mediumslateblue: '#7b68ee',\n  mediumspringgreen: '#00fa9a',\n  mediumturquoise: '#48d1cc',\n  mediumvioletred: '#c71585',\n  midnightblue: '#191970',\n  mintcream: '#f5fffa',\n  mistyrose: '#ffe4e1',\n  moccasin: '#ffe4b5',\n  navajowhite: '#ffdead',\n  navy: '#000080',\n  oldlace: '#fdf5e6',\n  olive: '#808000',\n  olivedrab: '#6b8e23',\n  orange: '#ffa500',\n  orangered: '#ff4500',\n  orchid: '#da70d6',\n  palegoldenrod: '#eee8aa',\n  palegreen: '#98fb98',\n  paleturquoise: '#afeeee',\n  palevioletred: '#d87093',\n  papayawhip: '#ffefd5',\n  peachpuff: '#ffdab9',\n  peru: '#cd853f',\n  pink: '#ffc0cb',\n  plum: '#dda0dd',\n  powderblue: '#b0e0e6',\n  purple: '#800080',\n  red: '#ff0000',\n  rosybrown: '#bc8f8f',\n  royalblue: '#4169e1',\n  saddlebrown: '#8b4513',\n  salmon: '#fa8072',\n  sandybrown: '#f4a460',\n  seagreen: '#2e8b57',\n  seashell: '#fff5ee',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  skyblue: '#87ceeb',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  snow: '#fffafa',\n  springgreen: '#00ff7f',\n  steelblue: '#4682b4',\n  tan: '#d2b48c',\n  teal: '#008080',\n  thistle: '#d8bfd8',\n  tomato: '#ff6347',\n  turquoise: '#40e0d0',\n  violet: '#ee82ee',\n  wheat: '#f5deb3',\n  white: '#ffffff',\n  whitesmoke: '#f5f5f5',\n  yellow: '#ffff00',\n  yellowgreen: '#9acd32'\n};\n\nfunction leadingZero(number, length) {\n  if (number.length > length) {\n    return number;\n  }\n\n  let res = number;\n  range(0, length - 1).forEach(_ => {\n    res = '0' + res;\n  });\n  return res.slice(length * -1);\n}\n\nfunction isValidRGB(str) {\n  return hexRX.test(str);\n}\n\nfunction colorNameToHex(colorName) {\n  return colorMap[colorName.toLowerCase()] || colorName;\n} // @license RGB <-> HSV conversion utilities based off of http://www.cs.rit.edu/~ncs/color/t_convert.html\n\n\nexport function hexToRGB(str) {\n  const hexStr = colorNameToHex(str);\n\n  if (!isValidRGB(hexStr)) {\n    return false;\n  }\n\n  return hexStr.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, (m, r, g, b) => '#' + r + r + g + g + b + b).substring(1).match(/.{2}/g).map(x => parseInt(x, 16));\n}\nexport function rgbToHEX(r, g, b) {\n  const hexPreFix = '#';\n  const hexStr = hexPreFix + leadingZero(r.toString(16), 2) + leadingZero(g.toString(16), 2) + leadingZero(b.toString(16), 2);\n\n  if (isValidRGB(hexStr)) {\n    return hexStr;\n  }\n\n  return false;\n}\nexport function getRGBA(str, opacity) {\n  const hexStr = colorNameToHex(str);\n\n  if (isValidRGB(hexStr)) {\n    const [r, g, b] = hexToRGB(hexStr);\n    return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n  }\n\n  if (rgbRX.test(str)) {\n    const match = rgbRX.exec(str);\n    return `rgba(${match[1]}, ${match[2]}, ${match[3]}, ${opacity})`;\n  }\n\n  if (rgbaRX.test(str)) {\n    const match = rgbaRX.exec(str);\n    return `rgba(${match[1]}, ${match[2]}, ${match[3]}, ${opacity})`;\n  }\n\n  return str;\n}\nexport function getAlpha(str) {\n  if (rgbaRX.test(str)) {\n    const match = rgbaRX.exec(str);\n    return Number(match[4]);\n  }\n\n  return 1;\n}\nexport function rgba(color, opacity = 1) {\n  const alpha = getAlpha(color) * opacity;\n  return getRGBA(color, alpha);\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/helpers/color.js"],"names":["range","hexRX","rgbRX","rgbaRX","colorMap","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","leadingZero","number","length","res","forEach","_","slice","isValidRGB","str","test","colorNameToHex","colorName","toLowerCase","hexToRGB","hexStr","replace","m","r","g","b","substring","match","map","x","parseInt","rgbToHEX","hexPreFix","toString","getRGBA","opacity","exec","getAlpha","Number","rgba","color","alpha"],"mappings":"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","sourcesContent":["import { range } from \"./utils\";\nconst hexRX = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;\nconst rgbRX = /rgb\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3})\\)/;\nconst rgbaRX = /rgba\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3}), ?(1|0?\\.?\\d+)\\)/;\n/**\n * Color map.\n * http://stackoverflow.com/questions/1573053/javascript-function-to-convert-color-names-to-hex-codes\n * http://www.w3schools.com/HTML/html_colornames.asp\n * @ignore\n */\nexport const colorMap = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgrey: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370d8',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#d87093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n};\nfunction leadingZero(number, length) {\n    if (number.length > length) {\n        return number;\n    }\n    let res = number;\n    range(0, length - 1).forEach((_) => {\n        res = '0' + res;\n    });\n    return res.slice(length * -1);\n}\nfunction isValidRGB(str) {\n    return hexRX.test(str);\n}\nfunction colorNameToHex(colorName) {\n    return colorMap[colorName.toLowerCase()] || colorName;\n}\n// @license RGB <-> HSV conversion utilities based off of http://www.cs.rit.edu/~ncs/color/t_convert.html\nexport function hexToRGB(str) {\n    const hexStr = colorNameToHex(str);\n    if (!isValidRGB(hexStr)) {\n        return false;\n    }\n    return hexStr\n        .replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, (m, r, g, b) => '#' + r + r + g + g + b + b)\n        .substring(1)\n        .match(/.{2}/g)\n        .map((x) => parseInt(x, 16));\n}\nexport function rgbToHEX(r, g, b) {\n    const hexPreFix = '#';\n    const hexStr = hexPreFix +\n        leadingZero(r.toString(16), 2) +\n        leadingZero(g.toString(16), 2) +\n        leadingZero(b.toString(16), 2);\n    if (isValidRGB(hexStr)) {\n        return hexStr;\n    }\n    return false;\n}\nexport function getRGBA(str, opacity) {\n    const hexStr = colorNameToHex(str);\n    if (isValidRGB(hexStr)) {\n        const [r, g, b] = hexToRGB(hexStr);\n        return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n    }\n    if (rgbRX.test(str)) {\n        const match = rgbRX.exec(str);\n        return `rgba(${match[1]}, ${match[2]}, ${match[3]}, ${opacity})`;\n    }\n    if (rgbaRX.test(str)) {\n        const match = rgbaRX.exec(str);\n        return `rgba(${match[1]}, ${match[2]}, ${match[3]}, ${opacity})`;\n    }\n    return str;\n}\nexport function getAlpha(str) {\n    if (rgbaRX.test(str)) {\n        const match = rgbaRX.exec(str);\n        return Number(match[4]);\n    }\n    return 1;\n}\nexport function rgba(color, opacity = 1) {\n    const alpha = getAlpha(color) * opacity;\n    return getRGBA(color, alpha);\n}\n"]},"metadata":{},"sourceType":"module"}