{"ast":null,"code":"import { observable, observe, notify, notifyByPath, computed, watch, extend as reactiveExtend, invisibleWork } from \"./reactive\";\nimport { isUndefined, forEach, pickPropertyWithMakeup, deepCopy } from \"../helpers/utils\";\nexport default class Store {\n  constructor(initStoreState) {\n    this.computed = {};\n    this.actions = {};\n    this.initStoreState = deepCopy(initStoreState);\n    this.setRootState({});\n  }\n\n  setRootState(state) {\n    observable(state);\n    this.state = state;\n  }\n\n  setComputed(namePath, fn, holder = this.computed) {\n    const splited = namePath.split('.');\n    const key = splited.splice(splited.length - 1, 1)[0];\n    const target = pickPropertyWithMakeup(holder, splited);\n    computed(target, key, fn.bind(null, this.state, this.computed));\n  }\n\n  setWatch(namePath, fn) {\n    return watch(this, namePath, fn);\n  }\n\n  setAction(name, fn) {\n    this.actions[name] = fn;\n  }\n\n  dispatch(name, payload, isInvisible) {\n    // observe.setlayout 안에서 setLayout 액션이 실행되니까 여기서 state.layout getter가 실행되고\n    // state.layout의 옵져버로 observe.setLayout이 등록된다. 여기서 무한루프\n    // 즉 observe하고 안에서 특정 대상을 쓸때\n    // extend(state.layout, layouts); 이런식으로 하게되면 layout의 getter실행되어\n    // layout을 업데이트하려고 만든 observe를 옵저버로 등록해서 무한루프\n    if (isInvisible) {\n      invisibleWork(() => {\n        // console.log('dispatch', name, ...args);\n        this.actions[name].call(this, this, payload); // console.log('dispatch end', name);\n      });\n    } else {\n      this.actions[name].call(this, this, payload);\n    }\n  }\n\n  observe(fn) {\n    return observe(fn.bind(this, this.state, this.computed));\n  }\n\n  observable(target) {\n    return observable(target);\n  }\n\n  notifyByPath(namePath) {\n    notifyByPath(this, namePath);\n  }\n\n  notify(target, key) {\n    notify(target, key);\n  }\n\n  setModule(name, param) {\n    if (!param) {\n      param = name;\n      name = param.name;\n    }\n\n    if (param.state) {\n      const moduleState = typeof param.state === 'function' ? param.state(this.initStoreState) : param.state;\n      extend(this.state, moduleState);\n    }\n\n    if (param.computed) {\n      forEach(param.computed, (item, key) => {\n        this.setComputed(key, item);\n      });\n    }\n\n    if (param.watch) {\n      forEach(param.watch, (item, key) => {\n        this.setWatch(key, item);\n      });\n    }\n\n    if (param.action) {\n      forEach(param.action, (item, key) => {\n        this.setAction(key, item);\n      });\n    }\n\n    if (param.observe) {\n      forEach(param.observe, item => {\n        this.observe(item);\n      });\n    }\n  }\n\n  setValue(target, key, source) {\n    extend(target, {\n      [key]: source\n    });\n  }\n\n}\nexport function extend(target, source) {\n  const newItems = {};\n\n  for (const k in source) {\n    if (!source.hasOwnProperty(k)) {\n      continue;\n    }\n\n    if (!isUndefined(target[k])) {\n      if (typeof source[k] === 'object' && !Array.isArray(source[k])) {\n        extend(target[k], source[k]);\n      } else {\n        target[k] = source[k];\n      }\n    } else {\n      newItems[k] = source[k];\n    }\n  }\n\n  if (Object.keys(newItems).length) {\n    reactiveExtend(target, newItems);\n  }\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/store/store.js"],"names":["observable","observe","notify","notifyByPath","computed","watch","extend","reactiveExtend","invisibleWork","isUndefined","forEach","pickPropertyWithMakeup","deepCopy","Store","constructor","initStoreState","actions","setRootState","state","setComputed","namePath","fn","holder","splited","split","key","splice","length","target","bind","setWatch","setAction","name","dispatch","payload","isInvisible","call","setModule","param","moduleState","item","action","setValue","source","newItems","k","hasOwnProperty","Array","isArray","Object","keys"],"mappings":"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","sourcesContent":["import { observable, observe, notify, notifyByPath, computed, watch, extend as reactiveExtend, invisibleWork, } from \"./reactive\";\nimport { isUndefined, forEach, pickPropertyWithMakeup, deepCopy } from \"../helpers/utils\";\nexport default class Store {\n    constructor(initStoreState) {\n        this.computed = {};\n        this.actions = {};\n        this.initStoreState = deepCopy(initStoreState);\n        this.setRootState({});\n    }\n    setRootState(state) {\n        observable(state);\n        this.state = state;\n    }\n    setComputed(namePath, fn, holder = this.computed) {\n        const splited = namePath.split('.');\n        const key = splited.splice(splited.length - 1, 1)[0];\n        const target = pickPropertyWithMakeup(holder, splited);\n        computed(target, key, fn.bind(null, this.state, this.computed));\n    }\n    setWatch(namePath, fn) {\n        return watch(this, namePath, fn);\n    }\n    setAction(name, fn) {\n        this.actions[name] = fn;\n    }\n    dispatch(name, payload, isInvisible) {\n        // observe.setlayout 안에서 setLayout 액션이 실행되니까 여기서 state.layout getter가 실행되고\n        // state.layout의 옵져버로 observe.setLayout이 등록된다. 여기서 무한루프\n        // 즉 observe하고 안에서 특정 대상을 쓸때\n        // extend(state.layout, layouts); 이런식으로 하게되면 layout의 getter실행되어\n        // layout을 업데이트하려고 만든 observe를 옵저버로 등록해서 무한루프\n        if (isInvisible) {\n            invisibleWork(() => {\n                // console.log('dispatch', name, ...args);\n                this.actions[name].call(this, this, payload);\n                // console.log('dispatch end', name);\n            });\n        }\n        else {\n            this.actions[name].call(this, this, payload);\n        }\n    }\n    observe(fn) {\n        return observe(fn.bind(this, this.state, this.computed));\n    }\n    observable(target) {\n        return observable(target);\n    }\n    notifyByPath(namePath) {\n        notifyByPath(this, namePath);\n    }\n    notify(target, key) {\n        notify(target, key);\n    }\n    setModule(name, param) {\n        if (!param) {\n            param = name;\n            name = param.name;\n        }\n        if (param.state) {\n            const moduleState = typeof param.state === 'function' ? param.state(this.initStoreState) : param.state;\n            extend(this.state, moduleState);\n        }\n        if (param.computed) {\n            forEach(param.computed, (item, key) => {\n                this.setComputed(key, item);\n            });\n        }\n        if (param.watch) {\n            forEach(param.watch, (item, key) => {\n                this.setWatch(key, item);\n            });\n        }\n        if (param.action) {\n            forEach(param.action, (item, key) => {\n                this.setAction(key, item);\n            });\n        }\n        if (param.observe) {\n            forEach(param.observe, (item) => {\n                this.observe(item);\n            });\n        }\n    }\n    setValue(target, key, source) {\n        extend(target, {\n            [key]: source,\n        });\n    }\n}\nexport function extend(target, source) {\n    const newItems = {};\n    for (const k in source) {\n        if (!source.hasOwnProperty(k)) {\n            continue;\n        }\n        if (!isUndefined(target[k])) {\n            if (typeof source[k] === 'object' && !Array.isArray(source[k])) {\n                extend(target[k], source[k]);\n            }\n            else {\n                target[k] = source[k];\n            }\n        }\n        else {\n            newItems[k] = source[k];\n        }\n    }\n    if (Object.keys(newItems).length) {\n        reactiveExtend(target, newItems);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}