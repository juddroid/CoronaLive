{"ast":null,"code":"var _jsxFileName = \"/Users/raccoon/Desktop/fe-w6-free-style/src/components/MainLayout/SectionChart/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { LineChart } from '@toast-ui/react-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart() {\n  _s();\n\n  const data = {\n    categories: ['0', '0', '0', '0', '0', '0'],\n    series: [{\n      name: 'today',\n      data: [0, 0, 0, 0, 0, 0]\n    }, {\n      name: 'yesterday',\n      data: [0, 0, 0, 0, 0, 0]\n    }]\n  };\n  const options = {\n    chart: {\n      width: 490,\n      height: 400,\n      title: 'Corona Live',\n      format: '1,000'\n    },\n    yAxis: {\n      title: 'count'\n    },\n    xAxis: {\n      title: 'time'\n    },\n    series: {\n      showLabel: true\n    },\n    theme: {\n      chart: {\n        fontFamily: 'Noto Sans KR',\n        backgroundColor: 'rgb(25, 31, 44)'\n      },\n      title: {\n        fontFamily: 'Noto Sans KR',\n        fontSize: 12,\n        fontWeight: 100,\n        color: '#fff'\n      },\n      xAxis: {\n        title: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff'\n        },\n        label: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff'\n        },\n        width: 2,\n        color: '#fff'\n      },\n      yAxis: {\n        title: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff'\n        },\n        label: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff'\n        },\n        width: 2,\n        color: '#fff'\n      }\n    }\n  };\n  const [updateData, setUpdateData] = useState(data);\n\n  async function fetchData() {\n    const request = `/domestic-init.json`;\n    const response = await axios.get(request);\n    const data = response.data.timeseries;\n\n    const timeArr = key => Object.keys(key);\n\n    const countArr = value => Object.values(value);\n\n    setUpdateData({\n      categories: timeArr(data.today),\n      series: [{\n        name: 'today',\n        data: countArr(data.today)\n      }, {\n        name: 'yesterday',\n        data: countArr(data.yesterday)\n      }]\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chart\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: updateData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"w+O0LBX+N5UcKOfYzMk9Lc3DbyE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/src/components/MainLayout/SectionChart/Chart.js"],"names":["React","useState","useEffect","axios","LineChart","Chart","data","categories","series","name","options","chart","width","height","title","format","yAxis","xAxis","showLabel","theme","fontFamily","backgroundColor","fontSize","fontWeight","color","label","updateData","setUpdateData","fetchData","request","response","get","timeseries","timeArr","key","Object","keys","countArr","value","values","today","yesterday"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { LineChart } from '@toast-ui/react-chart';\n\nfunction Chart() {\n  const data = {\n    categories: ['0', '0', '0', '0', '0', '0'],\n    series: [\n      {\n        name: 'today',\n        data: [0, 0, 0, 0, 0, 0],\n      },\n      {\n        name: 'yesterday',\n        data: [0, 0, 0, 0, 0, 0],\n      },\n    ],\n  };\n\n  const options = {\n    chart: {\n      width: 490,\n      height: 400,\n      title: 'Corona Live',\n      format: '1,000',\n    },\n    yAxis: {\n      title: 'count',\n    },\n    xAxis: {\n      title: 'time',\n    },\n    series: {\n      showLabel: true,\n    },\n    theme: {\n      chart: {\n        fontFamily: 'Noto Sans KR',\n        backgroundColor: 'rgb(25, 31, 44)',\n      },\n      title: {\n        fontFamily: 'Noto Sans KR',\n        fontSize: 12,\n        fontWeight: 100,\n        color: '#fff',\n      },\n      xAxis: {\n        title: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff',\n        },\n        label: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff',\n        },\n        width: 2,\n        color: '#fff',\n      },\n      yAxis: {\n        title: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff',\n        },\n        label: {\n          fontFamily: 'Noto Sans KR',\n          color: '#fff',\n        },\n        width: 2,\n        color: '#fff',\n      },\n    },\n  };\n\n  const [updateData, setUpdateData] = useState(data);\n\n  async function fetchData() {\n    const request = `/domestic-init.json`;\n    const response = await axios.get(request);\n    const data = response.data.timeseries;\n\n    const timeArr = (key) => Object.keys(key);\n    const countArr = (value) => Object.values(value);\n\n    setUpdateData({\n      categories: timeArr(data.today),\n      series: [\n        {\n          name: 'today',\n          data: countArr(data.today),\n        },\n        {\n          name: 'yesterday',\n          data: countArr(data.yesterday),\n        },\n      ],\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"Chart\">\n      <LineChart data={updateData} options={options} />\n    </div>\n  );\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}