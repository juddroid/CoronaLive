{"ast":null,"code":"import Component from \"./component\";\nimport { getValueString } from \"../helpers/tooltip\";\nimport { getBodyTemplate, tooltipTemplates } from \"../helpers/tooltipTemplate\";\nimport { isBoolean, isNumber, isString } from \"../helpers/utils\";\nimport { getTranslateString } from \"../helpers/style\";\nimport { sanitizeHTML } from \"../helpers/htmlSanitizer\";\nconst DEFAULT_TOOLTIP_TRANSITION = 'transform 0.2s ease';\nexport default class Tooltip extends Component {\n  constructor() {\n    super(...arguments);\n    this.tooltipInfoModels = {};\n\n    this.onSeriesPointHovered = ({\n      models,\n      name\n    }) => {\n      var _a;\n\n      this.tooltipInfoModels[name] = ((_a = models) === null || _a === void 0 ? void 0 : _a.length) ? [...models] : [];\n      const isShow = !!this.getTooltipInfoModels().length;\n\n      if (isShow) {\n        this.renderTooltip();\n      } else {\n        this.removeTooltip();\n      }\n    };\n  }\n\n  isTooltipContainerOverflow(x, y) {\n    const {\n      width,\n      height\n    } = this.tooltipContainerEl.getBoundingClientRect();\n    const {\n      x: rectX,\n      y: rectY,\n      width: rectWidth,\n      height: rectHeight\n    } = this.rect;\n    return {\n      overflowX: x > rectX + rectWidth || x + width > rectX + rectWidth,\n      overflowY: y > rectY + rectHeight || y + height > rectY + rectHeight\n    };\n  }\n\n  getPositionInRect(model) {\n    const {\n      target\n    } = model;\n    const startX = this.rect.x + model.x;\n    const startY = this.rect.y + model.y;\n    let x = startX + target.radius + target.width + this.offsetX;\n    let y = startY + this.offsetY;\n    const {\n      overflowX,\n      overflowY\n    } = this.isTooltipContainerOverflow(x, y);\n    const {\n      width,\n      height\n    } = this.tooltipContainerEl.getBoundingClientRect();\n\n    if (overflowX) {\n      x = startX - (width + target.radius + this.offsetX) > 0 ? startX - (width + target.radius + this.offsetX) : startX + this.offsetX;\n    }\n\n    if (overflowY) {\n      y = startY + target.height - (height + this.offsetY) > 0 ? startY + target.height - (height + this.offsetY) : y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n  setTooltipPosition(model) {\n    const {\n      x,\n      y\n    } = this.getPositionInRect(model);\n    this.tooltipContainerEl.style.transform = getTranslateString(x, y);\n  }\n\n  getTooltipInfoModels() {\n    return Object.values(this.tooltipInfoModels).flatMap(item => item);\n  }\n\n  renderTooltip() {\n    const model = this.getTooltipInfoModels().reduce((acc, item) => {\n      const {\n        data,\n        x,\n        y,\n        radius,\n        width,\n        height\n      } = item;\n      acc.x = acc.x ? (acc.x + x) / 2 : x;\n      acc.y = acc.y ? (acc.y + y) / 2 : y;\n\n      if (isNumber(radius)) {\n        acc.target.radius = radius;\n      }\n\n      if (width) {\n        acc.target.width = width;\n      }\n\n      if (height) {\n        acc.target.height = height;\n      }\n\n      acc.data.push(Object.assign(Object.assign({}, data), {\n        value: Array.isArray(data.value) ? data.value.map(titleValue => Object.assign(Object.assign({}, titleValue), {\n          formattedValue: this.getFormattedValue(titleValue.value, data)\n        })) : data.value,\n        formattedValue: this.getFormattedValue(data.value, data)\n      }));\n\n      if (!acc.category && data.category) {\n        acc.category = data.category;\n      }\n\n      if (data.templateType) {\n        acc.templateType = data.templateType;\n      }\n\n      return acc;\n    }, {\n      type: 'tooltip',\n      x: 0,\n      y: 0,\n      data: [],\n      target: {\n        radius: 0,\n        width: 0,\n        height: 0\n      }\n    });\n    this.tooltipContainerEl.innerHTML = sanitizeHTML(this.templateFunc(model, {\n      header: tooltipTemplates.defaultHeader(model, this.theme),\n      body: getBodyTemplate(model.templateType)(model, this.theme)\n    }, this.theme));\n    this.setTooltipPosition(model);\n  }\n\n  initialize({\n    chartEl\n  }) {\n    this.type = 'tooltip';\n    this.name = 'tooltip';\n    this.chartEl = chartEl;\n    this.tooltipContainerEl = document.createElement('div');\n    this.tooltipContainerEl.classList.add('toastui-chart-tooltip-container');\n    const {\n      width,\n      height,\n      top,\n      left\n    } = this.chartEl.getBoundingClientRect();\n    this.tooltipContainerEl.style.transform = getTranslateString(left + width / 2, top + height / 2);\n    this.chartEl.appendChild(this.tooltipContainerEl);\n    this.eventBus.on('seriesPointHovered', this.onSeriesPointHovered);\n  }\n\n  removeTooltip() {\n    this.tooltipContainerEl.innerHTML = '';\n  }\n\n  setTooltipTransition(options) {\n    var _a;\n\n    const transition = (_a = options.tooltip) === null || _a === void 0 ? void 0 : _a.transition;\n\n    if (isBoolean(transition) && transition) {\n      this.tooltipContainerEl.style.transition = DEFAULT_TOOLTIP_TRANSITION;\n    } else if (isString(transition)) {\n      this.tooltipContainerEl.style.transition = transition;\n    }\n  }\n\n  render({\n    layout,\n    options,\n    theme\n  }) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n\n    this.setTooltipTransition(options);\n    this.rect = layout.plot;\n    this.theme = theme.tooltip;\n    this.templateFunc = (_c = (_b = (_a = options) === null || _a === void 0 ? void 0 : _a.tooltip) === null || _b === void 0 ? void 0 : _b.template, _c !== null && _c !== void 0 ? _c : tooltipTemplates['default']);\n    this.offsetX = (_f = (_e = (_d = options) === null || _d === void 0 ? void 0 : _d.tooltip) === null || _e === void 0 ? void 0 : _e.offsetX, _f !== null && _f !== void 0 ? _f : 10);\n    this.offsetY = (_j = (_h = (_g = options) === null || _g === void 0 ? void 0 : _g.tooltip) === null || _h === void 0 ? void 0 : _h.offsetY, _j !== null && _j !== void 0 ? _j : 0);\n    this.formatter = (_l = (_k = options) === null || _k === void 0 ? void 0 : _k.tooltip) === null || _l === void 0 ? void 0 : _l.formatter;\n  }\n\n  getFormattedValue(value, tooltipDataInfo) {\n    return this.formatter ? this.formatter(value, tooltipDataInfo) : getValueString(value);\n  }\n\n}","map":{"version":3,"sources":["/Users/raccoon/Desktop/fe-w6-free-style/node_modules/@toast-ui/chart/dist/esm/component/tooltip.js"],"names":["Component","getValueString","getBodyTemplate","tooltipTemplates","isBoolean","isNumber","isString","getTranslateString","sanitizeHTML","DEFAULT_TOOLTIP_TRANSITION","Tooltip","constructor","arguments","tooltipInfoModels","onSeriesPointHovered","models","name","_a","length","isShow","getTooltipInfoModels","renderTooltip","removeTooltip","isTooltipContainerOverflow","x","y","width","height","tooltipContainerEl","getBoundingClientRect","rectX","rectY","rectWidth","rectHeight","rect","overflowX","overflowY","getPositionInRect","model","target","startX","startY","radius","offsetX","offsetY","setTooltipPosition","style","transform","Object","values","flatMap","item","reduce","acc","data","push","assign","value","Array","isArray","map","titleValue","formattedValue","getFormattedValue","category","templateType","type","innerHTML","templateFunc","header","defaultHeader","theme","body","initialize","chartEl","document","createElement","classList","add","top","left","appendChild","eventBus","on","setTooltipTransition","options","transition","tooltip","render","layout","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","plot","template","formatter","tooltipDataInfo"],"mappings":"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","sourcesContent":["import Component from \"./component\";\nimport { getValueString } from \"../helpers/tooltip\";\nimport { getBodyTemplate, tooltipTemplates } from \"../helpers/tooltipTemplate\";\nimport { isBoolean, isNumber, isString } from \"../helpers/utils\";\nimport { getTranslateString } from \"../helpers/style\";\nimport { sanitizeHTML } from \"../helpers/htmlSanitizer\";\nconst DEFAULT_TOOLTIP_TRANSITION = 'transform 0.2s ease';\nexport default class Tooltip extends Component {\n    constructor() {\n        super(...arguments);\n        this.tooltipInfoModels = {};\n        this.onSeriesPointHovered = ({ models, name }) => {\n            var _a;\n            this.tooltipInfoModels[name] = ((_a = models) === null || _a === void 0 ? void 0 : _a.length) ? [...models] : [];\n            const isShow = !!this.getTooltipInfoModels().length;\n            if (isShow) {\n                this.renderTooltip();\n            }\n            else {\n                this.removeTooltip();\n            }\n        };\n    }\n    isTooltipContainerOverflow(x, y) {\n        const { width, height } = this.tooltipContainerEl.getBoundingClientRect();\n        const { x: rectX, y: rectY, width: rectWidth, height: rectHeight } = this.rect;\n        return {\n            overflowX: x > rectX + rectWidth || x + width > rectX + rectWidth,\n            overflowY: y > rectY + rectHeight || y + height > rectY + rectHeight,\n        };\n    }\n    getPositionInRect(model) {\n        const { target } = model;\n        const startX = this.rect.x + model.x;\n        const startY = this.rect.y + model.y;\n        let x = startX + target.radius + target.width + this.offsetX;\n        let y = startY + this.offsetY;\n        const { overflowX, overflowY } = this.isTooltipContainerOverflow(x, y);\n        const { width, height } = this.tooltipContainerEl.getBoundingClientRect();\n        if (overflowX) {\n            x =\n                startX - (width + target.radius + this.offsetX) > 0\n                    ? startX - (width + target.radius + this.offsetX)\n                    : startX + this.offsetX;\n        }\n        if (overflowY) {\n            y =\n                startY + target.height - (height + this.offsetY) > 0\n                    ? startY + target.height - (height + this.offsetY)\n                    : y;\n        }\n        return { x, y };\n    }\n    setTooltipPosition(model) {\n        const { x, y } = this.getPositionInRect(model);\n        this.tooltipContainerEl.style.transform = getTranslateString(x, y);\n    }\n    getTooltipInfoModels() {\n        return Object.values(this.tooltipInfoModels).flatMap((item) => item);\n    }\n    renderTooltip() {\n        const model = this.getTooltipInfoModels().reduce((acc, item) => {\n            const { data, x, y, radius, width, height } = item;\n            acc.x = acc.x ? (acc.x + x) / 2 : x;\n            acc.y = acc.y ? (acc.y + y) / 2 : y;\n            if (isNumber(radius)) {\n                acc.target.radius = radius;\n            }\n            if (width) {\n                acc.target.width = width;\n            }\n            if (height) {\n                acc.target.height = height;\n            }\n            acc.data.push(Object.assign(Object.assign({}, data), { value: Array.isArray(data.value)\n                    ? data.value.map((titleValue) => (Object.assign(Object.assign({}, titleValue), { formattedValue: this.getFormattedValue(titleValue.value, data) })))\n                    : data.value, formattedValue: this.getFormattedValue(data.value, data) }));\n            if (!acc.category && data.category) {\n                acc.category = data.category;\n            }\n            if (data.templateType) {\n                acc.templateType = data.templateType;\n            }\n            return acc;\n        }, { type: 'tooltip', x: 0, y: 0, data: [], target: { radius: 0, width: 0, height: 0 } });\n        this.tooltipContainerEl.innerHTML = sanitizeHTML(this.templateFunc(model, {\n            header: tooltipTemplates.defaultHeader(model, this.theme),\n            body: getBodyTemplate(model.templateType)(model, this.theme),\n        }, this.theme));\n        this.setTooltipPosition(model);\n    }\n    initialize({ chartEl }) {\n        this.type = 'tooltip';\n        this.name = 'tooltip';\n        this.chartEl = chartEl;\n        this.tooltipContainerEl = document.createElement('div');\n        this.tooltipContainerEl.classList.add('toastui-chart-tooltip-container');\n        const { width, height, top, left } = this.chartEl.getBoundingClientRect();\n        this.tooltipContainerEl.style.transform = getTranslateString(left + width / 2, top + height / 2);\n        this.chartEl.appendChild(this.tooltipContainerEl);\n        this.eventBus.on('seriesPointHovered', this.onSeriesPointHovered);\n    }\n    removeTooltip() {\n        this.tooltipContainerEl.innerHTML = '';\n    }\n    setTooltipTransition(options) {\n        var _a;\n        const transition = (_a = options.tooltip) === null || _a === void 0 ? void 0 : _a.transition;\n        if (isBoolean(transition) && transition) {\n            this.tooltipContainerEl.style.transition = DEFAULT_TOOLTIP_TRANSITION;\n        }\n        else if (isString(transition)) {\n            this.tooltipContainerEl.style.transition = transition;\n        }\n    }\n    render({ layout, options, theme }) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        this.setTooltipTransition(options);\n        this.rect = layout.plot;\n        this.theme = theme.tooltip;\n        this.templateFunc = (_c = (_b = (_a = options) === null || _a === void 0 ? void 0 : _a.tooltip) === null || _b === void 0 ? void 0 : _b.template, (_c !== null && _c !== void 0 ? _c : tooltipTemplates['default']));\n        this.offsetX = (_f = (_e = (_d = options) === null || _d === void 0 ? void 0 : _d.tooltip) === null || _e === void 0 ? void 0 : _e.offsetX, (_f !== null && _f !== void 0 ? _f : 10));\n        this.offsetY = (_j = (_h = (_g = options) === null || _g === void 0 ? void 0 : _g.tooltip) === null || _h === void 0 ? void 0 : _h.offsetY, (_j !== null && _j !== void 0 ? _j : 0));\n        this.formatter = (_l = (_k = options) === null || _k === void 0 ? void 0 : _k.tooltip) === null || _l === void 0 ? void 0 : _l.formatter;\n    }\n    getFormattedValue(value, tooltipDataInfo) {\n        return this.formatter\n            ? this.formatter(value, tooltipDataInfo)\n            : getValueString(value);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}